% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Concordance.R
\name{SiteConcordance}
\alias{SiteConcordance}
\alias{QuartetConcordance}
\alias{ClusteringConcordance}
\alias{PhylogeneticConcordance}
\alias{MutualClusteringConcordance}
\alias{SharedPhylogeneticConcordance}
\title{Calculate site concordance factor}
\usage{
QuartetConcordance(tree, dataset = NULL, method = "split", n = 250)

ClusteringConcordance(tree, dataset)

PhylogeneticConcordance(tree, dataset)

MutualClusteringConcordance(tree, dataset)

SharedPhylogeneticConcordance(tree, dataset)
}
\arguments{
\item{tree}{A tree of class \code{\link[ape:read.tree]{phylo}}.}

\item{dataset}{A phylogenetic data matrix of \pkg{phangorn} class
\code{phyDat}, whose names correspond to the labels of any accompanying tree.
Perhaps load into R using \code{\link[TreeTools]{ReadAsPhyDat}}.
Additive (ordered) characters can be handled using
\code{\link[TreeTools]{Decompose}}.}

\item{method}{Character vector specifying which concordance measures to
calculate.  See details section for available options.}
}
\description{
The site concordance factor is a measure
of the strength of support that the dataset presents for a given split in a
tree.
}
\details{
\code{QuartetConcordance()} is the proportion of quartets (sets of four leaves)
that are decisive for a split which are also concordant with it.
For example, a quartet with the characters \verb{0 0 0 1} is not decisive, as
all relationships between those leaves are equally parsimonious.
But a quartet with characters \verb{0 0 1 1} is decisive, and is concordant
with any tree that groups the first two leaves together to the exclusion
of the second.

The \code{methods} argument selects from different methods for quantifying the
concordance associated with a given edge of a tree.

If \code{method = "split"} (the default), the concordance is calculated by
counting all quartets that are decisive for a split, i.e. for the split
$A|B$, any quartet that contains two leaves from set $A$ and two from set $B$.
This value can be interpreted as the proportion of all decisive quartets
that are concordant with a split.
If \code{method = "sitemean"}, the reported value is the mean of the concordance
value for each site.
Consider a split associated with two sites:
one that is concordant with 25\% of 96 decisive quartets, and
a second that is concordant with 75\% of 4 decisive quartets.
\code{method = "split"} returns a value of 24 + 3 / 96 + 4 = 27\%.
\code{method = "sitemean"} returns mean(75\%, 25\%) = 50\%.

\code{method = "minh"} uses the approach of
\insertCite{Minh2020;textual}{TreeSearch} to compute the site concordance
factor.
Briefly, this interprets each edge as defining \emph{four} clades, and counts
the status of quartets that contain exactly one leaf from each of these
clades.  This is a subset of the quartets considered by other methods.
\code{method = "iqtree"} uses the \insertCite{Minh2020;textual}{TreeSearch}
approach as \href{https://github.com/iqtree/iqtree2/issues/415}{implemented in IQ-TREE}.

\code{QuartetConcordance()} is computed exactly, using all quartets.
Other implementations (e.g. IQ-TREE) follow
\insertCite{@Minh2020;textual}{TreeSearch} in using a random subsample
of quartets for a faster computation, potentially at the expense of accuracy.

For an overview of the use and interpretation of concordance factors,
see \insertCite{Lanfear2024}{TreeSearch}.

\strong{NOTE:} These functions are under development. They are incompletely
tested, and may change without notice.
Complete documentation and discussion will follow in due course.
}
\examples{
data("congreveLamsdellMatrices", package = "TreeSearch")
dataset <- congreveLamsdellMatrices[[1]][, 1:20]
tree <- referenceTree
qc <- QuartetConcordance(tree, dataset)
cc <- ClusteringConcordance(tree, dataset)
pc <- PhylogeneticConcordance(tree, dataset)
spc <- SharedPhylogeneticConcordance(tree, dataset)
mcc <- MutualClusteringConcordance(tree, dataset)

oPar <- par(mar = rep(0, 4), cex = 0.8) # Set plotting parameters
plot(tree)
TreeTools::LabelSplits(tree, signif(qc, 3), cex = 0.8)
plot(tree)
TreeTools::LabelSplits(tree, signif(cc, 3), cex = 0.8)
par(oPar) # Restore plotting parameters

# Write concordance factors to file
labels <- paste0(qc, "/", cc, "/", pc) # "/" is a valid delimiter
# Identify the node that corresponds to each label
whichNode <- match(TreeTools::NTip(tree) + 1:tree$Nnode, names(qc))

# The contents of tree$node.label will be written at each node
tree$node.label <- labels[whichNode]

ape::write.tree(tree) # or write.nexus(tree, file = "mytree.nex")

# Display correlation between concordance factors
pairs(cbind(qc, cc, pc, spc, mcc), asp = 1)
}
\references{
\insertAllCited{}
}
\seealso{
Other split support functions: 
\code{\link{JackLabels}()},
\code{\link{Jackknife}()},
\code{\link{MaximizeParsimony}()}
}
\author{
\href{https://smithlabdurham.github.io/}{Martin R. Smith}
(\href{mailto:martin.smith@durham.ac.uk}{martin.smith@durham.ac.uk})
}
\concept{split support functions}
