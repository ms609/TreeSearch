% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tree_distance.R
\name{MutualArborealInfo}
\alias{MutualArborealInfo}
\alias{VariationOfArborealInfo}
\alias{MutualArborealInfoSplits}
\alias{VariationOfArborealInfoSplits}
\title{Information-based generalized Robinson-Foulds distance between two trees}
\usage{
MutualArborealInfo(tree1, tree2, normalize = FALSE,
  reportMatching = FALSE)

VariationOfArborealInfo(tree1, tree2, normalize = FALSE,
  reportMatching = FALSE)

MutualArborealInfoSplits(splits1, splits2, normalize = TRUE,
  reportMatching = FALSE)

VariationOfArborealInfoSplits(splits1, splits2, normalize = TRUE,
  reportMatching = FALSE)
}
\arguments{
\item{tree1, tree2}{Trees of class \code{phylo}, with tips labelled identically,
or lists of such trees to undergo pairwise comparison.}

\item{normalize}{If a numeric value is provided, this will be used as a
maximum value against which to rescale results.
If \code{TRUE}, results will be rescaled against a maximum value calculated from
the specified tree sizes and topology, as specified in 'details' below.
If \code{FALSE}, results will not be rescaled.}

\item{reportMatching}{Logical specifying whether to return the clade
matchings as an attribute of the score.}

\item{splits1, splits2}{Logical matrices where each row corresponds to a terminal,
either listed in the same order or bearing identical names (in any sequence),
and each column corresponds to a bipartition split, such that
each terminal is identified as a member of the ingroup (\code{TRUE}) or outgroup
(\code{FALSE}) of the respective bipartition split.}
}
\value{
If \code{reportMatching = FALSE}, the functions return a numeric
vector specifying the requested similarities or differences.

If \code{reportMatching = TRUE}, the functions additionally return details
of which clades are matched in the optimal matching.
}
\description{
Functions reporting the distances or similarities between pairs of trees,
based on information-theoretic concepts.
}
\details{
Each partition in a tree can be viewed either as
\itemize{
\item (a) a statement that the 'true' tree is one of those that splits the
taxa as specified;
\item (b) a statement that the taxa are subdivided into the two groups specified.
}

The former concept corresponds to the concept of phylogenetic
information, and views the information content of a pair of partitions
as relating to the proportion of phylogenetic trees that are consistent
with both partitions, giving rise to the
Mutual Arboreal Information similarity measure (\code{MutualArborealInfo}), and
the complementary Variation of Arboreal Information distance metric
(\code{VariationOfArborealInfo}).

The latter #TODO REWRITE

A tree similarity measure is generated by finding an optimal matching that
maximises the total information in common between a partition on one tree
and its pair on a second, considering all possible ways to pair partitions
between trees (including leaving a partition unpaired).

The returned tree similarity measures state the amount of information,
in bits, that the partitions in two trees hold in common
when they are optimally matched, following Smith (forthcoming).
The complementary tree distance measures state how much information is
different in the partitions of two trees, under an optimal matching.Normalization

If \code{normalize = TRUE}, then results will be rescaled from zero to a nominal
maximum value, calculated thus:
\itemize{
\item \code{MutualArborealInfo}: The information content of the most informative tree.
To scale against the information content of the least informative tree, use
\code{normalize = pmax}.
}
}
\section{Functions}{
\itemize{
\item \code{VariationOfArborealInfo}: Variation of phylogenetic information between two trees

\item \code{MutualArborealInfoSplits}: Takes splits instead of trees

\item \code{VariationOfArborealInfoSplits}: Calculate variation of arboreal information from splits
}}

\examples{
{
  tree1 <- ape::read.tree(text='((((a, b), c), d), (e, (f, (g, h))));')
  tree2 <- ape::read.tree(text='(((a, b), (c, d)), ((e, f), (g, h)));')
  tree3 <- ape::read.tree(text='((((h, b), c), d), (e, (f, (g, a))));')
  
  # Best possible score is obtained by matching a tree with itself
  VariationOfArborealInfo(tree1, tree1) # 0, by definition
  MutualArborealInfo(tree1, tree1)
  PartitionInfo(tree1) # Maximum mutual arboreal or partition information
  
  # Best possible score is a function of tree shape; the partitions within
  # balanced trees are more independent and thus contain less information
  PartitionInfo(tree2)
  
  # How similar are two trees?
  MutualArborealInfo(tree1, tree2) # Amount of arboreal information in common
  VariationOfArborealInfo(tree1, tree2) # Distance measure
  VariationOfArborealInfo(tree2, tree1) # The metric is symmetric
  
  # Are they more similar than two trees of this shape would be by chance?
  ExpectedVariation(tree1, tree2, sample=12)['VariationOfArborealInfo', 'Estimate']
  
  # Every partition in tree1 is contradicted by every partition in tree3
  # Non-arboreal matches contain partitioning, but not arboreal, information
  MutualArborealInfo(tree1, tree3) # = 0
  MutualPartitionInfo(tree1, tree3) # > 0
  
}

}
\references{
{
\itemize{
\item \insertRef{SmithDist}{TreeSearch}
}
}
}
\seealso{
Other Tree distance: \code{\link{MatchingSplitDistance}},
  \code{\link{NyeTreeSimilarity}},
  \code{\link{VariationOfClusteringInfo}},
  \code{\link{VariationOfPartitionInfo}}
}
\author{
Martin R. Smith
}
\concept{Tree distance}
