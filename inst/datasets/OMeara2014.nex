#NEXUS
BEGIN DATA;
	DIMENSIONS NTAX=63 NCHAR=317;
	FORMAT DATATYPE=STANDARD  SYMBOLS= "0 1 2 3 4 5 9" MISSING=? GAP=- ;
  MATRIX
    Probainognathus			  0?000001?000?0??00000???0?0000000000000?0???????????0???0?0-???---??00??0?00?0000?--00?-?----?200----0-00000110?------0000?---0010-0?00?000?0??0?0??????000--00?00?0????0?000000?00000000000000?0??000000?00000???00???0?100000??000??000000000000-011010000?000?00?0000000000000000000-000000000000000000000?00000?00000--?0
    Tritylodontids			  0?000011?000?0??00000???0?3000?110-2--1??0??????0?0????????4???---??00??0?00??0???--0??-?----??00----?-100511402------2??-?-??????-0?120011????0?3??????000--00000?000000000000000000000?000000?000000000000000000000??00100000??000??00000001-000-000000101?100?000001000100000000?001-000000000000000?01010?00000?00000--?0
    Tritheledontids			  1?000001?000?00?000000001?20000000001-0?0?????????0?0???0?0-???---??00??0?00?00000--00?-?----?240----0-00?00110?------000??---0010-0?00?001?0??0?0??????00100?0??0?00?1101000000?00000000000000?0??0?000???0?????????????1000100?000??0?000001-000-001000000?000?00000000100?1101000000-000000000010?001?001???????011100--?0
    Adelobasileus				  1???????????????????????????????????????????????????0???0?????????0?00????????0??????????????????????0????0??0????????????????????-???????????????????????????????????????????????????????????????????????????????????????10??????01?0????000001002010110000?00000000001????0?????0?1110?00??1101120??????01????????????10-??
    Sinoconodon					  1?000001?000?000000000011000000000001-1010010000000001200?0-000---0010?00000100000--000-?----?200----0-00?10100?------000??---00?0-0??10000?0??001?0000000101000?00?000000000000000000000000000????000000??0?????????????10001000011000000000001112000000101?0000001001110000110110110100000110000000000010100000000000010-?0
    Morganucodon				  10000101?000?0000000000?1000021000?01-1300100000000101200?11000---0012001202000000--000-?----?240----0-00?10100100----000??---0000-0?110010?1??001?000000010100000?10?1?0010?000?00000000000000?0000100010?0?00000000????100110??0121101000000011120101001120100000101110110?210110110100000110011101100010100000000010010-?0
    Megazostrodon				  10000101?000?00000000000201100?000?01-?300101000000101200?12000---0012000102000000--000-?----?240----0-00?10100100----000??---0000-0?110000?0??001?0000000100?0000?1????0?100000?000000000000?0000001000?00000000000?000010?110??01201010?00000111101?10011201000001011101?0?21?11?11?10??001?001?10???????1???????0110?10-?0
    Dinnetherium				  100001110000000000000002201100?0?0?0???300100000000101200?11020---0012011201000000--000-?----?240----0-00?10100100----000??---0000-0?110010?0??001?0000000101?????????????????????????????????????????????????????????????????????12110???000001111?1?1001120100000101110?10?21??1??1??????????????????????1???????00?????-??
    Haldanodon					  10000011?000?000000000011011021000001-?100100000001001200?11??0---0012002100000000--000-?----?210----0-00150130100----0100?--00000?0?11001001001?1000000000--?????????????100????00?00?0100000?????0?000?0???????????????1001201101200010000000111001???01020100000110110????2?02112211000000?101111110000000???10??010010-?0
    Hadrocodium					  1?101??1300?10000?000000102??2?0?0?01-?0?0?1100010?001100?12000---001?000000000000--000-?----?200----0-00?10100100----000??---0000-0?1100?0?0??001?0000000???????????????????????????????????????????????????????????????1100210101212????00000111?110210002110000010?11?????2??2112211001001111212101?00?21??11111??00?10-?0
    Kuehneotherium			  10000110---0-0000000000?100101?0?01???13?0?0100000010?312012020---1111011201010000--000-0----0110----0-0002001011100--01000-?01000?0??1001??100101??00?0000--????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????
    Pseudotribos				  1?0001110000?00000??0001?10010?0?0?11??310010010011110221112010---1101012200010000--011-0----002-----0-0003012021100--11001-00100010?1100?1010010110000000????????00000000001010000000001000????0?10?000?????????????????1???????????????????????????????????????????????????????????????????????????????????????????????????
    Ambondro						  ???0??1????????????????????????????????????0?0200011????1?131?11021?00011200?100002114110100?1????????????301?0211?11?110?00???????0?1100????0010???00??0????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????
    Ausktribosphenos	    1010011121?0100010010?0?112012?????????3?01101210011??121?131021221?00001200020000211411021123????????????501?0212???0110?11???????0?1100??????00???00?00????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????
    Henosferus					  1000011121?0000020010000112112?0?0?1???3?001001000?00?122?131211021?001100010100002114110??021???????????0301?0211?100110?00?01????0?1100?00???00??000000?0--???????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????1????????
    Asfaltomylos				  10000?11210??0002001010?112112???????????0???0100011??121?13??112?1?001100011100002114110?0021?????????????01?0211??00110?10??1????0?1100????0000???00000????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????
    Bishops							  101011112110100010010101112112???0?????3?01101210011??121?131021221?00001200110000211411021123????????????501?0212???0110?11???????0?1100????0000???00?00????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????
    Steropodon					  1??0101????????????????????01???????????????????0?????121?1311211?1?0010112002000122131100--23????????????501?0212?210020?00???????0?1100????0011?0??0??0????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????
    Teinolophos					  ??1011112100100020011101112012????????????????????????221?1311211?1?0000112012000?22131100--23????????????501?0212?210020?00???????0?1100??2?0011???????0????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????
    Obdurodon						  ??102011310011002011101?112111?1??-2--?0?0011020011001121?1311211?1?00101?200200?022131100--23010----???0?50140212?210?200100?100000?1200??2100113?00000002121???????????????????????????????????????????????????????????0000111001212????000011111111210012010000000000?????2??2112211121?11101212111101?211??????1??0010-?0
    Ornithorynchus			  10102-11?1111100201?111111?--1----------------------------------------------------------------------------------------?--------------------------------------?110111000000001010000000001000000?1110000020100000000211111000010100121212000000111111112100120100000000002012?2112112211121?111012121111000211110111??00010-?0
    Gobiconodon					  13101110---0-11020110111101001?110111-120001?010000101200?12010---0111010001000?00--000-?----?210----?-00010100110----0000?-??-020?01110001?0??001?0000000101?????00????1?21?1?1?1110000110000??00000000100100??????????110012011012?10?0?000??1?1?11???????0?0??00?????????????21??????0??1012001?0?1?0??01???????00???10-?0
    Amphilestes					  13101110---1-110200?0?1110210??0?0?0??120001101000010?200?12010---0?11010001000?00--000-?----?2???????-?0?10100110----000??-??-????0?1100???0??001?000000????0?????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????1?????????????????????????????????
    Jeholodens					  1?10??10---?-110?0?100121010?1?010?11-?010?10000000101200?12010---00110?0001?00000--000-0----?2?0----?-00?10?00110----0000?-00-0?0?011100?1?0??001?0000000?????0??10????112111??01110??0110100000?0000001000001?000010100?0012?110?????1??????????????????????????????????122????1??????0??11???11??01?0??1???????????00?????
    Priacodon						  11101010---1-11020110012101101?010?000?100001010100201200?11110---0011100003100?00--000-?----?210----?-11?10100100----000-?-00-000?02110010?0??001?0000000101???????????????????????????110100???????????????????????????1?????????21101??000001111?11100??20??00??10121?????2??21???????????11???2????????????????00???10-?0
    Trioracodon					  11101010---1-110201100121010011??010??1200001010000201100?11110---0011?00003100?00--000-?----?210----?-11?10100100----000-?-00-000?02110010?0??001?0000000?????????????????????????????????????????????????????????0??????????????121101??000001111?1110011201?00??1012??????2???1???????????11???????????1?1101110?????10-?0
    Tinodon							  10101110---0-11010??0111113111?0?0?1???10001001000010?212?12010---1101011201010000--010-0----0110----0-00020010111----01010-001000?021100??01??001??00?00????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????
    Peramus							  1?1011114100110021010001112112?0?010???3000011101001011210131201001100010001010?0001121110--01010----0000030110211110011010?0011?01011100??01??00100000000???????????????????????????????????????????????????????????????1???????????????????????????????????????????????????????????????????????????????????????????????????
    Vincelestes					  12102-11?10011001101010111211??1101000?000001010101101122013010100110010000001000010121000--0101110000?0003011021111001100000010001021100?101??0021000001010001111?11-11112111110111101001111000010111001110101100121??0?110021110121210?1111001111110211012120110011021?????21?110?11101000?12001211110??11???????0010010000
    Kielantherium				  1?1010114100?10011110?0??1311??????0???200001000?0000?2210130201011100?1000101000011141100--0100110000000030110212110112010000110010?1100??01??0021?00??0????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????
    Deltatheridium			  13102-113101110111010101313111?01110001100001010100101221013120101110011000111000011141111010102110?10000030120212210112010000110010111001001??00210000000100????????????????????????????????????????????????1211?12?????111?21111121222??11100212-221???00212?000111021?????21?2111101-1??0112?1?200211??1????0???001000-000
    Asiatherium					  13101?113101110111010101?1311???11?000?10000101010010122111310012111001100111101002114111111130111022000003012021221011200100011001001100??01??00210000000???????101????11210111?21111120221111?0101?111111101?????????2011102111112122???111??2?2-22????00?121??1111??1?????21?2111101-???01???11200?????21??????????100-000
    Kokopellia					  13?01?113??1?1??11110?????301??0?0?0???1?00010101001??221113110121110011001111010021141111110302110120000030120212210112001000210010?11001001??0021?00?000???????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????
    Pucadelphys					  13101?11310111011101011131311??01110001100001010100101221113100121110011001111010021141112111303110221100030120212210112001000210010011001001??00210000000???11111011-1111210111121111120221111?11011111111101211112020?0111021111121222??11100212-221???002121000111021?????21?2111101-1110112011200211?210?????????1100-000
    Didelphis						  12102-1131011101110101113130111011100011110010101001012211131001211100110011110100211411121113031102011000301202122101120010002000100110010010?0021000000011211111011-1111210111121111120221111111011111111101211112020201110211111212221111100212-221???002120001111021111112122111101-111011200120021112100110111210100-000
    Pappotherium				  ???0??1??????????????????????????????????0?010001000????10131001011100110001?100001114111110020311001000003012021221011101100011001001100??01??0021??00000???????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????
    Erinaceus						  12102-1111011100110101013131121100111-100000011000001112111300012111001100210100002113?1?1111311111220000050140212211112001000100010211001101111031000000011211111011-111121011112111112022101010111111121111221211102020111021111121222111121-212-221?11002120110011021111112122111101-110011201121021112210110111210100-111
    Asioryctes					  1?102-111100110011010101313112?000100012000110100000101211130001011100110001210000111411111003021111200000301202122101120110001100100110010010000210000000???01111??????????????????????????0101??????????10122?2111020?011102111112122???1121-212-221?11002120100011021?????21?2111101-1110112011210211??110110111??0000-111
    Prokennalestes			  1?1010111100110011110001312112?0?0?0???300011010000010121113000101110011000121000011141111100303111110000?30120212210111011000110010011001?010000210000000100????????????????????????????????????????????????????????????1????????1212221111201212??21?110021??11??11021?????2???????????1????1????????????????????00???11000
    Zhangheotheriids	    12101010---0-11020010111110111?010111-1110110010010101322012010---1101001201010000--000-0----0020----0-0004112011100--11000-001110001110111110010100000000????1100010101112111110111101?111100000001111011000011001211?211001211101211????111001?11?1121001212000001?121?????21??1????1?0??01???1???0111??????????????????000
    Amphitheridae				  101111114100110020010101112112?0?0?0???3?00010100010??321?13100100110011000101001001121110--01110----0?00040110211110011010?00110000?1100??0???00200000000???????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????
    Henkelotherium			  10111011110011002001010111301?10?010??1100000010101101321012100---1100100000010010--000-0----0000----0-0004012121110--12011-0010100021100100000102000000001000?????1????112111?1?11110?00111000??0011110111010????1?????101?12?11012121111?110?11????121?002??011??110???????????1??????11?01??????????????????????0?0011?00?
    Dryolestes					  1011111111001100200101011130101000101-1200000010101101321012100---1100100000010010--000-0----0000----0-0004212121110--12011-012010002111110000010200000000100???????????????????????????111100???????????????????????????1?????????????????????????????????????????????????????????????????????????????????????????001???????
    Laolestes						  10111111110011002001010111301??0?010???2?0000010101101321012100---1100100000010010--000-0----0000----0-0014212121110--12111-112110002111111100010200000000100????????????????????????????????????????????????????????????1?????????????????????????????????????????????????????????????????????????????????????????00????????
    Amblotherium				  10111111110011002001010111301??0?010???20000001010110?321012100---1100100000010010--000-0----0000----0-0014212121110--12011-0011?0001111111100010200000000???????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????
    Comotherium					  ???1??????????????0???????????????????????????????????3??012???????10?????????0???????????????000----000004??2121110-?1??1??002100001111?1?10????200??0??0???????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????
    Mesungulatum				  ??11??1????????0????0??????????????0?????2?1012?201101121012100---1100002020010001--000-0----00?0------0?15112121110--?1111-122011-021101??00111020???1100???????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????
    Coloniatherium			  11112-111101?10011010?????3102????1000?102110121200101121012100---1100002020010001--000-0----0000------0015112121110--11011-122011-0211011?001110201111100100??????????????????????????????????????????????????????????????????????21220??11?00111??1111010212?11?01112??????2?????????????????????????????????????00?????000
    Reigitherium				  11112-1????1???01??10?????2112???????????1011121100001?210121?0---1000102020010002--000-0----0040------0005112121010--110?1-122001-1211011??0112020?11??00?????????????????????????????????????????????????????????????????????????212201111?00111????????????????????????????????????????????????????????????????????????000
    Peligrotherium			  10112-11110111001101010??13102??1?1000?102111121210201121012100---1100002020010001--000-0----0040------0015114121110--1?011-122011-12110110001120201111000??????????????????????????????????????10?????????0?????????????0??0?0???121220??1100111??21101011??2?11?01112??????2??21?2??1?0??0012001?10?11??11??0011?????110-00
    Groebertherium			  ???1????????????????????????????????????????????????0???1012100---1100101010?10010--000-1----0000------00?4212121110--?2101-022111-0?1111???0011020????0???????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????0?????????????
    Leonardus						  ???12-1??????????????????????????????????1?01101100201?21012100---1100100000020001--000-?----?000------0014212121110--?2001-122001-021?31??10000?100000111???????????????????????????????????????????????????????????????0???????????????????????????????????????????????????????????????????????????????????????????????????
    Foxraptor						  00?11011???1???01??10??????10??0?0?0???1000111101001??221013100---1?00100000?10010--020-0----0????????-???510?0211?0--?20?1-???0???0?1100?0????00??000?00????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????
    Paurodon						  0?111111???0?1?01??10??????11??0??10???01000111010110?221013000---1100100000010010--020-1----0??0----?????4112021110--?20?1-???????0?1100???0??00??000?01????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????
    Cronopio						  10112-113101110010010011111101??1?1001?211001120100200121012100---1100100000020001--000-0----0000------0004212121110--12011-002011-02002111100000000000111???????????????????????????????????????????????????????????????0001201111212?0??1110?111??1011010212?11?01112??????21?01??0?100?100?????1?0?10??2????01?1??00110000
    Drescheratherium	    ????????????????????????????????0??001?11???????????002??01????????10???????010???????????????000----0?001???2?2111??????1??11100000011????100?0?200??0??0???????????????????????????????????????????????????????????????1?????????????????????????????????????????????????????????????????01????????????????????????????????
    Necrolestes					  10112-11?1011100110101?1113112?001?000?110010101100201122012110---1100100000020001--00--------000------10042?2121110--120-1-001001-020021?110000000000011111?0?1?1?1??????1????1?2110010112011??0??111010??0?????????????0??021111121221111111-111??1011011212011001?021??????1?111?101????001?12?110?0???211??01??0?00110000
    Spalacotherium			  12101010---0-11020?10111112111?0??100??201010010011101321012010---1101001211010000--000-0----0000----0-0004?12121110--12000-001110?011101?01?0010100000?00???????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????
    Necrolestes_uncertain	10112-11?1011100110101?1113112?001?000?110010101100201122?12110---1100100000020001--00--------000------10042?2121110--120-1-???0??-020021?11000000?000011111?0?1?1?1??????1????1?2110010112011??0??111010??0?????????????0??021111121221111111-111??1011011212011001?021??????1?111?101????001?12?110?0???211??01??0?00110000
    Cronopio_uncertain	  10112-113101110010010011111101??1?1001?211001120100200121?12100---1100100000020001--000-0----0000------0004212121110--120?1-???0??-020021111000000?0000111???????????????????????????????????????????????????????????????0001201111212?0??1110?111??1011010212?11?01112??????21?01??0?100?100?????1?0?10??2????01?1??00110000
    Notoryctes						13102-1131011101200101011131121010111-1100-11000100101221012100---1100100000?10100--00--------030----1-?01420312122---12001-0-11-0-011131100?000?220000111???11111111-1111111111021011110220111-11111111111001011112010?0011021111121222??1111-212-221???00212000111102110?112112111100-?110112121200211122??????????2-00-0?0
    Naraboryctes					12102-113?0111011101010??13112?0?0?11-?100?110111001112210131001211100101001?100002214011211220311010110?0400202122101?2001002210010111???00?0000220?00?0???????????????????????????111?02101????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????
    Yalkaparidon					13102-113001110120010000301110?110?????10???1?0000010112?-1??10---1100100000?20100--00--------020----1-10040020212----?10-1---00-0-011101?10?000?220000??1??2????????????????????????????????????????????????????????????0110211011212????111??212-221???0021100?1111?21?????21???11101-?11011?12110???1??1????????????00-0?0
  ;
END;

BEGIN TAXA;
	DIMENSIONS NTAX = 63;
	TAXLABELS
		Probainognathus
		Tritylodontids
		Tritheledontids
		Adelobasileus
		Sinoconodon
		Morganucodon
		Megazostrodon
		Dinnetherium
		Haldanodon
		Hadrocodium
		Kuehneotherium
		Pseudotribos
		Ambondro
		Ausktribosphenos
		Henosferus
		Asfaltomylos
		Bishops
		Steropodon
		Teinolophos
		Obdurodon
		Ornithorynchus
		Gobiconodon
		Amphilestes
		Jeholodens
		Priacodon
		Trioracodon
		Tinodon
		Peramus
		Vincelestes
		Kielantherium
		Deltatheridium
		Asiatherium
		Kokopellia
		Pucadelphys
		Didelphis
		Pappotherium
		Erinaceus
		Asioryctes
		Prokennalestes
		Zhangheotheriids
		Amphitheridae
		Henkelotherium
		Dryolestes
		Laolestes
		Amblotherium
		Comotherium
		Mesungulatum
		Coloniatherium
		Reigitherium
		Peligrotherium
		Groebertherium
		Leonardus
		Foxraptor
		Paurodon
		Cronopio
		Drescheratherium
		Necrolestes
		Spalacotherium
		Necrolestes_uncertain
		Cronopio_uncertain
		Notoryctes
		Naraboryctes
		Yalkaparidon
	;
END;
BEGIN TREES;
	TRANSLATE
		1	Probainognathus,
		2	Tritylodontids,
		3	Tritheledontids,
		4	Adelobasileus,
		5	Sinoconodon,
		6	Morganucodon,
		7	Megazostrodon,
		8	Dinnetherium,
		9	Haldanodon,
		10	Hadrocodium,
		11	Kuehneotherium,
		12	Pseudotribos,
		13	Ambondro,
		14	Ausktribosphenos,
		15	Henosferus,
		16	Asfaltomylos,
		17	Bishops,
		18	Steropodon,
		19	Teinolophos,
		20	Obdurodon,
		21	Ornithorynchus,
		22	Gobiconodon,
		23	Amphilestes,
		24	Jeholodens,
		25	Priacodon,
		26	Trioracodon,
		27	Tinodon,
		28	Peramus,
		29	Vincelestes,
		30	Kielantherium,
		31	Deltatheridium,
		32	Asiatherium,
		33	Kokopellia,
		34	Pucadelphys,
		35	Didelphis,
		36	Pappotherium,
		37	Erinaceus,
		38	Asioryctes,
		39	Prokennalestes,
		40	Zhangheotheriids,
		41	Amphitheridae,
		42	Henkelotherium,
		43	Dryolestes,
		44	Laolestes,
		45	Amblotherium,
		46	Comotherium,
		47	Mesungulatum,
		48	Coloniatherium,
		49	Reigitherium,
		50	Peligrotherium,
		51	Groebertherium,
		52	Leonardus,
		53	Foxraptor,
		54	Paurodon,
		55	Cronopio,
		56	Drescheratherium,
		57	Necrolestes,
		58	Spalacotherium,
		59	Necrolestes_uncertain,
		60	Cronopio_uncertain,
		61	Notoryctes,
		62	Naraboryctes,
		63	Yalkaparidon
	;
  TREE * ambiguous = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,(10,(24,((23,(22,(11,(27,((12,((13,((14,17),(19,(18,(20,21))))),(15,16))),((((41,(28,(29,(30,((36,(31,((33,(32,(34,35))),(62,(61,63))))),(39,(37,38))))))),((53,((49,(50,(47,48))),(52,((55,60),(57,59))))),(54,56))),(42,(43,(46,(45,(44,51)))))),(40,58))))))),(25,26)))))))))));
	TREE * ambiguous = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,(10,((11,(27,((12,((13,((14,17),(19,(18,(20,21))))),(15,16))),((((41,(28,(29,(30,(36,((31,((33,(32,(34,35))),(62,(61,63)))),(39,(37,38)))))))),((53,((49,(50,(47,48))),(52,((55,60),(57,59))))),(54,56))),(42,(43,((44,51),(45,46))))),(40,58))))),((22,24),(23,(25,26))))))))))));
	TREE * ambiguous = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,(10,((11,(27,(12,(((13,((14,17),(19,(18,(20,21))))),(15,16)),((((41,(28,(29,(30,(36,((31,((33,(32,(34,35))),(62,(61,63)))),(39,(37,38)))))))),((53,((49,(50,(47,48))),(52,((55,60),(57,59))))),(54,56))),(42,(43,((44,51),(45,46))))),(40,58)))))),(23,((22,24),(25,26))))))))))));
	TREE * ambiguous = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,(10,((11,(27,(12,(((13,((14,17),(19,(18,(20,21))))),(15,16)),((((41,(28,(29,(30,((36,(31,((33,(32,(34,35))),(62,(61,63))))),(39,(37,38))))))),((53,((49,(50,(47,48))),(52,((55,60),(57,59))))),(54,56))),(42,(43,(46,(45,(44,51)))))),(40,58)))))),(23,((22,24),(25,26))))))))))));
	TREE * ambiguous = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,(10,(24,(((11,(27,((12,((13,((14,17),(19,(18,(20,21))))),(15,16))),((((41,(28,(29,(30,((36,(31,((33,(32,(34,35))),(62,(61,63))))),(39,(37,38))))))),((53,((49,(50,(47,48))),(52,((55,60),(57,59))))),(54,56))),(42,(43,(46,(45,(44,51)))))),(40,58))))),(22,23)),(25,26)))))))))));
	TREE * ambiguous = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,(10,(24,((23,(22,(11,(27,((12,((13,((14,17),(19,(18,(20,21))))),(15,16))),((((41,(28,(29,(30,(36,((31,((33,(32,(34,35))),(62,(61,63)))),(39,(37,38)))))))),((53,((49,(50,(47,48))),(52,((55,60),(57,59))))),(54,56))),(42,(43,((44,51),(45,46))))),(40,58))))))),(25,26)))))))))));
	TREE * ambiguous = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,(10,((24,((11,(27,((12,((13,((14,17),(19,(18,(20,21))))),(15,16))),((((41,(28,(29,(30,((36,(31,(32,(33,(34,(35,(62,(61,63)))))))),(39,(37,38))))))),((53,((49,(50,(47,48))),(52,((55,60),(57,59))))),(54,56))),(42,(43,((44,51),(45,46))))),(40,58))))),(22,23))),(25,26))))))))));
	TREE * ambiguous = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,(10,((11,(27,((12,((13,((14,17),(19,(18,(20,21))))),(15,16))),((((41,(28,(29,(30,((36,(31,(33,(32,(34,(35,(62,(61,63)))))))),(39,(37,38))))))),((53,((49,(50,(47,48))),(52,((55,60),(57,59))))),(54,56))),(42,(43,(46,(45,(44,51)))))),(40,58))))),((22,24),(23,(25,26))))))))))));
	TREE * ambiguous = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,(10,((11,(27,(12,(((13,((14,17),(19,(18,(20,21))))),(15,16)),((((41,(28,(29,(30,(36,((31,(33,(32,(34,(35,(62,(61,63))))))),(39,(37,38)))))))),((53,((49,(50,(47,48))),(52,((55,60),(57,59))))),(54,56))),(42,(43,(46,(45,(44,51)))))),(40,58)))))),((22,24),(23,(25,26))))))))))));
	TREE * ambiguous = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,(10,(((11,(27,((12,((13,((14,17),(19,(18,(20,21))))),(15,16))),((((41,(28,(29,(30,(36,((31,(33,(32,(34,(35,(62,(61,63))))))),(39,(37,38)))))))),((53,((49,(50,(47,48))),(52,((55,60),(57,59))))),(54,56))),(42,(43,(46,(45,(44,51)))))),(40,58))))),(23,(22,24))),(25,26))))))))));
	TREE * ambiguous = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,(10,((23,((11,(27,((12,((13,((14,17),(19,(18,(20,21))))),(15,16))),((((41,(28,(29,(30,((36,(31,(32,(33,(34,(35,(62,(61,63)))))))),(39,(37,38))))))),((53,((49,(50,(47,48))),(52,((55,60),(57,59))))),(54,56))),(42,(43,((44,51),(45,46))))),(40,58))))),(22,24))),(25,26))))))))));
	TREE * ambiguous = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,(10,(24,((23,(22,(11,(27,((12,((13,((14,17),(19,(18,(20,21))))),(15,16))),((((41,(28,(29,(30,((36,(31,(32,(33,(34,(35,(62,(61,63)))))))),(39,(37,38))))))),((53,((49,(50,(47,48))),(52,((55,60),(57,59))))),(54,56))),(42,(43,(46,(45,(44,51)))))),(40,58))))))),(25,26)))))))))));
	TREE * ambiguous = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,(10,(24,(((11,(27,((12,((13,((14,17),(19,(18,(20,21))))),(15,16))),((((41,(28,(29,(30,(36,((31,((33,(32,(34,35))),(62,(61,63)))),(39,(37,38)))))))),((53,((49,(50,(47,48))),(52,((55,60),(57,59))))),(54,56))),(42,(43,((44,51),(45,46))))),(40,58))))),(22,23)),(25,26)))))))))));
	TREE * ambiguous = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,(10,((11,(27,((12,((13,((14,17),(19,(18,(20,21))))),(15,16))),((((41,(28,(29,(30,(36,((31,((33,(32,(34,35))),(62,(61,63)))),(39,(37,38)))))))),((53,((49,(50,(47,48))),(52,((55,60),(57,59))))),(54,56))),(42,(43,(46,(45,(44,51)))))),(40,58))))),(23,((22,24),(25,26))))))))))));
	TREE * ambiguous = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,(10,((11,(27,((12,((13,((14,17),(19,(18,(20,21))))),(15,16))),((((41,(28,(29,(30,(36,((31,(33,(32,(34,(35,(62,(61,63))))))),(39,(37,38)))))))),((53,((49,(50,(47,48))),(52,((55,60),(57,59))))),(54,56))),(42,(43,(46,(45,(44,51)))))),(40,58))))),(23,((22,24),(25,26))))))))))));
	TREE * ambiguous = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,(10,((11,(27,((12,((13,((14,17),(19,(18,(20,21))))),(15,16))),((((41,(28,(29,(30,((36,(31,(32,(33,(34,(35,(62,(61,63)))))))),(39,(37,38))))))),((53,((49,(50,(47,48))),(52,((55,60),(57,59))))),(54,56))),(42,(43,(46,(45,(44,51)))))),(40,58))))),(23,((22,24),(25,26))))))))))));
	TREE * ambiguous = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,(10,((24,((11,(27,((12,((13,((14,17),(19,(18,(20,21))))),(15,16))),((((41,(28,(29,(30,(36,((31,((33,(32,(34,35))),(62,(61,63)))),(39,(37,38)))))))),((53,((49,(50,(47,48))),(52,((55,60),(57,59))))),(54,56))),(42,(43,((44,51),(45,46))))),(40,58))))),(22,23))),(25,26))))))))));
	TREE * ambiguous = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,(10,((11,(27,((12,((13,((14,17),(19,(18,(20,21))))),(15,16))),((((41,(28,(29,(30,((36,(31,(33,(32,(34,(35,(62,(61,63)))))))),(39,(37,38))))))),((53,((49,(50,(47,48))),(52,((55,60),(57,59))))),(54,56))),(42,(43,(46,(45,(44,51)))))),(40,58))))),(23,((22,24),(25,26))))))))))));
	TREE * ambiguous = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,(10,((11,(27,((12,((13,((14,17),(19,(18,(20,21))))),(15,16))),((((41,(28,(29,(30,((36,(31,(32,(33,(34,(35,(62,(61,63)))))))),(39,(37,38))))))),((53,((49,(50,(47,48))),(52,((55,60),(57,59))))),(54,56))),(42,(43,((44,51),(45,46))))),(40,58))))),((22,24),(23,(25,26))))))))))));
	TREE * ambiguous = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,(10,(24,(((11,(27,((12,((13,((14,17),(19,(18,(20,21))))),(15,16))),((((41,(28,(29,(30,((36,(31,(32,(33,(34,(35,(62,(61,63)))))))),(39,(37,38))))))),((53,((49,(50,(47,48))),(52,((55,60),(57,59))))),(54,56))),(42,(43,(46,(45,(44,51)))))),(40,58))))),(22,23)),(25,26)))))))))));
	TREE * ambiguous = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,(10,((24,((11,(27,((12,((13,((14,17),(19,(18,(20,21))))),(15,16))),((((41,(28,(29,(30,((36,(31,(33,(32,(34,(35,(62,(61,63)))))))),(39,(37,38))))))),((53,((49,(50,(47,48))),(52,((55,60),(57,59))))),(54,56))),(42,(43,((44,51),(45,46))))),(40,58))))),(22,23))),(25,26))))))))));
	TREE * ambiguous = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,(10,((11,(27,(12,(((13,((14,17),(19,(18,(20,21))))),(15,16)),((((41,(28,(29,(30,((36,(31,(33,(32,(34,(35,(62,(61,63)))))))),(39,(37,38))))))),((53,((49,(50,(47,48))),(52,((55,60),(57,59))))),(54,56))),(42,(43,(46,(45,(44,51)))))),(40,58)))))),(23,((22,24),(25,26))))))))))));
	TREE * ambiguous = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,(10,((11,(27,((12,((13,((14,17),(19,(18,(20,21))))),(15,16))),((((41,(28,(29,(30,((36,(31,(33,(32,(34,(35,(62,(61,63)))))))),(39,(37,38))))))),((53,((49,(50,(47,48))),(52,((55,60),(57,59))))),(54,56))),(42,(43,((44,51),(45,46))))),(40,58))))),((22,24),(23,(25,26))))))))))));
	TREE * ambiguous = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,(10,((11,(27,((12,((13,((14,17),(19,(18,(20,21))))),(15,16))),((((41,(28,(29,(30,((36,(31,((33,(32,(34,35))),(62,(61,63))))),(39,(37,38))))))),((53,((49,(50,(47,48))),(52,((55,60),(57,59))))),(54,56))),(42,(43,((44,51),(45,46))))),(40,58))))),((22,24),(23,(25,26))))))))))));
	TREE * ambiguous = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,(10,((11,(27,(12,(((13,((14,17),(19,(18,(20,21))))),(15,16)),((((41,(28,(29,(30,((36,(31,((33,(32,(34,35))),(62,(61,63))))),(39,(37,38))))))),((53,((49,(50,(47,48))),(52,((55,60),(57,59))))),(54,56))),(42,(43,((44,51),(45,46))))),(40,58)))))),(23,((22,24),(25,26))))))))))));
	TREE * ambiguous = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,(10,((11,(27,(12,(((13,((14,17),(19,(18,(20,21))))),(15,16)),((((41,(28,(29,(30,(36,((31,((33,(32,(34,35))),(62,(61,63)))),(39,(37,38)))))))),((53,((49,(50,(47,48))),(52,((55,60),(57,59))))),(54,56))),(42,(43,(46,(45,(44,51)))))),(40,58)))))),((22,24),(23,(25,26))))))))))));
	TREE * ambiguous = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,(10,(24,(((11,(27,((12,((13,((14,17),(19,(18,(20,21))))),(15,16))),((((41,(28,(29,(30,((36,(31,(33,(32,(34,(35,(62,(61,63)))))))),(39,(37,38))))))),((53,((49,(50,(47,48))),(52,((55,60),(57,59))))),(54,56))),(42,(43,(46,(45,(44,51)))))),(40,58))))),(22,23)),(25,26)))))))))));
	TREE * ambiguous = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,(10,((24,((11,(27,((12,((13,((14,17),(19,(18,(20,21))))),(15,16))),((((41,(28,(29,(30,(36,((31,((33,(32,(34,35))),(62,(61,63)))),(39,(37,38)))))))),((53,((49,(50,(47,48))),(52,((55,60),(57,59))))),(54,56))),(42,(43,(46,(45,(44,51)))))),(40,58))))),(22,23))),(25,26))))))))));
	TREE * ambiguous = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,(10,((11,(27,((12,((13,((14,17),(19,(18,(20,21))))),(15,16))),((((41,(28,(29,(30,(36,((31,(33,(32,(34,(35,(62,(61,63))))))),(39,(37,38)))))))),((53,((49,(50,(47,48))),(52,((55,60),(57,59))))),(54,56))),(42,(43,((44,51),(45,46))))),(40,58))))),((22,24),(23,(25,26))))))))))));
	TREE * ambiguous = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,(10,((11,(27,(12,(((13,((14,17),(19,(18,(20,21))))),(15,16)),((((41,(28,(29,(30,(36,((31,((33,(32,(34,35))),(62,(61,63)))),(39,(37,38)))))))),((53,((49,(50,(47,48))),(52,((55,60),(57,59))))),(54,56))),(42,(43,(46,(45,(44,51)))))),(40,58)))))),(23,((22,24),(25,26))))))))))));
	TREE * ambiguous = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,(10,((23,((11,(27,((12,((13,((14,17),(19,(18,(20,21))))),(15,16))),((((41,(28,(29,(30,((36,(31,((33,(32,(34,35))),(62,(61,63))))),(39,(37,38))))))),((53,((49,(50,(47,48))),(52,((55,60),(57,59))))),(54,56))),(42,(43,((44,51),(45,46))))),(40,58))))),(22,24))),(25,26))))))))));
	TREE * ambiguous = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,(10,((11,(27,(12,(((13,((14,17),(19,(18,(20,21))))),(15,16)),((((41,(28,(29,(30,((36,(31,(32,(33,(34,(35,(62,(61,63)))))))),(39,(37,38))))))),((53,((49,(50,(47,48))),(52,((55,60),(57,59))))),(54,56))),(42,(43,(46,(45,(44,51)))))),(40,58)))))),((22,24),(23,(25,26))))))))))));
	TREE * ambiguous = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,(10,((23,((11,(27,((12,((13,((14,17),(19,(18,(20,21))))),(15,16))),((((41,(28,(29,(30,(36,((31,(33,(32,(34,(35,(62,(61,63))))))),(39,(37,38)))))))),((53,((49,(50,(47,48))),(52,((55,60),(57,59))))),(54,56))),(42,(43,((44,51),(45,46))))),(40,58))))),(22,24))),(25,26))))))))));
	TREE * ambiguous = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,(10,(((11,(27,((12,((13,((14,17),(19,(18,(20,21))))),(15,16))),((((41,(28,(29,(30,((36,(31,(33,(32,(34,(35,(62,(61,63)))))))),(39,(37,38))))))),((53,((49,(50,(47,48))),(52,((55,60),(57,59))))),(54,56))),(42,(43,(46,(45,(44,51)))))),(40,58))))),(23,(22,24))),(25,26))))))))));
	TREE * ambiguous = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,(10,((23,((11,(27,((12,((13,((14,17),(19,(18,(20,21))))),(15,16))),((((41,(28,(29,(30,(36,((31,((33,(32,(34,35))),(62,(61,63)))),(39,(37,38)))))))),((53,((49,(50,(47,48))),(52,((55,60),(57,59))))),(54,56))),(42,(43,((44,51),(45,46))))),(40,58))))),(22,24))),(25,26))))))))));
	TREE * ambiguous = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,(10,(24,(((11,(27,((12,((13,((14,17),(19,(18,(20,21))))),(15,16))),((((41,(28,(29,(30,((36,(31,(32,(33,(34,(35,(62,(61,63)))))))),(39,(37,38))))))),((53,((49,(50,(47,48))),(52,((55,60),(57,59))))),(54,56))),(42,(43,((44,51),(45,46))))),(40,58))))),(22,23)),(25,26)))))))))));
	TREE * ambiguous = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,(10,((11,(27,(12,(((13,((14,17),(19,(18,(20,21))))),(15,16)),((((41,(28,(29,(30,(36,((31,(33,(32,(34,(35,(62,(61,63))))))),(39,(37,38)))))))),((53,((49,(50,(47,48))),(52,((55,60),(57,59))))),(54,56))),(42,(43,((44,51),(45,46))))),(40,58)))))),(23,((22,24),(25,26))))))))))));
	TREE * ambiguous = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,(10,((24,((11,(27,((12,((13,((14,17),(19,(18,(20,21))))),(15,16))),((((41,(28,(29,(30,((36,(31,((33,(32,(34,35))),(62,(61,63))))),(39,(37,38))))))),((53,((49,(50,(47,48))),(52,((55,60),(57,59))))),(54,56))),(42,(43,((44,51),(45,46))))),(40,58))))),(22,23))),(25,26))))))))));
	TREE * ambiguous = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,(10,((11,(27,(12,(((13,((14,17),(19,(18,(20,21))))),(15,16)),((((41,(28,(29,(30,((36,(31,(32,(33,(34,(35,(62,(61,63)))))))),(39,(37,38))))))),((53,((49,(50,(47,48))),(52,((55,60),(57,59))))),(54,56))),(42,(43,((44,51),(45,46))))),(40,58)))))),(23,((22,24),(25,26))))))))))));
	TREE * ambiguous = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,(10,(((11,(27,((12,((13,((14,17),(19,(18,(20,21))))),(15,16))),((((41,(28,(29,(30,(36,((31,(33,(32,(34,(35,(62,(61,63))))))),(39,(37,38)))))))),((53,((49,(50,(47,48))),(52,((55,60),(57,59))))),(54,56))),(42,(43,((44,51),(45,46))))),(40,58))))),(23,(22,24))),(25,26))))))))));
	TREE * ambiguous = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,(10,((11,(27,(12,(((13,((14,17),(19,(18,(20,21))))),(15,16)),((((41,(28,(29,(30,((36,(31,(32,(33,(34,(35,(62,(61,63)))))))),(39,(37,38))))))),((53,((49,(50,(47,48))),(52,((55,60),(57,59))))),(54,56))),(42,(43,(46,(45,(44,51)))))),(40,58)))))),(23,((22,24),(25,26))))))))))));
	TREE * ambiguous = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,(10,((11,(27,((12,((13,((14,17),(19,(18,(20,21))))),(15,16))),((((41,(28,(29,(30,((36,(31,(32,(33,(34,(35,(62,(61,63)))))))),(39,(37,38))))))),((53,((49,(50,(47,48))),(52,((55,60),(57,59))))),(54,56))),(42,(43,(46,(45,(44,51)))))),(40,58))))),((22,24),(23,(25,26))))))))))));
	TREE * ambiguous = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,(10,(24,((23,(22,(11,(27,((12,((13,((14,17),(19,(18,(20,21))))),(15,16))),((((41,(28,(29,(30,((36,(31,(33,(32,(34,(35,(62,(61,63)))))))),(39,(37,38))))))),((53,((49,(50,(47,48))),(52,((55,60),(57,59))))),(54,56))),(42,(43,((44,51),(45,46))))),(40,58))))))),(25,26)))))))))));
	TREE * ambiguous = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,(10,((11,(27,((12,((13,((14,17),(19,(18,(20,21))))),(15,16))),((((41,(28,(29,(30,(36,((31,(33,(32,(34,(35,(62,(61,63))))))),(39,(37,38)))))))),((53,((49,(50,(47,48))),(52,((55,60),(57,59))))),(54,56))),(42,(43,(46,(45,(44,51)))))),(40,58))))),((22,24),(23,(25,26))))))))))));
	TREE * ambiguous = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,(10,(((11,(27,((12,((13,((14,17),(19,(18,(20,21))))),(15,16))),((((41,(28,(29,(30,((36,(31,(32,(33,(34,(35,(62,(61,63)))))))),(39,(37,38))))))),((53,((49,(50,(47,48))),(52,((55,60),(57,59))))),(54,56))),(42,(43,((44,51),(45,46))))),(40,58))))),(23,(22,24))),(25,26))))))))));
	TREE * ambiguous = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,(10,(24,(((11,(27,((12,((13,((14,17),(19,(18,(20,21))))),(15,16))),((((41,(28,(29,(30,(36,((31,((33,(32,(34,35))),(62,(61,63)))),(39,(37,38)))))))),((53,((49,(50,(47,48))),(52,((55,60),(57,59))))),(54,56))),(42,(43,(46,(45,(44,51)))))),(40,58))))),(22,23)),(25,26)))))))))));
	TREE * ambiguous = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,(10,(24,((23,(22,(11,(27,((12,((13,((14,17),(19,(18,(20,21))))),(15,16))),((((41,(28,(29,(30,((36,(31,(33,(32,(34,(35,(62,(61,63)))))))),(39,(37,38))))))),((53,((49,(50,(47,48))),(52,((55,60),(57,59))))),(54,56))),(42,(43,(46,(45,(44,51)))))),(40,58))))))),(25,26)))))))))));
	TREE * ambiguous = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,(10,((11,(27,((12,((13,((14,17),(19,(18,(20,21))))),(15,16))),((((41,(28,(29,(30,((36,(31,((33,(32,(34,35))),(62,(61,63))))),(39,(37,38))))))),((53,((49,(50,(47,48))),(52,((55,60),(57,59))))),(54,56))),(42,(43,(46,(45,(44,51)))))),(40,58))))),(23,((22,24),(25,26))))))))))));
	TREE * ambiguous = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,(10,((11,(27,((12,((13,((14,17),(19,(18,(20,21))))),(15,16))),((((41,(28,(29,(30,((36,(31,((33,(32,(34,35))),(62,(61,63))))),(39,(37,38))))))),((53,((49,(50,(47,48))),(52,((55,60),(57,59))))),(54,56))),(42,(43,(46,(45,(44,51)))))),(40,58))))),((22,24),(23,(25,26))))))))))));
	TREE * ambiguous = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,(10,((11,(27,(12,(((13,((14,17),(19,(18,(20,21))))),(15,16)),((((41,(28,(29,(30,((36,(31,(33,(32,(34,(35,(62,(61,63)))))))),(39,(37,38))))))),((53,((49,(50,(47,48))),(52,((55,60),(57,59))))),(54,56))),(42,(43,((44,51),(45,46))))),(40,58)))))),((22,24),(23,(25,26))))))))))));
	TREE * extraState = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,(10,((11,(27,((12,((13,(15,16)),((14,17),(19,(18,(20,21)))))),((((41,(28,(29,(30,((36,(31,(33,(32,(34,(35,(62,(61,63)))))))),(39,(37,38))))))),((53,((49,(50,(47,48))),(52,((55,60),(57,59))))),(54,56))),(42,(43,((44,51),(45,46))))),(40,58))))),((22,24),(23,(25,26))))))))))));
	TREE * extraState = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,(10,((11,(27,((12,((13,((14,17),(19,(18,(20,21))))),(15,16))),((((41,(28,(29,(30,((36,(31,((33,(32,(34,35))),(62,(61,63))))),(39,(37,38))))))),((53,((49,(50,(47,48))),(52,((55,60),(57,59))))),(54,56))),(42,(43,((44,51),(45,46))))),(40,58))))),(23,((22,24),(25,26))))))))))));
	TREE * extraState = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,(10,((23,((11,(27,((12,((13,((14,17),(19,(18,(20,21))))),(15,16))),((((41,(28,(29,(30,((36,(31,(32,(33,(34,(35,(62,(61,63)))))))),(39,(37,38))))))),((53,((49,(50,(47,48))),(52,((55,60),(57,59))))),(54,56))),(42,(43,((44,51),(45,46))))),(40,58))))),(22,24))),(25,26))))))))));
	TREE * extraState = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,(10,((11,(27,(12,(((13,((14,17),(19,(18,(20,21))))),(15,16)),((((41,(28,(29,(30,(36,((31,(33,(32,(34,(35,(62,(61,63))))))),(39,(37,38)))))))),((53,((49,(50,(47,48))),(52,((55,60),(57,59))))),(54,56))),(42,(43,(46,(45,(44,51)))))),(40,58)))))),((22,24),(23,(25,26))))))))))));
	TREE * extraState = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,(10,((11,(27,(12,(((13,(15,16)),((14,17),(19,(18,(20,21))))),((((41,(28,(29,(30,((36,(31,((33,(32,(34,35))),(62,(61,63))))),(39,(37,38))))))),((53,((49,(50,(47,48))),(52,((55,60),(57,59))))),(54,56))),(42,(43,((44,51),(45,46))))),(40,58)))))),(23,((22,24),(25,26))))))))))));
	TREE * extraState = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,(10,((23,((11,(27,((12,((13,(15,16)),((14,17),(19,(18,(20,21)))))),((((41,(28,(29,(30,(36,((31,((33,(32,(34,35))),(62,(61,63)))),(39,(37,38)))))))),((53,((49,(50,(47,48))),(52,((55,60),(57,59))))),(54,56))),(42,(43,((44,51),(45,46))))),(40,58))))),(22,24))),(25,26))))))))));
	TREE * extraState = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,(10,((11,(27,((12,((13,((14,17),(19,(18,(20,21))))),(15,16))),((((41,(28,(29,(30,((36,(31,((33,(32,(34,35))),(62,(61,63))))),(39,(37,38))))))),((53,((49,(50,(47,48))),(52,((55,60),(57,59))))),(54,56))),(42,(43,(46,(45,(44,51)))))),(40,58))))),((22,24),(23,(25,26))))))))))));
	TREE * extraState = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,(10,((11,(27,(12,(((13,(15,16)),((14,17),(19,(18,(20,21))))),((((41,(28,(29,(30,((36,(31,(33,(32,(34,(35,(62,(61,63)))))))),(39,(37,38))))))),((53,((49,(50,(47,48))),(52,((55,60),(57,59))))),(54,56))),(42,(43,((44,51),(45,46))))),(40,58)))))),(23,((22,24),(25,26))))))))))));
	TREE * extraState = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,(10,((11,(27,(12,(((13,((14,17),(19,(18,(20,21))))),(15,16)),((((41,(28,(29,(30,((36,(31,(33,(32,(34,(35,(62,(61,63)))))))),(39,(37,38))))))),((53,((49,(50,(47,48))),(52,((55,60),(57,59))))),(54,56))),(42,(43,(46,(45,(44,51)))))),(40,58)))))),((22,24),(23,(25,26))))))))))));
	TREE * extraState = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,(10,((24,((11,(27,((12,((13,(15,16)),((14,17),(19,(18,(20,21)))))),((((41,(28,(29,(30,((36,(31,(32,(33,(34,(35,(62,(61,63)))))))),(39,(37,38))))))),((53,((49,(50,(47,48))),(52,((55,60),(57,59))))),(54,56))),(42,(43,((44,51),(45,46))))),(40,58))))),(22,23))),(25,26))))))))));
	TREE * extraState = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,(10,((11,(27,(12,(((13,(15,16)),((14,17),(19,(18,(20,21))))),((((41,(28,(29,(30,(36,((31,(33,(32,(34,(35,(62,(61,63))))))),(39,(37,38)))))))),((53,((49,(50,(47,48))),(52,((55,60),(57,59))))),(54,56))),(42,(43,((44,51),(45,46))))),(40,58)))))),((22,24),(23,(25,26))))))))))));
	TREE * extraState = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,(10,((11,(27,((12,((13,((14,17),(19,(18,(20,21))))),(15,16))),((((41,(28,(29,(30,((36,(31,(33,(32,(34,(35,(62,(61,63)))))))),(39,(37,38))))))),((53,((49,(50,(47,48))),(52,((55,60),(57,59))))),(54,56))),(42,(43,(46,(45,(44,51)))))),(40,58))))),(23,((22,24),(25,26))))))))))));
	TREE * extraState = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,(10,(((11,(27,((12,((13,(15,16)),((14,17),(19,(18,(20,21)))))),((((41,(28,(29,(30,(36,((31,((33,(32,(34,35))),(62,(61,63)))),(39,(37,38)))))))),((53,((49,(50,(47,48))),(52,((55,60),(57,59))))),(54,56))),(42,(43,(46,(45,(44,51)))))),(40,58))))),(23,(22,24))),(25,26))))))))));
	TREE * extraState = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,(10,(24,(((11,(27,((12,((13,((14,17),(19,(18,(20,21))))),(15,16))),((((41,(28,(29,(30,(36,((31,(33,(32,(34,(35,(62,(61,63))))))),(39,(37,38)))))))),((53,((49,(50,(47,48))),(52,((55,60),(57,59))))),(54,56))),(42,(43,((44,51),(45,46))))),(40,58))))),(22,23)),(25,26)))))))))));
	TREE * extraState = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,(10,((11,(27,(12,(((13,((14,17),(19,(18,(20,21))))),(15,16)),((((41,(28,(29,(30,((36,(31,(32,(33,(34,(35,(62,(61,63)))))))),(39,(37,38))))))),((53,((49,(50,(47,48))),(52,((55,60),(57,59))))),(54,56))),(42,(43,((44,51),(45,46))))),(40,58)))))),(23,((22,24),(25,26))))))))))));
	TREE * extraState = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,(10,(24,((23,(22,(11,(27,((12,((13,((14,17),(19,(18,(20,21))))),(15,16))),((((41,(28,(29,(30,((36,(31,((33,(32,(34,35))),(62,(61,63))))),(39,(37,38))))))),((53,((49,(50,(47,48))),(52,((55,60),(57,59))))),(54,56))),(42,(43,((44,51),(45,46))))),(40,58))))))),(25,26)))))))))));
	TREE * extraState = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,(10,((11,(27,((12,((13,(15,16)),((14,17),(19,(18,(20,21)))))),((((41,(28,(29,(30,((36,(31,((33,(32,(34,35))),(62,(61,63))))),(39,(37,38))))))),((53,((49,(50,(47,48))),(52,((55,60),(57,59))))),(54,56))),(42,(43,(46,(45,(44,51)))))),(40,58))))),((22,24),(23,(25,26))))))))))));
	TREE * extraState = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,(10,((11,(27,((12,((13,(15,16)),((14,17),(19,(18,(20,21)))))),((((41,(28,(29,(30,(36,((31,((33,(32,(34,35))),(62,(61,63)))),(39,(37,38)))))))),((53,((49,(50,(47,48))),(52,((55,60),(57,59))))),(54,56))),(42,(43,(46,(45,(44,51)))))),(40,58))))),((22,24),(23,(25,26))))))))))));
	TREE * extraState = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,(10,(((11,(27,((12,((13,((14,17),(19,(18,(20,21))))),(15,16))),((((41,(28,(29,(30,((36,(31,(33,(32,(34,(35,(62,(61,63)))))))),(39,(37,38))))))),((53,((49,(50,(47,48))),(52,((55,60),(57,59))))),(54,56))),(42,(43,((44,51),(45,46))))),(40,58))))),(23,(22,24))),(25,26))))))))));
	TREE * extraState = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,(10,((23,((11,(27,((12,((13,((14,17),(19,(18,(20,21))))),(15,16))),((((41,(28,(29,(30,(36,((31,(33,(32,(34,(35,(62,(61,63))))))),(39,(37,38)))))))),((53,((49,(50,(47,48))),(52,((55,60),(57,59))))),(54,56))),(42,(43,(46,(45,(44,51)))))),(40,58))))),(22,24))),(25,26))))))))));
	TREE * extraState = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,(10,(24,(((11,(27,((12,((13,(15,16)),((14,17),(19,(18,(20,21)))))),((((41,(28,(29,(30,((36,(31,(33,(32,(34,(35,(62,(61,63)))))))),(39,(37,38))))))),((53,((49,(50,(47,48))),(52,((55,60),(57,59))))),(54,56))),(42,(43,((44,51),(45,46))))),(40,58))))),(22,23)),(25,26)))))))))));
	TREE * extraState = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,(10,(24,(((11,(27,((12,((13,((14,17),(19,(18,(20,21))))),(15,16))),((((41,(28,(29,(30,(36,((31,((33,(32,(34,35))),(62,(61,63)))),(39,(37,38)))))))),((53,((49,(50,(47,48))),(52,((55,60),(57,59))))),(54,56))),(42,(43,((44,51),(45,46))))),(40,58))))),(22,23)),(25,26)))))))))));
	TREE * extraState = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,(10,((11,(27,((12,((13,((14,17),(19,(18,(20,21))))),(15,16))),((((41,(28,(29,(30,((36,(31,(32,(33,(34,(35,(62,(61,63)))))))),(39,(37,38))))))),((53,((49,(50,(47,48))),(52,((55,60),(57,59))))),(54,56))),(42,(43,((44,51),(45,46))))),(40,58))))),(23,((22,24),(25,26))))))))))));
	TREE * extraState = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,(10,((11,(27,(12,(((13,((14,17),(19,(18,(20,21))))),(15,16)),((((41,(28,(29,(30,(36,((31,((33,(32,(34,35))),(62,(61,63)))),(39,(37,38)))))))),((53,((49,(50,(47,48))),(52,((55,60),(57,59))))),(54,56))),(42,(43,((44,51),(45,46))))),(40,58)))))),(23,((22,24),(25,26))))))))))));
	TREE * extraState = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,(10,(24,(((11,(27,((12,((13,(15,16)),((14,17),(19,(18,(20,21)))))),((((41,(28,(29,(30,((36,(31,((33,(32,(34,35))),(62,(61,63))))),(39,(37,38))))))),((53,((49,(50,(47,48))),(52,((55,60),(57,59))))),(54,56))),(42,(43,((44,51),(45,46))))),(40,58))))),(22,23)),(25,26)))))))))));
	TREE * extraState = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,(10,((11,(27,((12,((13,(15,16)),((14,17),(19,(18,(20,21)))))),((((41,(28,(29,(30,(36,((31,((33,(32,(34,35))),(62,(61,63)))),(39,(37,38)))))))),((53,((49,(50,(47,48))),(52,((55,60),(57,59))))),(54,56))),(42,(43,(46,(45,(44,51)))))),(40,58))))),(23,((22,24),(25,26))))))))))));
	TREE * extraState = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,(10,((11,(27,((12,((13,(15,16)),((14,17),(19,(18,(20,21)))))),((((41,(28,(29,(30,(36,((31,(33,(32,(34,(35,(62,(61,63))))))),(39,(37,38)))))))),((53,((49,(50,(47,48))),(52,((55,60),(57,59))))),(54,56))),(42,(43,(46,(45,(44,51)))))),(40,58))))),((22,24),(23,(25,26))))))))))));
	TREE * extraState = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,(10,((11,(27,((12,((13,(15,16)),((14,17),(19,(18,(20,21)))))),((((41,(28,(29,(30,((36,(31,(33,(32,(34,(35,(62,(61,63)))))))),(39,(37,38))))))),((53,((49,(50,(47,48))),(52,((55,60),(57,59))))),(54,56))),(42,(43,((44,51),(45,46))))),(40,58))))),(23,((22,24),(25,26))))))))))));
	TREE * extraState = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,(10,(24,((23,(22,(11,(27,((12,((13,(15,16)),((14,17),(19,(18,(20,21)))))),((((41,(28,(29,(30,((36,(31,(32,(33,(34,(35,(62,(61,63)))))))),(39,(37,38))))))),((53,((49,(50,(47,48))),(52,((55,60),(57,59))))),(54,56))),(42,(43,(46,(45,(44,51)))))),(40,58))))))),(25,26)))))))))));
	TREE * extraState = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,(10,((11,(27,(12,(((13,(15,16)),((14,17),(19,(18,(20,21))))),((((41,(28,(29,(30,((36,(31,(32,(33,(34,(35,(62,(61,63)))))))),(39,(37,38))))))),((53,((49,(50,(47,48))),(52,((55,60),(57,59))))),(54,56))),(42,(43,((44,51),(45,46))))),(40,58)))))),((22,24),(23,(25,26))))))))))));
	TREE * extraState = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,(10,(((11,(27,((12,((13,((14,17),(19,(18,(20,21))))),(15,16))),((((41,(28,(29,(30,((36,(31,(33,(32,(34,(35,(62,(61,63)))))))),(39,(37,38))))))),((53,((49,(50,(47,48))),(52,((55,60),(57,59))))),(54,56))),(42,(43,(46,(45,(44,51)))))),(40,58))))),(23,(22,24))),(25,26))))))))));
	TREE * extraState = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,(10,((24,((11,(27,((12,((13,((14,17),(19,(18,(20,21))))),(15,16))),((((41,(28,(29,(30,((36,(31,(33,(32,(34,(35,(62,(61,63)))))))),(39,(37,38))))))),((53,((49,(50,(47,48))),(52,((55,60),(57,59))))),(54,56))),(42,(43,((44,51),(45,46))))),(40,58))))),(22,23))),(25,26))))))))));
	TREE * extraState = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,(10,((23,((11,(27,((12,((13,((14,17),(19,(18,(20,21))))),(15,16))),((((41,(28,(29,(30,((36,(31,(32,(33,(34,(35,(62,(61,63)))))))),(39,(37,38))))))),((53,((49,(50,(47,48))),(52,((55,60),(57,59))))),(54,56))),(42,(43,(46,(45,(44,51)))))),(40,58))))),(22,24))),(25,26))))))))));
	TREE * extraState = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,(10,((24,((11,(27,((12,((13,(15,16)),((14,17),(19,(18,(20,21)))))),((((41,(28,(29,(30,((36,(31,((33,(32,(34,35))),(62,(61,63))))),(39,(37,38))))))),((53,((49,(50,(47,48))),(52,((55,60),(57,59))))),(54,56))),(42,(43,((44,51),(45,46))))),(40,58))))),(22,23))),(25,26))))))))));
	TREE * extraState = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,(10,((23,((11,(27,((12,((13,((14,17),(19,(18,(20,21))))),(15,16))),((((41,(28,(29,(30,((36,(31,(33,(32,(34,(35,(62,(61,63)))))))),(39,(37,38))))))),((53,((49,(50,(47,48))),(52,((55,60),(57,59))))),(54,56))),(42,(43,(46,(45,(44,51)))))),(40,58))))),(22,24))),(25,26))))))))));
	TREE * extraState = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,(10,((24,((11,(27,((12,((13,((14,17),(19,(18,(20,21))))),(15,16))),((((41,(28,(29,(30,((36,(31,(32,(33,(34,(35,(62,(61,63)))))))),(39,(37,38))))))),((53,((49,(50,(47,48))),(52,((55,60),(57,59))))),(54,56))),(42,(43,(46,(45,(44,51)))))),(40,58))))),(22,23))),(25,26))))))))));
	TREE * extraState = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,(10,(24,((23,(22,(11,(27,((12,((13,((14,17),(19,(18,(20,21))))),(15,16))),((((41,(28,(29,(30,((36,(31,(32,(33,(34,(35,(62,(61,63)))))))),(39,(37,38))))))),((53,((49,(50,(47,48))),(52,((55,60),(57,59))))),(54,56))),(42,(43,((44,51),(45,46))))),(40,58))))))),(25,26)))))))))));
	TREE * extraState = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,(10,((11,(27,((12,((13,(15,16)),((14,17),(19,(18,(20,21)))))),((((41,(28,(29,(30,(36,((31,(33,(32,(34,(35,(62,(61,63))))))),(39,(37,38)))))))),((53,((49,(50,(47,48))),(52,((55,60),(57,59))))),(54,56))),(42,(43,((44,51),(45,46))))),(40,58))))),(23,((22,24),(25,26))))))))))));
	TREE * extraState = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,(10,(24,(((11,(27,((12,((13,(15,16)),((14,17),(19,(18,(20,21)))))),((((41,(28,(29,(30,(36,((31,(33,(32,(34,(35,(62,(61,63))))))),(39,(37,38)))))))),((53,((49,(50,(47,48))),(52,((55,60),(57,59))))),(54,56))),(42,(43,((44,51),(45,46))))),(40,58))))),(22,23)),(25,26)))))))))));
	TREE * extraState = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,(10,((23,((11,(27,((12,((13,(15,16)),((14,17),(19,(18,(20,21)))))),((((41,(28,(29,(30,(36,((31,(33,(32,(34,(35,(62,(61,63))))))),(39,(37,38)))))))),((53,((49,(50,(47,48))),(52,((55,60),(57,59))))),(54,56))),(42,(43,((44,51),(45,46))))),(40,58))))),(22,24))),(25,26))))))))));
	TREE * extraState = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,(10,((24,((11,(27,((12,((13,((14,17),(19,(18,(20,21))))),(15,16))),((((41,(28,(29,(30,(36,((31,(33,(32,(34,(35,(62,(61,63))))))),(39,(37,38)))))))),((53,((49,(50,(47,48))),(52,((55,60),(57,59))))),(54,56))),(42,(43,((44,51),(45,46))))),(40,58))))),(22,23))),(25,26))))))))));
	TREE * extraState = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,(10,(24,(((11,(27,((12,((13,(15,16)),((14,17),(19,(18,(20,21)))))),((((41,(28,(29,(30,((36,(31,(33,(32,(34,(35,(62,(61,63)))))))),(39,(37,38))))))),((53,((49,(50,(47,48))),(52,((55,60),(57,59))))),(54,56))),(42,(43,(46,(45,(44,51)))))),(40,58))))),(22,23)),(25,26)))))))))));
	TREE * extraState = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,(10,((11,(27,((12,((13,((14,17),(19,(18,(20,21))))),(15,16))),((((41,(28,(29,(30,((36,(31,(33,(32,(34,(35,(62,(61,63)))))))),(39,(37,38))))))),((53,((49,(50,(47,48))),(52,((55,60),(57,59))))),(54,56))),(42,(43,((44,51),(45,46))))),(40,58))))),(23,((22,24),(25,26))))))))))));
	TREE * extraState = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,(10,((11,(27,(12,(((13,((14,17),(19,(18,(20,21))))),(15,16)),((((41,(28,(29,(30,(36,((31,(33,(32,(34,(35,(62,(61,63))))))),(39,(37,38)))))))),((53,((49,(50,(47,48))),(52,((55,60),(57,59))))),(54,56))),(42,(43,((44,51),(45,46))))),(40,58)))))),(23,((22,24),(25,26))))))))))));
	TREE * extraState = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,(10,((11,(27,(12,(((13,((14,17),(19,(18,(20,21))))),(15,16)),((((41,(28,(29,(30,((36,(31,(32,(33,(34,(35,(62,(61,63)))))))),(39,(37,38))))))),((53,((49,(50,(47,48))),(52,((55,60),(57,59))))),(54,56))),(42,(43,(46,(45,(44,51)))))),(40,58)))))),(23,((22,24),(25,26))))))))))));
	TREE * extraState = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,(10,((11,(27,(12,(((13,((14,17),(19,(18,(20,21))))),(15,16)),((((41,(28,(29,(30,(36,((31,(33,(32,(34,(35,(62,(61,63))))))),(39,(37,38)))))))),((53,((49,(50,(47,48))),(52,((55,60),(57,59))))),(54,56))),(42,(43,(46,(45,(44,51)))))),(40,58)))))),(23,((22,24),(25,26))))))))))));
	TREE * extraState = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,(10,(24,(((11,(27,((12,((13,((14,17),(19,(18,(20,21))))),(15,16))),((((41,(28,(29,(30,((36,(31,(33,(32,(34,(35,(62,(61,63)))))))),(39,(37,38))))))),((53,((49,(50,(47,48))),(52,((55,60),(57,59))))),(54,56))),(42,(43,((44,51),(45,46))))),(40,58))))),(22,23)),(25,26)))))))))));
	TREE * extraState = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,(10,((11,(27,(12,(((13,(15,16)),((14,17),(19,(18,(20,21))))),((((41,(28,(29,(30,(36,((31,((33,(32,(34,35))),(62,(61,63)))),(39,(37,38)))))))),((53,((49,(50,(47,48))),(52,((55,60),(57,59))))),(54,56))),(42,(43,(46,(45,(44,51)))))),(40,58)))))),((22,24),(23,(25,26))))))))))));
	TREE * extraState = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,(10,((11,(27,(12,(((13,((14,17),(19,(18,(20,21))))),(15,16)),((((41,(28,(29,(30,(36,((31,((33,(32,(34,35))),(62,(61,63)))),(39,(37,38)))))))),((53,((49,(50,(47,48))),(52,((55,60),(57,59))))),(54,56))),(42,(43,(46,(45,(44,51)))))),(40,58)))))),(23,((22,24),(25,26))))))))))));
	TREE * extraState = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,(10,((11,(27,(12,(((13,((14,17),(19,(18,(20,21))))),(15,16)),((((41,(28,(29,(30,(36,((31,((33,(32,(34,35))),(62,(61,63)))),(39,(37,38)))))))),((53,((49,(50,(47,48))),(52,((55,60),(57,59))))),(54,56))),(42,(43,((44,51),(45,46))))),(40,58)))))),((22,24),(23,(25,26))))))))))));
	TREE * inapplicable = [&R] (1,(2,(3,(4,(5,((7,(8,6)),(9,((10,(11,(27,(12,((13,((19,(18,(21,20))),(17,14))),((16,15),((28,(29,(30,(36,((31,((33,(32,(35,34))),(62,(63,61)))),(39,(38,37))))))),(41,(((53,((52,((59,57),(55,60))),(49,(50,(47,48))))),(56,54)),(42,(43,((46,(45,44)),(51,(58,40)))))))))))))),((23,(22,24)),(26,25))))))))));
	TREE * inapplicable = [&R] (1,(2,(3,(4,(5,((7,(8,6)),(9,((10,(11,(27,(12,((13,((14,17),(19,(18,(20,21))))),((28,((29,(30,((36,(31,((33,(32,(35,34))),(62,(63,61))))),(39,(37,38))))),(41,((42,(43,(44,(46,(45,(51,(58,40))))))),((53,((52,((59,57),(60,55))),(49,(50,(47,48))))),(54,56)))))),(15,16))))))),((23,(24,22)),(26,25))))))))));
	TREE * inapplicable = [&R] (1,(2,(3,(4,(5,((7,(8,6)),(9,((10,(11,(27,(12,(((16,15),((28,(29,(30,((36,(31,(33,(32,(34,(35,(62,(61,63)))))))),(39,(38,37)))))),(41,(((53,((52,((60,55),(57,59))),(49,(50,(48,47))))),(56,54)),(42,(43,((46,(44,45)),(51,(40,58))))))))),(13,((17,14),(19,(18,(20,21)))))))))),((23,(24,22)),(25,26))))))))));
	TREE * inapplicable = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,((10,(11,(27,(12,((13,((17,14),(19,(18,(21,20))))),((15,16),(28,((29,(30,(36,((31,(33,(32,(34,(35,(62,(63,61))))))),(39,(37,38)))))),(41,(((53,((52,((59,57),(55,60))),(49,(50,(47,48))))),(54,56)),(42,(43,(46,((51,(58,40)),(44,45))))))))))))))),((23,(24,22)),(26,25))))))))));
	TREE * inapplicable = [&R] (1,(2,(3,(4,(5,((9,((10,(11,(27,(12,(((16,15),((28,(29,(30,(36,((31,(33,(32,(34,(35,(62,(63,61))))))),(39,(38,37))))))),(41,(((54,56),(53,((52,((60,55),(59,57))),(49,(50,(47,48)))))),(42,(43,((46,(51,(58,40))),(44,45)))))))),(13,((14,17),(19,(18,(21,20)))))))))),((23,(22,24)),(26,25)))),(7,(8,6))))))));
	TREE * inapplicable = [&R] (1,(2,(3,(4,(5,((9,((10,(11,(27,(12,((13,((19,(18,(21,20))),(14,17))),((16,15),(28,((29,(30,((36,(31,(32,(33,(34,(35,(62,(61,63)))))))),(39,(38,37))))),(41,(((53,((52,((57,59),(60,55))),(49,(50,(48,47))))),(54,56)),(42,(43,(44,(45,(46,(51,(40,58))))))))))))))))),((23,(24,22)),(25,26)))),(7,(8,6))))))));
	TREE * inapplicable = [&R] (1,(2,(3,(4,(5,((7,(8,6)),(9,((10,(11,(27,(12,((13,((19,(18,(20,21))),(14,17))),((15,16),(28,((29,(30,(36,((31,((33,(32,(34,35))),(62,(63,61)))),(39,(38,37)))))),(41,((42,(43,((46,(51,(58,40))),(45,44)))),((53,((49,(50,(47,48))),(52,((60,55),(59,57))))),(54,56)))))))))))),((23,(24,22)),(26,25))))))))));
	TREE * inapplicable = [&R] (1,(2,(3,(4,(5,((9,((10,(11,(27,(12,(((15,16),((28,(29,(30,((36,(31,(32,(33,(34,(35,(62,(63,61)))))))),(39,(37,38)))))),(41,(((53,((52,((60,55),(59,57))),(49,(50,(47,48))))),(56,54)),(42,(43,(44,((45,46),(51,(58,40)))))))))),(13,((14,17),(19,(18,(21,20)))))))))),((23,(22,24)),(26,25)))),(7,(8,6))))))));
	TREE * inapplicable = [&R] (1,(2,(3,(4,(5,((7,(8,6)),(9,((10,(11,(27,(12,((13,((14,17),(19,(18,(20,21))))),((15,16),((28,(29,(30,((36,(31,(32,(33,(34,(35,(62,(63,61)))))))),(39,(37,38)))))),(41,((42,(43,((46,(51,(58,40))),(45,44)))),((53,((52,((60,55),(59,57))),(49,(50,(47,48))))),(54,56))))))))))),((23,(24,22)),(26,25))))))))));
	TREE * inapplicable = [&R] (1,(2,(3,(4,(5,((9,((10,(11,(27,(12,((13,((14,17),(19,(18,(20,21))))),((15,16),(28,((29,(30,((36,(31,(33,(32,(34,(35,(62,(63,61)))))))),(39,(38,37))))),(41,(((53,((52,((60,55),(59,57))),(49,(50,(48,47))))),(54,56)),(42,(43,(44,((45,46),(51,(58,40)))))))))))))))),((23,(24,22)),(26,25)))),(7,(6,8))))))));
	TREE * inapplicable = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,((10,(11,(27,(12,((13,((17,14),(19,(18,(21,20))))),((28,((29,(30,((36,(31,((33,(32,(35,34))),(62,(61,63))))),(39,(37,38))))),(41,((42,(43,(44,((46,45),(51,(40,58)))))),((53,((52,((57,59),(55,60))),(49,(50,(48,47))))),(56,54)))))),(15,16))))))),((23,(24,22)),(25,26))))))))));
	TREE * inapplicable = [&R] (1,(2,(3,(4,(5,((7,(8,6)),(9,((10,(11,(27,(12,((13,((14,17),(19,(18,(20,21))))),((28,((29,(30,((36,(31,(33,(32,(34,(35,(62,(63,61)))))))),(39,(37,38))))),(41,((42,(43,((45,44),(46,(51,(58,40)))))),((53,((52,((55,60),(59,57))),(49,(50,(47,48))))),(56,54)))))),(15,16))))))),((23,(24,22)),(26,25))))))))));
	TREE * inapplicable = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,((10,(11,(27,(12,((13,((19,(18,(20,21))),(17,14))),((16,15),(28,((29,(30,((36,(31,(32,(33,(34,(35,(62,(61,63)))))))),(39,(37,38))))),(41,(((53,((52,((57,59),(55,60))),(49,(50,(48,47))))),(54,56)),(42,(43,((46,(45,44)),(51,(40,58))))))))))))))),((23,(22,24)),(25,26))))))))));
	TREE * inapplicable = [&R] (1,(2,(3,(4,(5,((7,(8,6)),(9,((10,(11,(27,(12,(((15,16),(28,((29,(30,(36,((31,((33,(32,(34,35))),(62,(63,61)))),(39,(37,38)))))),(41,(((54,56),(53,((52,((59,57),(55,60))),(49,(50,(47,48)))))),(42,(43,(44,(46,(45,(51,(58,40)))))))))))),(13,((19,(18,(20,21))),(17,14)))))))),((23,(24,22)),(26,25))))))))));
	TREE * inapplicable = [&R] (1,(2,(3,(4,(5,((7,(8,6)),(9,((10,(11,(27,(12,(((15,16),((28,(29,(30,(36,((31,(33,(32,(34,(35,(62,(63,61))))))),(39,(37,38))))))),(41,(((53,((52,((60,55),(59,57))),(49,(50,(48,47))))),(54,56)),(42,(43,(44,(45,(46,(51,(58,40))))))))))),(13,((14,17),(19,(18,(20,21)))))))))),((23,(24,22)),(26,25))))))))));
	TREE * inapplicable = [&R] (1,(2,(3,(4,(5,((9,((10,(11,(27,(12,((13,((19,(18,(20,21))),(17,14))),((15,16),((28,(29,(30,((36,(31,(32,(33,(34,(35,(62,(63,61)))))))),(39,(38,37)))))),(41,(((53,((52,((59,57),(55,60))),(49,(50,(47,48))))),(56,54)),(42,(43,((46,(45,44)),(51,(58,40)))))))))))))),((23,(22,24)),(26,25)))),(7,(6,8))))))));
	TREE * inapplicable = [&R] (1,(2,(3,(4,(5,((7,(8,6)),(9,((10,(11,(27,(12,((13,((17,14),(19,(18,(21,20))))),((15,16),((28,(29,(30,((36,(31,((33,(32,(35,34))),(62,(61,63))))),(39,(37,38)))))),(41,((42,(43,(46,((51,(40,58)),(45,44))))),((53,((52,((57,59),(55,60))),(49,(50,(48,47))))),(56,54))))))))))),((23,(24,22)),(25,26))))))))));
	TREE * inapplicable = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,((10,(11,(27,(12,((13,((19,(18,(21,20))),(17,14))),((16,15),(28,((29,(30,((36,(31,((33,(32,(35,34))),(62,(61,63))))),(39,(37,38))))),(41,(((56,54),(53,((49,(50,(48,47))),(52,((57,59),(55,60)))))),(42,(43,((46,(45,(40,58))),(51,44)))))))))))))),((23,(22,24)),(25,26))))))))));
	TREE * inapplicable = [&R] (1,(2,(3,(4,(5,((9,((10,(11,(27,(12,((13,((14,17),(19,(18,(20,21))))),((15,16),(28,((29,(30,(36,((31,((33,(32,(34,35))),(62,(63,61)))),(39,(38,37)))))),(41,(((56,54),(53,((52,((60,55),(59,57))),(49,(50,(48,47)))))),(42,(43,(44,((45,46),(51,(58,40)))))))))))))))),((23,(22,24)),(26,25)))),(7,(6,8))))))));
	TREE * inapplicable = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,((10,(11,(27,(12,((13,((19,(18,(21,20))),(14,17))),((15,16),(28,((29,(30,((36,(31,(32,(33,(34,(35,(62,(63,61)))))))),(39,(37,38))))),(41,((42,(43,(44,(46,(45,(51,(58,40))))))),((53,((52,((60,55),(59,57))),(49,(50,(47,48))))),(56,54)))))))))))),((23,(24,22)),(26,25))))))))));
	TREE * inapplicable = [&R] (1,(2,(3,(4,(5,((9,((10,(11,(27,(12,((13,((14,17),(19,(18,(21,20))))),((15,16),(28,((29,(30,(36,((31,((33,(32,(35,34))),(62,(63,61)))),(39,(38,37)))))),(41,(((53,((52,((59,57),(60,55))),(49,(50,(47,48))))),(54,56)),(42,(43,((46,(45,44)),(51,(58,40))))))))))))))),((23,(24,22)),(26,25)))),(7,(8,6))))))));
	TREE * inapplicable = [&R] (1,(2,(3,(4,(5,((9,((10,(11,(27,(12,((13,((17,14),(19,(18,(20,21))))),((15,16),((28,(29,(30,((36,(31,((33,(32,(34,35))),(62,(61,63))))),(39,(37,38)))))),(41,(((54,56),(53,((52,((55,60),(57,59))),(49,(50,(48,47)))))),(42,(43,(44,(46,(45,(51,(40,58)))))))))))))))),((23,(24,22)),(25,26)))),(7,(6,8))))))));
	TREE * inapplicable = [&R] (1,(2,(3,(4,(5,((9,((10,(11,(27,(12,((13,((19,(18,(21,20))),(17,14))),((15,16),(28,((29,(30,(36,((31,((33,(32,(34,35))),(62,(63,61)))),(39,(37,38)))))),(41,(((54,56),(53,((49,(50,(47,48))),(52,((60,55),(59,57)))))),(42,(43,((46,(45,(58,40))),(44,51)))))))))))))),((23,(24,22)),(26,25)))),(7,(8,6))))))));
	TREE * inapplicable = [&R] (1,(2,(3,(4,(5,((9,((10,(11,(27,(12,((13,((14,17),(19,(18,(20,21))))),((16,15),((28,(29,(30,((36,(31,(33,(32,(34,(35,(62,(61,63)))))))),(39,(37,38)))))),(41,((42,(43,((46,(45,(40,58))),(44,51)))),((53,((49,(50,(47,48))),(52,((57,59),(55,60))))),(56,54))))))))))),((23,(22,24)),(25,26)))),(7,(8,6))))))));
	TREE * inapplicable = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,((10,(11,(27,(12,((13,((19,(18,(20,21))),(17,14))),((28,((29,(30,(36,((31,((33,(32,(34,35))),(62,(61,63)))),(39,(38,37)))))),(41,((42,(43,(46,((51,(40,58)),(45,44))))),((53,((52,((57,59),(55,60))),(49,(50,(48,47))))),(54,56)))))),(16,15))))))),((23,(22,24)),(25,26))))))))));
	TREE * inapplicable = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,((10,(11,(27,(12,((13,((17,14),(19,(18,(21,20))))),((16,15),((28,(29,(30,((36,(31,(32,(33,(34,(35,(62,(61,63)))))))),(39,(38,37)))))),(41,((42,(43,(46,((44,45),(51,(40,58)))))),((54,56),(53,((52,((57,59),(55,60))),(49,(50,(48,47))))))))))))))),((23,(22,24)),(25,26))))))))));
	TREE * inapplicable = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,((10,(11,(27,(12,((13,((17,14),(19,(18,(21,20))))),((16,15),((28,(29,(30,((36,(31,(33,(32,(34,(35,(62,(61,63)))))))),(39,(38,37)))))),(41,(((54,56),(53,((52,((57,59),(60,55))),(49,(50,(48,47)))))),(42,(43,(44,((45,46),(51,(40,58))))))))))))))),((23,(22,24)),(25,26))))))))));
	TREE * inapplicable = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,((10,(11,(27,(12,((13,((19,(18,(20,21))),(17,14))),((16,15),((28,(29,(30,((36,(31,((33,(32,(34,35))),(62,(61,63))))),(39,(37,38)))))),(41,((42,(43,((46,(51,(40,58))),(44,45)))),((56,54),(53,((52,((57,59),(55,60))),(49,(50,(48,47))))))))))))))),((23,(24,22)),(25,26))))))))));
	TREE * inapplicable = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,((10,(11,(27,(12,((13,((19,(18,(20,21))),(17,14))),((16,15),((28,(29,(30,((36,(31,((62,(61,63)),(33,(32,(34,35)))))),(39,(37,38)))))),(41,(((54,56),(53,((49,(50,(48,47))),(52,((55,60),(57,59)))))),(42,(43,(44,((45,46),(51,(40,58))))))))))))))),((23,(24,22)),(25,26))))))))));
	TREE * inapplicable = [&R] (1,(2,(3,(4,(5,((9,((10,(11,(27,(12,((13,((17,14),(19,(18,(21,20))))),((16,15),((28,(29,(30,(36,((31,((33,(32,(35,34))),(62,(61,63)))),(39,(38,37))))))),(41,((42,(43,((46,(45,(40,58))),(51,44)))),((53,((52,((55,60),(57,59))),(49,(50,(48,47))))),(54,56))))))))))),((23,(22,24)),(25,26)))),(7,(6,8))))))));
	TREE * inapplicable = [&R] (1,(2,(3,(4,(5,((9,((10,(11,(27,(12,((13,((17,14),(19,(18,(20,21))))),((16,15),(28,((29,(30,(36,((31,(33,(32,(34,(35,(62,(61,63))))))),(39,(37,38)))))),(41,(((53,((52,((57,59),(55,60))),(49,(50,(48,47))))),(56,54)),(42,(43,(44,(45,(46,(51,(40,58))))))))))))))))),((23,(24,22)),(25,26)))),(7,(6,8))))))));
	TREE * inapplicable = [&R] (1,(2,(3,(4,(5,((7,(8,6)),(9,((10,(11,(27,(12,(((16,15),((28,(29,(30,((36,(31,(32,(33,(34,(35,(62,(63,61)))))))),(39,(38,37)))))),(41,(((54,56),(53,((52,((60,55),(59,57))),(49,(50,(47,48)))))),(42,(43,(44,(45,(46,(51,(58,40))))))))))),(13,((14,17),(19,(18,(21,20)))))))))),((23,(22,24)),(26,25))))))))));
	TREE * inapplicable = [&R] (1,(2,(3,(4,(5,((7,(8,6)),(9,((10,(11,(27,(12,(((15,16),((28,(29,(30,((36,(31,(33,(32,(34,(35,(62,(63,61)))))))),(39,(37,38)))))),(41,(((53,((52,((59,57),(60,55))),(49,(50,(48,47))))),(54,56)),(42,(43,(44,(45,(46,(51,(58,40))))))))))),(13,((14,17),(19,(18,(20,21)))))))))),((23,(24,22)),(26,25))))))))));
	TREE * inapplicable = [&R] (1,(2,(3,(4,(5,((9,((10,(11,(27,(12,((13,((17,14),(19,(18,(21,20))))),((16,15),(28,((29,(30,(36,((31,(33,(32,(34,(35,(62,(61,63))))))),(39,(37,38)))))),(41,(((53,((52,((55,60),(57,59))),(49,(50,(47,48))))),(56,54)),(42,(43,(44,(46,(45,(51,(40,58))))))))))))))))),((23,(22,24)),(25,26)))),(7,(8,6))))))));
	TREE * inapplicable = [&R] (1,(2,(3,(4,(5,((9,((10,(11,(27,(12,((13,((17,14),(19,(18,(21,20))))),((16,15),(28,((29,(30,((36,(31,(33,(32,(34,(35,(62,(61,63)))))))),(39,(38,37))))),(41,(((53,((52,((55,60),(57,59))),(49,(50,(48,47))))),(56,54)),(42,(43,(44,(46,(45,(51,(40,58))))))))))))))))),((23,(22,24)),(25,26)))),(7,(8,6))))))));
	TREE * inapplicable = [&R] (1,(2,(3,(4,(5,((7,(8,6)),(9,((10,(11,(27,(12,((13,((17,14),(19,(18,(20,21))))),((15,16),(28,((29,(30,((36,(31,((33,(32,(34,35))),(62,(61,63))))),(39,(37,38))))),(41,((42,(43,(44,(45,(46,(51,(40,58))))))),((53,((49,(50,(48,47))),(52,((57,59),(55,60))))),(56,54)))))))))))),((23,(24,22)),(25,26))))))))));
	TREE * inapplicable = [&R] (1,(2,(3,(4,(5,((9,((10,(11,(27,(12,((13,((14,17),(19,(18,(21,20))))),((15,16),(28,((29,(30,((36,(31,(33,(32,(34,(35,(62,(63,61)))))))),(39,(37,38))))),(41,(((56,54),(53,((49,(50,(47,48))),(52,((60,55),(59,57)))))),(42,(43,(46,((44,45),(51,(58,40)))))))))))))))),((23,(24,22)),(26,25)))),(7,(6,8))))))));
	TREE * inapplicable = [&R] (1,(2,(3,(4,(5,((9,((10,(11,(27,(12,((13,((19,(18,(20,21))),(17,14))),((15,16),(28,((29,(30,((36,(31,(33,(32,(34,(35,(62,(63,61)))))))),(39,(38,37))))),(41,((42,(43,((46,(45,(58,40))),(44,51)))),((53,((49,(50,(47,48))),(52,((60,55),(59,57))))),(54,56)))))))))))),((23,(24,22)),(26,25)))),(7,(6,8))))))));
	TREE * inapplicable = [&R] (1,(2,(3,(4,(5,((7,(8,6)),(9,((10,(11,(27,(12,((13,((19,(18,(21,20))),(14,17))),((15,16),(28,((29,(30,((36,(31,(32,(33,(34,(35,(62,(63,61)))))))),(39,(38,37))))),(41,(((53,((52,((59,57),(60,55))),(49,(50,(47,48))))),(56,54)),(42,(43,(44,((45,46),(51,(58,40)))))))))))))))),((23,(24,22)),(26,25))))))))));
	TREE * inapplicable = [&R] (1,(2,(3,(4,(5,((9,((10,(11,(27,(12,((13,((17,14),(19,(18,(20,21))))),((16,15),((28,(29,(30,(36,((31,(33,(32,(34,(35,(62,(61,63))))))),(39,(37,38))))))),(41,(((54,56),(53,((52,((55,60),(57,59))),(49,(50,(48,47)))))),(42,(43,(44,((45,46),(51,(40,58))))))))))))))),((23,(24,22)),(25,26)))),(7,(6,8))))))));
	TREE * inapplicable = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,((10,(11,(27,(12,((13,((19,(18,(20,21))),(17,14))),((16,15),((28,(29,(30,((36,(31,((33,(32,(34,35))),(62,(61,63))))),(39,(37,38)))))),(41,(((56,54),(53,((52,((57,59),(55,60))),(49,(50,(48,47)))))),(42,(43,((46,(45,44)),(51,(40,58)))))))))))))),((23,(22,24)),(25,26))))))))));
	TREE * inapplicable = [&R] (1,(2,(3,(4,(5,((9,((10,(11,(27,(12,((13,((19,(18,(20,21))),(17,14))),((16,15),((28,(29,(30,(36,((31,(33,(32,(34,(35,(62,(61,63))))))),(39,(37,38))))))),(41,((42,(43,(46,((51,(40,58)),(45,44))))),((53,((52,((55,60),(57,59))),(49,(50,(47,48))))),(56,54))))))))))),((23,(24,22)),(25,26)))),(7,(8,6))))))));
	TREE * inapplicable = [&R] (1,(2,(3,(4,(5,((9,((10,(11,(27,(12,((13,((19,(18,(20,21))),(14,17))),((16,15),(28,((29,(30,((36,(31,((33,(32,(35,34))),(62,(61,63))))),(39,(37,38))))),(41,(((54,56),(53,((52,((60,55),(57,59))),(49,(50,(48,47)))))),(42,(43,(46,((44,45),(51,(40,58)))))))))))))))),((23,(24,22)),(25,26)))),(7,(6,8))))))));
	TREE * inapplicable = [&R] (1,(2,(3,(4,(5,((7,(8,6)),(9,((10,(11,(27,(12,((13,((17,14),(19,(18,(20,21))))),((15,16),((28,(29,(30,((36,(31,(33,(32,(34,(35,(62,(61,63)))))))),(39,(37,38)))))),(41,((42,(43,((46,(51,(40,58))),(45,44)))),((53,((49,(50,(48,47))),(52,((55,60),(57,59))))),(56,54))))))))))),((23,(24,22)),(25,26))))))))));
	TREE * inapplicable = [&R] (1,(2,(3,(4,(5,((7,(8,6)),(9,((10,(11,(27,(12,((13,((17,14),(19,(18,(21,20))))),(((28,(29,(30,(36,((31,((33,(32,(34,35))),(62,(61,63)))),(39,(37,38))))))),(41,((42,(43,(44,((46,45),(51,(40,58)))))),((53,((52,((57,59),(55,60))),(49,(50,(48,47))))),(56,54))))),(15,16))))))),((23,(24,22)),(25,26))))))))));
	TREE * inapplicable = [&R] (1,(2,(3,(4,(5,((9,((10,(11,(27,(12,((13,((14,17),(19,(18,(21,20))))),((15,16),(28,((29,(30,(36,((31,(33,(32,(34,(35,(62,(63,61))))))),(39,(37,38)))))),(41,(((56,54),(53,((52,((59,57),(60,55))),(49,(50,(47,48)))))),(42,(43,((44,45),(46,(51,(58,40)))))))))))))))),((23,(24,22)),(26,25)))),(7,(6,8))))))));
	TREE * inapplicable = [&R] (1,(2,(3,(4,(5,((7,(6,8)),(9,((10,(11,(27,(12,((13,((19,(18,(20,21))),(17,14))),((16,15),((28,(29,(30,(36,((31,((33,(32,(34,35))),(62,(61,63)))),(39,(37,38))))))),(41,(((56,54),(53,((52,((57,59),(55,60))),(49,(50,(48,47)))))),(42,(43,(46,((45,44),(51,(40,58))))))))))))))),((23,(22,24)),(25,26))))))))));
	TREE * inapplicable = [&R] (1,(2,(3,(4,(5,((9,((10,(11,(27,(12,((13,((19,(18,(21,20))),(14,17))),((16,15),(28,((29,(30,((36,(31,(32,(33,(34,(35,(62,(61,63)))))))),(39,(37,38))))),(41,((42,(43,((46,(51,(40,58))),(45,44)))),((53,((49,(50,(48,47))),(52,((55,60),(57,59))))),(56,54)))))))))))),((23,(22,24)),(25,26)))),(7,(6,8))))))));
	TREE * inapplicable = [&R] (1,(2,(3,(4,(5,((9,((10,(11,(27,(12,((13,((14,17),(19,(18,(21,20))))),((16,15),((28,(29,(30,(36,((31,(33,(32,(34,(35,(62,(63,61))))))),(39,(38,37))))))),(41,(((53,((52,((60,55),(59,57))),(49,(50,(47,48))))),(56,54)),(42,(43,((46,(44,45)),(51,(58,40)))))))))))))),((23,(22,24)),(26,25)))),(7,(8,6))))))));
	TREE * inapplicable = [&R] (1,(2,(3,(4,(5,((9,((10,(11,(27,(12,((13,((14,17),(19,(18,(20,21))))),((28,((29,(30,((36,(31,((33,(32,(34,35))),(62,(63,61))))),(39,(37,38))))),(41,(((56,54),(53,((52,((59,57),(60,55))),(49,(50,(47,48)))))),(42,(43,((46,(51,(58,40))),(45,44)))))))),(16,15))))))),((23,(22,24)),(26,25)))),(7,(8,6))))))));
END;
