#NEXUS
begin data;
	DIMENSIONS NTAX=78 NCHAR=236;
	FORMAT DATATYPE=STANDARD MISSING=? GAP=- SYMBOLS="01239";
	MATRIX
		Galeaspida             0-100--00-0-0-??10000010010?3?1-100-00?-0--0?00?0-?0----?0--000---00---0-0??-000--00-0---0-??000-00--00-----00--000?00000?0--0-000?0?0000--0-?--00-0??00?0000----00000?000000??-0??-0---0-000-0?0-?0----?000---???-0???-?-?------0??-?-?????
		Osteostraci            0-00?0-1100?00100000??01?010300-100-000-00-0000?0-?1----?0--000---00---0-0??-000--00-0---0-??000-00--00-----00--000?000-000--0-000?0?0000--0-?--00-0??00-0000----00000?00000???-001-00-0?-0000??0-?0-10000000-00-000?0?-0--0-----0?10??1???-
		Acanthodes             0-000--0121?001100000110010101001-10???-----0?0-0--10---00--2112--000--11?000000--00-000-0-?0011111-0101--10?0--001??1????01120?01?1001??-???10100110011000110010011020101?000100?001---00000-1010010011101000010000111101-010010000-101?00-
		Akmonistion            10000--012?01-0?000001??1202-10?1-?21-------?-0-0--0----?0--300---000--1?0?011101100-000-0-?0011?11-0?00--?010--001?01000?01020011?110101-1?0?11?11?001????11011011102000100?100011?1---00000-1000110111101100111000100100-0000??0010100-01-
		Austroptyctodus        0-00????1??-??1??00?1101?0??-11?0?--100?110010??020?----?0-1?00---??11-000??10??0-00-010-00?0000101-00??--00?0--?0???10???0??????01???0???????0????????????????--?00???????0?0001???0010110000000--1-10????????111001010?0?0000--10?1??????-
		Bothriolepis           0-100--00-?-0-?-?-0-010-0?1?300?00--00000000-0??000110---0-1000---0010-0????1100--00?010-00?0000000100??0-0??0--?00??0???????????0?????????????????0???????????--?00????????????????00000110110????1--00?0???-00-011000-0--0-----0?00??0???-
		Brachyacanthus         0-00?--?????00?????0?????11???0?1?000??-?---??0-0--10---?1--010000?00--???????00?-00-000-0-?00?????-????--????????1??1??????????????????????????????????????????????????????????????01--10000-1010010?0???????01??00111010111100?0?10??1???-
		Brindabellaspis        0-000--01?????10?00000100???301?00--?000100000??000??????0-?0???????10????????????????????????0?????0???????0???0?0??0001000-0-00010?00000-0-0100?00??1000000-?--000?11000000?00?00?000?????00000--1-10????????????0??1????0-?---???????????
		Brochoadmones          0-100--0100?001010000011010100001?100??----???0-0--00---00--100---000--?????11??1000-000-0-?00?????-????--????????10?1??????????????????????????????????????????????????????????????1---00000-??????-?-???????01000011111011111000?10??1???-
		Buchanosteus           0-000--01?????10?000??100???300?00--0011111000??111110--00-1000---0010-?????10??--001010-01?0011000100??0-?001?0?01?0100100000010111?00010-000000?00??100000???-0010?110000000001?00000001?100?0?0-1?1?????????????00?1??-?000---???????????
		Campbellodus           0-00??????????1??00?110100??-11?0?--100?110010??020?----?0-1?00---??11-000??10??0-00-010-00?0000101-00??--00?0--?0???????????????0?????????????????????????????--?00?????????0?010??0000110000???--1-?0????????111001010?0?00-0--10??????1??
		Cassidiceps            0-00????????00???0000110?10100??1?00???----??00-0--1??-???--?111?1??0--?????0???--00-00?-0-?001????-????--????????10?1??????????????????????????????????????????????????????????????1---00000-11??????????????01??001110111010010??1???1???-
		Cheiracanthus          0-000--012110011000001100101010?1?101?-----???0-0--1----?0--?11111000--?????0000--00-000-0-?0011011-0001--10?0--?01??1???????????????????????????01?????????????????????????????????1---00000-1110010?1???????010000111101-0100100?001?11??-
		Cheirolepis            0-00110?120-0110011100100110111101--010-?110000003?110--0-0001100111101?????11?00--000110110101001100?100?00?1100010?100?????????1????1????????0?0??00?????????-0???0??1??????????0?0011100000?????1???1101000010-0000000--0-----0?00??1???1
		Chondrenchelys         1?10????1???1-0?00000????-0??10?1??01-------??0-0--0--???0--300---000--?????11??100?-000-01?00?0?11-1?00--1100--001?10??0?0?1?0001????10??-???0????????????????0-?1??2???0?0?100????1---00000-100011010011101-011000000-0--0---??000-0-0-??-
		Cladodoides            1010??????????????????????????????????????????????????????-?????????????????1???11??-000-0??0011-11-0?00--??10--001?0??00?001200011111101-100011111100110001110101110200010101000101????????????????????????????????????????????????????????
		Cladoselache           1010????12??1-10000001???20?-10?1??01-------??0-0--0----?0--?00---000--110??11??1100-000-0-?0011-11-0000--?0?0--001??1000?0?12?011?1101??-??0?11?11?????????1??10?110200010??1000?1?1---00000-100011010110100001100010010?-0?00??0000??0-01-
		Climatius              0-000--0100?001?100000010101310?1?000?0----?000-0--10---?1--?10000000--?????11??1001-000-0-?0011-11-0?00--10?0--?0???1??????????????????????????????????????????????????????????????01--10000-1000010?????????01??0011101011110000?10??1???-
		Cobelodus              1010????1???1-???00-01????0?-10?1??01-------??0-0--0----?0--?00---000--1?0??11??1100-000-0??0011?11-0?00--1010--001??1?00?011200011110111-1100111111001100011111011??2000100010001111---00000-1000110111101100111000000-0?-0---??00010-0-01-
		Coccosteus             0-00??????--?-??????01??0?--300?0?--0011111100??111?10--00-1000---??11-0????11??0-001010-01?0011???1????0-00?100011??1?????????????????????????????????????????--?1?????????????????0000011100?0?--1????10????01??00001-0--001---1001?01?10-
		Cowralepis             0-00???????????????001????--201?00--11111-0?00??010?----?0-0?00???0011-00?0010??0-001010-01?00111???????0-0??10000?????????????????????????????????????????????--?1??????????0111?0?00001110?0????????01???????11000001-00-00??--100--?0-10-
		Culmacanthus           ?-00????????00???00001100101100?1?100??-?---??0-0--?10--?0--000---??0--?????000??-0?-0?0-0??001?????????1???????0??0?1??????????????????????????????????????????????????????????????01--00000-10?0?10?0???????010000111100-010010??10??1???-
		Debeerius              1?100--012??1-0?000-01???-02-10?1??01-------0-0-0--0----?0--300---000--01010111?1100-000-0-?00?0-01-0?00--?100--?01?10??0?0?1?0?01?1?011??-???0?110????????11010-11?0200?0?0?100????1---00000-1000110101111010011?0010010?-0101--0011100100-
		Dialipina              0-??10-11?1?00?0?1111101?11?10??00--01?-111?00010???0-?-????0??????1??0?????11?00-0?00?1?0??0???????????0?????????1??1?????????????????????????????????????????--???????????????????001110?0??????????????????01??00??0?0?-0--?????10??1???-
		Dicksonosteus          0-0?0--011????1??00011????1??00?00--0011111000??000110--00-1000---0010-0????10?????01010-01?0011000100??0-?00100001?0100100001010111000010-000000?00??1000000----010?11000000?00??0-000001100000?--1-101??????????000?1-?0?001---1??????????
		Diplacanthus           0-100--0101?0011000001100101?1001?000?--?---?-0-0--00---?0--200---00??-?????0000--00-010-0??00?????-????0-???????????1??????????????????????????????????????????????????????????????00--10000-110100001???????01000011111000100100?10101???-
		Doliodus               10?0????12????10???0??????0?-10?1??0?-------?-0-0--?0---??--?00---000--1??0011101000-000-0-?0011-11-0???--??10--001?010?0?0012?010?11010?-??1?11??1?00???0??11010?11020001000?000?0?????0???????????????101?0?0???00??1?????11??????????????
		Entelognathus          0-0??????????????00?????????10?000--01?-11000-??00?110--100001100-?11100????00??0-00-?11?0?00011000100000????0--001??100??000100?1?1??00????0?0?000????????????--?1?02100?0??1000?1?00000110?0????????????????????????1????00000-???????????
		Eurycaraspis           ?-?0????????????????????????310?00-??1?-110100??01????????-10??????????0??????????????????????????????????????????1?????????????01?????????????????????????????--???????????????????0000011000?????????????????????0??1????001?0????????????
		Eusthenopteron         0-010--0120-0110200011010100310001--010-0110010010?111010010011001111000111111100-00011110100111011001000100011010101100011101000100-01111010100001111111101101--?1012011110111001000001100000000----00000100-010000000-0--0-----01101011101
		Euthacanthus           0-00????100?001?00000111010101001?100?--?---?-0-0?-10---00--111111000--?????0100--00-000-0-?001????-????--???0--?0???1??????????????????????????????????????????????????????????????01--00000-1110011?????????01000011101011100100?10??1???-
		Gemuendina             ?-0?????????1-???00000???20?30???0000???011?00??0-?110--?0-?000-?-0010-0????10??--001?10-00?00?0?00100?-0-????????0??1??????????01?????????????????????????????--?1??2?????????01???00?0110??0???????100001???010000001-0--001---1?-???0???-
		Gladiobranchus         0-000--0121?0011000001100101310?1?000??-1---?-0-0--00---?0--210001000--?????0000--00-0?0-0-?00?????-????1-???????????1??????????????????????????????????????????????????????????????1---00000-110100010???????010000111110?111010??10??1???-
		Glyptolepis            0-01???012?-011??00011000100111001--010-111001110-?0111000100110010110001111111010110111101001110111010001000110101011010?1101000101-011???101?0?01?10?????0??????1?1??11???????????0001100000000----00100111?010000000-0--0-----011011111?1
		Gogonasus              0-011?-112?-0110200011010??0010001-?010-0110010010?11101001001101??1100?1?1?11100-00011110100111011001000100011000101100011101000100-?1111010?00001?1111?1?1??0--?10120111101110010000011000000????????000100??????0?????-?????--0?????1????
		Guiyu                  0-0111-01???01100100110101101???00--01?-011001000???10--?00?01100111100?????11??1?01001101110111????0???000001000010?1010?1?????01?11?0?1????????0?????????????--??????1????????????0011110000000?-1???1???????1??001?1000-010000??10??1???1
		Gyracanthides          0-000--?1??0??10100000?11?01???????????-?-????0-0-??0---??--?00-?-000-?????????????0??00??-?00?????-?????-??????????????????????????????????????????????????????????????????????????01--000?0-1000?1111????????1??00111100?011001??10??1???-
		Hamiltonichthys        1?10????12??1-0?000000?11201-10?1?110-------?-0-0--00---?0--?00---000--1???011??1100-000-0-?0011-01-0?0?--1?10--001??110??00????01?11?10??-??????1??????????11?01?1??2000001??000???1---00000-100011010?10100001100010010?-0101??0010111101-
		Helodus                10100--?12?0?01??00001111?0?-10?1?10?-------?-0-0--00---?0--?00---000--?????11001100-?00-0-000?0??1?1???--?110--001??1000?00???001???01?????0?100???????????0-?0-????200-00??1?00?1?1---00000-1??001???111100?01??00100100-00000-1?11100???-
		Homalacanthus          0-00????????00??00000110010101001?101?--?---?-0-0--1----00--2112--000--?????0000--00-000-0-?0011-11-0001--?0?0--?01??1??????????01????1??????????01???????????????1????10?????1?????1---00000-1110010?1???????010000111101-0100100?0-??1?0?-
		Howqualepis            0-?????????-01?0?11111010110111101--010-0110000103?110--?00001100111101??1??11??101100110111101101100?1?0000?1110011?10???010?10?1?1??1??????????0?????????????--?1?02?1011???10??0?0011100000?0???1??01101001010000000-0--0-----??0-??1?1?0
		Incisoscutum           0-000--011?-??--0-0-010?0---300?00--0011011100??111?10--00-1000-?-0011-0??0?1100-?001010-01?001110010???0-?0?100011?010?1????????1????00???0???????????????????--?1?????????????????000-0111000???????0110???0?11000000-0--0-----10??0-????-
		Ischnacanthus          0-00????12??00?100000110010131001?1000--?---?-0-0--00---00--111111000--??0??11??10111010-00?0011011-01000-10?0--?0???1????????????????????????????????????????????1?0???????????????1---00000-1110011?1???????010000111101-0100100?10??1???-
		Jagorina               0-000--0???????????0????????3????000????011?00??0-?110--??-0000???0010?0????10??--001?10-00?00?0000100?-?-0?00--000????01?0000000111-00010-00?????00??100101??---010?21000000000100-0000110000???00??100??????????000?1-?-?001---1??????????
		Janusiscus             0-00????????????????????????100?00-??1--?110000?0??????????????????????????????????????????????1????0????????0--00?????0??0001000111?010?1??1?0100??001??1?????--01002000?000010010?????????????????????????????????????????????????????????
		Kathemacanthus         0-10????1???001010000001?101310?1?10??--?---?-0-0--00---?0--?00---000--1????0000--00-00--0-?0011-?1-0???--00??????1??1??????????0????0??????????????????????????????????????????????1---00000-1?????-10???????01??0011111011100?00010??1???-
		Kentuckia              0-011???1????????11110??????111101--01?-0110000003??10--0000011001?11010????11??0-000?1101101011011001100??0011?1?111100010101100101?01111010100000100111111100--?10021101101110011000???????0????????????????????????0??-??????????????????
		Kujdanowiaspis         0000???0??????1??00010?1?010300000-00011011000??00?110--00-0000---0010?0????10??????1?1??01???11????????????0100001?0100100001010111000010-000000?00??10?0000----010?11000000000100-0000011000???????1?1??????????00??1?00-001?--???????????
		Latviacanthus          0-0?????1????0???0000??1???1?10?????????????????0???0---00-?210001000-??????11001002-000?0??001??11-0???--00????????????????????????????????????????????????????????????????????????1---0?000-1??001101???????0???00??1?1?1010?10???????????
		Ligulalepis            0-01????????????????????????110?00--?1?-??10000?0???????????0???????10?????????????????????????1????0????????0--?01?0100010?011?0111?010110?0??000010011?111100--0?00201?1?????????????????????????????????????????????????????--???????????
		Lunaspis               ?-000--00-?????????011???01?211?00?-00?1010?10??00?1??--?0-0000---????-0??????????????0??0????0????????????????????????????????????????????????????????????????--??????????????11???0000111??0????????????????0?????001-0?-011-00???-??0???-
		Lupopsyrus             0-000--010??1-000000000?12013?0?1?10??--?-?-0-0-0--0??-???--01000?000???????0?000-00?000-0??00?????-????--??????????????????????????????????????????????????????????????????????????1---00000-10??????1???????01000011111011110010?10??1???-
		Macropetalichthys      0-000--011??????????????????311?00--?001110?10??000?-?-??0?00????????0????????????????????????00????0???????00--001?1000??00-1-0001??00000-0-01-1?0???10?000?----000?1100000?001100-000???????????????????????????????1??0??01?--???????????
		Mesacanthus            0-000--?12?????????001?00101000?10001?--1---?-0-0--1----?0--011101000--?????0000--00-000-0-?0011?11-0??0--???0--?01??1???????????????????????????0??????????????????????????????????1---00?00-111001?0????????01000011101100100100?0-??1???-
		Mimipiscis             0-011100120-0110011111010110110101-?010-0110000003?110?-000001100111101?111011110-00001101101011011001100000011100111100010101100101??1111010110000100111111100--01002110110101001100011100000000--1-001101001?10000000-0--0-----0?0-0-10100
		Moythomasia            0-011100120-011001111001011011?101--01--0110000003?110--000001100111101?1?1011110-00001101101011011001100000011110111100010101100101??1111010100000100111111100--?10021101101?1001100011100000000----001101001010000000-0--0-----010-?-1?1?0
		Obtusacanthus          0-100--012??1-000000??01?201-10?1?100---?---?-000--00---?0--0?0???00??-?????1000--00-000-0-?00?????-????--???????????1??????????????????????????????????????????????????????????????1---00000-??????-?????????01??00111100-1110010?10??1???-
		Onychodus              0-010--?12?-011020001100010031?001--010-111001000??1110010-001100?01100??11?11101011001101110011-11?01??0000?1000010?1010111????010???001??1?1???0-1001??1?????--?1?0??1?11?????????001110?000000--1-000001??-?10000000-0--0-----0?101011??1
		Onychoselache          1?1010-?????1-1??0000101?-0?310?1??11-------?-?-0--0--?-?0--?00---000--?????11101100-000-0-?00??-01-0?0?--?010--001??1????0??????1?1??1???????????0??????????????????2?????1????????1---00000-1000110101101000011000100100-0101??0?10111100-
		Orthacanthus           11100--012?11-?????-??????0?-10?1??0?-------?-0-0--0?---??--?00---000--1101?11001100-000-0-00011-11-0100--1010--001?01100?000200010111101-1000111111001100011111011102000101010001011---00000-100011011?11111?011000100100-0??00?00--0-100?-
		Parayunnanolepis       0-00????????0-???000?????11?3???00--0??00000?0??00?110--?0-?000-?-0010-0?????000???0???0-0?00?0???????????????????0??????????????0?????????????????????????????--?00????????????????0000011????????????0??????01??10001-0--0??---??0-??0-??-
		Parexus                0-000--010??0010100000???1013???1?000?--?---?-0-0--10---?1--?10000000--?????11001000-000-0-000?????-????--???0--?0???1??????????????????????????????????????????????????????????????01--10000-1110010?0???????01000011111011111010?10??1???-
		Poracanthodes          0-000--11201??1000000110010?310?1?10?---?---?-0-0--?0---??--1?????000???????110010111010-0000011011-0??00-?0?0--?0??????????????????????????????????????????????????????????????????1---00000-1110011?????????01??00111?01-0100100?1???1???-
		Porolepis              0-0110-112?-011021001101010001?001--010-0?10011100??111000100110?111100??111111010110111101001110110010001000110101011010?1101?00101-?1011?1??00?01?101????0???--?101201?11???1?????0001100000000--1-000????1-010000000-0--0-----??10??1???0
		Promesacanthus         0-000--01?1?0011000001100101000?1?001---1---?-0-0--1----?0--?11100000--?????0000--00-000-0-00011?11-0???--10??????1??1????????????????????????????1?????????????????????????????????1---00000-111001001???????01??0011101101100100?0-??1???-
		Psarolepis             0-011111120???100101000????031??01--01?-0??0010?0???10--100?0???????????????11??1?11001101110111????0???00000100001001010?11011?01111?0011?????0?0?1001??1??100--0100201?1??????????001?????000???-1?00110?????????01?10?0?01000????????????
		Pterichthyodes         0-10????????0-1??00?11???010300?0?--000000?0?0?-000?10---0-1000---??10-0????????--?0?010-00000??????????0-???0--?00??0???????????0?????????????????????????????--?00????????????????00000110110????1--00?0???-00-011100?0?-0--?--0?0-??0???-
		Ptomacanthus           ?-000--01?00001110000011010130??1?000---1---0-0-0--10---?0--01?00000???1????11??100?-000-0-00011?11-0000--?0?0--001??10?0??0??????????0?????1?0000???????????????????????????000????01--00000-100001010???????01000011101011110000?10??1???-
		Pucapampella           1010????????????????????????-?????????????????0-0?-???-?????????????????????11?????0?00?-0?00011-11-0???--?0?0--001?????0?00120001??10101-1?0?101011001?00??10010011020101?000000?0?????????????????????????????????????????????????????????
		Rhamphodopsis          0-00???????????????0?????01?-01?00--1???110010??02??----00-1?00---0011-0??0?10000-00-010-0000000?0?-????--???0--?0?????????????????????????????????????????????--?00????????????????0000110??0?0?--1-??????????11100101000-011000??11100-11-
		Ramirosuarezia         ?-??????????????????????????????????????????????????0----0-??????????-??????11??--?0??10-0?00011???-0?0?1-0??0--00?0?00?0?00110001?100?0????0?0???0?0-1??1?10--1-?10?200000?10100?0?????????????????????????????????????????????????????????
		Romundina              0-0010-01?0???100??0????0???301?00-000011000?0??02?110--00-00????-0010???????0??????10?0-01?0?0000010??-??0?00????0?010?10000101011??00000-00?010100--1??0?0?--?-010?110000????0????0000?11?000???????00???????????01?10?0?00100-???????????
		Styloichthys           0-0111111???????????????????01?001--01?-0?10010?0???10--00100???????????????11??1?110?11?0100??1????0???0100?110001??1010?11010?01111?10????0?0?00??0??????????--?1?12011?00?110010?001?1???00000----??100????????????0??-??????????????????
		Tamiobatis             1110??????????1-100000010???-???1?1??-------?-0-0--?0---??--??????00????????11??110?-000-0-00011-11-0?00--??10--001????00?000200011111101-100011111?001??00?111101110200010001000101??--0?0?0-????1?????????????????1??1????111??????????0??
		Tetanopsyrus           0-000--012010011000001100100-10?1?100---?---?-0-0--00---?0--000---000--?????00000-00?010-0000011001-0000?-?0??????1??1??????????????????????????????????????????????????????????????1---00000-100001001???????010000111000-0110100?10??1???-
		Tristychius            1010????1???1-1??00001???-0--10?1??01-------?-0-0--0----?0--?00---000--1?0??11??1100-000-0-00001-01-0?0?--1010--001?01000?00120001?110101--?0?01?00?001???????11111??200000?11000?0?1---00000-100011010?101100011000100100?0101??0010111100-
		V_waynensis            0-00?????????????000?????1013???1?000---?---?-0-0--?0---??--?1?000000--?????11??1?0?-000-0-000?????-?????-??????????????????????????????????????????????????????????????????????????01--000?0-10?001??1???????01??001110101111001??10??1???-
		Yunnanolepis           0-00???01???0-?????0????????300?0?--0000?000?0??00?110---0-1000---001??0???????????0???0-0000?????????????????????0??????????????0?????????????????????????????--?00????????????????0000011011?????1??????????????10??1??-?001--???????????-
	;
end;

BEGIN TAXA;
	DIMENSIONS NTAX = 78;
	TAXLABELS
		Galeaspida
		Osteostraci
		Acanthodes
		Akmonistion
		Austroptyctodus
		Bothriolepis
		Brachyacanthus
		Brindabellaspis
		Brochoadmones
		Buchanosteus
		Campbellodus
		Cassidiceps
		Cheiracanthus
		Cheirolepis
		Chondrenchelys
		Cladodoides
		Cladoselache
		Climatius
		Cobelodus
		Coccosteus
		Cowralepis
		Culmacanthus
		Debeerius
		Dialipina
		Dicksonosteus
		Diplacanthus
		Doliodus
		Entelognathus
		Eurycaraspis
		Eusthenopteron
		Euthacanthus
		Gemuendina
		Gladiobranchus
		Glyptolepis
		Gogonasus
		Guiyu
		Gyracanthides
		Hamiltonichthys
		Helodus
		Homalacanthus
		Howqualepis
		Incisoscutum
		Ischnacanthus
		Jagorina
		Janusiscus
		Kathemacanthus
		Kentuckia
		Kujdanowiaspis
		Latviacanthus
		Ligulalepis
		Lunaspis
		Lupopsyrus
		Macropetalichthys
		Mesacanthus
		Mimipiscis
		Moythomasia
		Obtusacanthus
		Onychodus
		Onychoselache
		Orthacanthus
		Parayunnanolepis
		Parexus
		Poracanthodes
		Porolepis
		Promesacanthus
		Psarolepis
		Pterichthyodes
		Ptomacanthus
		Pucapampella
		Rhamphodopsis
		Ramirosuarezia
		Romundina
		Styloichthys
		Tamiobatis
		Tetanopsyrus
		Tristychius
		V_waynensis
		Yunnanolepis
	;
END;
BEGIN TREES;
	TRANSLATE
		1	Galeaspida,
		2	Osteostraci,
		3	Acanthodes,
		4	Akmonistion,
		5	Austroptyctodus,
		6	Bothriolepis,
		7	Brachyacanthus,
		8	Brindabellaspis,
		9	Brochoadmones,
		10	Buchanosteus,
		11	Campbellodus,
		12	Cassidiceps,
		13	Cheiracanthus,
		14	Cheirolepis,
		15	Chondrenchelys,
		16	Cladodoides,
		17	Cladoselache,
		18	Climatius,
		19	Cobelodus,
		20	Coccosteus,
		21	Cowralepis,
		22	Culmacanthus,
		23	Debeerius,
		24	Dialipina,
		25	Dicksonosteus,
		26	Diplacanthus,
		27	Doliodus,
		28	Entelognathus,
		29	Eurycaraspis,
		30	Eusthenopteron,
		31	Euthacanthus,
		32	Gemuendina,
		33	Gladiobranchus,
		34	Glyptolepis,
		35	Gogonasus,
		36	Guiyu,
		37	Gyracanthides,
		38	Hamiltonichthys,
		39	Helodus,
		40	Homalacanthus,
		41	Howqualepis,
		42	Incisoscutum,
		43	Ischnacanthus,
		44	Jagorina,
		45	Janusiscus,
		46	Kathemacanthus,
		47	Kentuckia,
		48	Kujdanowiaspis,
		49	Latviacanthus,
		50	Ligulalepis,
		51	Lunaspis,
		52	Lupopsyrus,
		53	Macropetalichthys,
		54	Mesacanthus,
		55	Mimipiscis,
		56	Moythomasia,
		57	Obtusacanthus,
		58	Onychodus,
		59	Onychoselache,
		60	Orthacanthus,
		61	Parayunnanolepis,
		62	Parexus,
		63	Poracanthodes,
		64	Porolepis,
		65	Promesacanthus,
		66	Psarolepis,
		67	Pterichthyodes,
		68	Ptomacanthus,
		69	Pucapampella,
		70	Rhamphodopsis,
		71	Ramirosuarezia,
		72	Romundina,
		73	Styloichthys,
		74	Tamiobatis,
		75	Tetanopsyrus,
		76	Tristychius,
		77	V_waynensis,
		78	Yunnanolepis
	;
	TREE * ambiguous = [&R] (1,(2,((8,(((72,(((28,((((22,(75,((49,((31,(12,((13,(3,40)),(54,65)))),(43,63))),(26,33)))),((9,(46,(52,(57,(37,(69,(27,((((17,(4,19)),(39,(15,23))),(16,(76,(38,59)))),(60,74))))))))),(68,(18,(77,(7,62)))))),(24,((50,(14,(41,(55,(47,56))))),(36,(66,(58,(73,((30,35),(34,64))))))))),(45,71))),(32,44)),(48,(25,(10,((20,42),(21,29))))))),(70,(5,11))),(51,53))),(78,(61,(6,67))))));
	TREE * ambiguous = [&R] (1,(2,((8,(((72,(((28,(45,(71,(((22,(75,((49,((((13,(3,40)),(54,65)),(12,31)),(43,63))),(26,33)))),(68,(18,((46,(9,(52,(57,(37,(69,(27,((((17,(4,19)),(39,(15,23))),(16,(76,(38,59)))),(60,74))))))))),(7,(62,77)))))),(24,(50,((14,(41,(55,(47,56)))),((58,(73,((30,35),(34,64)))),(36,66))))))))),(32,44)),(48,(25,(10,((20,42),(21,29))))))),(70,(5,11))),(51,53))),(78,(61,(6,67))))));
	TREE * ambiguous = [&R] (1,(2,((8,(((72,(((28,(45,(71,(((49,(((12,((13,(3,40)),(54,65))),(31,((22,75),(43,63)))),(26,33))),(68,(18,(77,(7,(62,((52,(37,(57,(69,(27,((((17,(4,19)),(39,(15,23))),(16,(76,(38,59)))),(60,74))))))),(9,46)))))))),(24,((50,(14,(41,(55,(47,56))))),(36,(66,(58,(73,((30,35),(34,64)))))))))))),(48,(25,(10,((20,42),(21,29)))))),(32,44))),(70,(5,11))),(51,53))),(61,(78,(6,67))))));
	TREE * ambiguous = [&R] (1,(2,(8,((((72,(((28,(71,(45,(((49,(((54,(65,(13,(3,40)))),(12,(31,(43,63)))),((22,75),(26,33)))),(68,(((52,(37,(57,(69,(27,(16,((((17,(4,19)),(39,(15,23))),(76,(38,59))),(60,74)))))))),(9,46)),(18,(62,(7,77)))))),(24,(50,((14,(41,(55,(47,56)))),((58,(73,((30,35),(34,64)))),(36,66))))))))),(48,(25,(10,((20,42),(21,29)))))),(32,44))),(70,(5,11))),(51,53)),(78,(61,(6,67)))))));
	TREE * ambiguous = [&R] (1,(6,(67,(78,(61,(2,(8,(((72,(((28,(45,(71,(((22,(75,((49,((12,(31,((13,(3,40)),(54,65)))),(43,63))),(26,33)))),(68,(18,(7,(77,(62,((52,(37,(57,(69,(27,(16,((((17,(4,19)),(39,(15,23))),(76,(38,59))),(60,74)))))))),(9,46)))))))),(24,(50,((14,(41,(55,(47,56)))),(36,(66,(58,(73,((30,35),(34,64))))))))))))),(48,(25,(10,((20,42),(21,29)))))),(32,44))),(70,(5,11))),(51,53)))))))));
	TREE * ambiguous = [&R] (1,(2,((8,(((72,(((28,((((22,(75,((49,((31,(12,((13,(3,40)),(54,65)))),(43,63))),(26,33)))),(68,(((52,(37,(57,(69,(27,((((17,(4,19)),(39,(15,23))),(76,(38,59))),(16,(60,74)))))))),(9,46)),(18,(7,(62,77)))))),(24,((50,(14,(41,(55,(47,56))))),(36,(66,(58,(73,((30,35),(34,64))))))))),(45,71))),(48,(25,(10,((20,42),(21,29)))))),(32,44))),(70,(5,11))),(51,53))),(61,(78,(6,67))))));
	TREE * ambiguous = [&R] (1,(2,(8,((((72,(((28,((((22,(75,((49,((((13,(3,40)),(54,65)),(12,31)),(43,63))),(26,33)))),(68,(18,(((52,(57,(37,(69,(27,(16,((((17,(4,19)),(39,(15,23))),(76,(38,59))),(60,74)))))))),(9,46)),(62,(7,77)))))),(24,(50,((14,(41,(55,(47,56)))),((58,(73,((30,35),(34,64)))),(36,66)))))),(45,71))),(48,(25,(10,((20,42),(21,29)))))),(32,44))),(70,(5,11))),(51,53)),(78,(61,(6,67)))))));
	TREE * ambiguous = [&R] (1,(2,(8,((((72,(((28,(71,(45,(((22,(75,((49,((31,((13,(3,40)),(12,(54,65)))),(43,63))),(26,33)))),(68,(7,(18,(77,(62,((52,(37,(57,(69,(27,(16,((((17,(4,19)),(39,(15,23))),(76,(38,59))),(60,74)))))))),(9,46)))))))),(24,(50,((14,(41,(55,(47,56)))),(36,(66,(58,(73,((30,35),(34,64))))))))))))),(48,(25,(10,((20,42),(21,29)))))),(32,44))),(70,(5,11))),(51,53)),(78,(61,(6,67)))))));
	TREE * ambiguous = [&R] (1,(2,(8,((((((28,(45,(71,(((22,(75,((49,((31,(12,((13,(3,40)),(54,65)))),(43,63))),(26,33)))),(68,(((52,(57,(37,(69,(27,(16,((((17,(4,19)),(39,(15,23))),(76,(38,59))),(60,74)))))))),(9,46)),(18,(77,(7,62)))))),(24,(50,((14,(41,(55,(47,56)))),(36,(66,(58,(73,((30,35),(34,64))))))))))))),(48,(25,(10,((20,42),(21,29)))))),(32,44)),(72,(70,(5,11)))),(51,53)),(61,(78,(6,67)))))));
	TREE * ambiguous = [&R] (1,(6,(67,(61,(78,(2,(8,(((((28,(71,(45,(((22,(75,((49,((12,(31,((13,(3,40)),(54,65)))),(43,63))),(26,33)))),(18,((68,(9,(46,(52,(57,(37,(69,(27,(16,((((17,(4,19)),(39,(15,23))),(76,(38,59))),(60,74))))))))))),(62,(7,77))))),(24,((50,(14,(41,(55,(47,56))))),(36,(66,(58,(73,((30,35),(34,64)))))))))))),(48,(25,(10,((20,42),(21,29)))))),(32,44)),(72,(70,(5,11)))),(51,53)))))))));
	TREE * ambiguous = [&R] (1,(2,((8,(((72,(((28,(45,(71,(((22,(75,((49,((31,((13,(3,40)),(12,(54,65)))),(43,63))),(26,33)))),(68,(18,(((52,(57,(37,(69,(27,((((17,(4,19)),(39,(15,23))),(76,(38,59))),(16,(60,74)))))))),(9,46)),(7,(62,77)))))),(24,((50,(14,(41,(55,(47,56))))),(36,(66,(58,(73,((30,35),(34,64)))))))))))),(48,(25,(10,((20,42),(21,29)))))),(32,44))),(70,(5,11))),(51,53))),((6,67),(61,78)))));
	TREE * ambiguous = [&R] (1,(2,(8,((((((28,((((49,(((65,(54,(13,(3,40)))),(12,(31,(43,63)))),((22,75),(26,33)))),(68,((9,(46,(52,(57,(37,(69,(27,((((17,(4,19)),(39,(15,23))),(76,(38,59))),(16,(60,74)))))))))),(18,(62,(7,77)))))),(24,(50,((14,(41,(55,(47,56)))),(36,(66,(58,(73,((30,35),(34,64)))))))))),(45,71))),(48,(25,(10,((20,42),(21,29)))))),(32,44)),(72,(70,(5,11)))),(51,53)),(61,(78,(6,67)))))));
	TREE * ambiguous = [&R] (1,(2,(8,((((72,(((28,(71,(45,(((22,(75,((49,((12,(31,((13,(3,40)),(54,65)))),(43,63))),(26,33)))),(68,((9,(46,(52,(57,(37,(69,(27,((((17,(4,19)),(39,(15,23))),(16,(76,(38,59)))),(60,74))))))))),(18,(7,(62,77)))))),(24,(50,((14,(41,(55,(47,56)))),(36,(66,(58,(73,((30,35),(34,64))))))))))))),(32,44)),(48,(25,(10,((20,42),(21,29))))))),(70,(5,11))),(51,53)),(78,(61,(6,67)))))));
	TREE * ambiguous = [&R] (1,(2,((8,(((72,(((28,(45,(71,(((49,(((65,(54,(13,(3,40)))),(12,(31,(43,63)))),((22,75),(26,33)))),(68,(18,((46,(9,(52,(57,(37,(69,(27,(16,((((17,(4,19)),(39,(15,23))),(76,(38,59))),(60,74)))))))))),(62,(7,77)))))),(24,(50,((14,(41,(55,(47,56)))),((58,(73,((30,35),(34,64)))),(36,66))))))))),(48,(25,(10,((20,42),(21,29)))))),(32,44))),(70,(5,11))),(51,53))),(61,(78,(6,67))))));
	TREE * ambiguous = [&R] (1,(2,(8,((((72,(((28,(45,(71,(((22,(75,((49,((31,((13,(3,40)),(12,(54,65)))),(43,63))),(26,33)))),(68,(18,(77,(((52,(37,(57,(69,(27,((((17,(4,19)),(39,(15,23))),(16,(76,(38,59)))),(60,74))))))),(9,46)),(7,62)))))),(24,(50,((14,(41,(55,(47,56)))),(36,(66,(58,(73,((30,35),(34,64))))))))))))),(48,(25,(10,((20,42),(21,29)))))),(32,44))),(70,(5,11))),(51,53)),(78,(61,(6,67)))))));
	TREE * ambiguous = [&R] (1,(6,(67,((2,(8,(((72,(((28,((((22,(75,((49,((12,(31,((13,(3,40)),(54,65)))),(43,63))),(26,33)))),(68,(18,(((52,(37,(57,(69,(27,(16,((((17,(4,19)),(39,(15,23))),(76,(38,59))),(60,74)))))))),(9,46)),(62,(7,77)))))),(24,(50,((14,(41,(55,(47,56)))),((58,(73,((30,35),(34,64)))),(36,66)))))),(45,71))),(32,44)),(48,(25,(10,((20,42),(21,29))))))),(70,(5,11))),(51,53)))),(61,78)))));
	TREE * ambiguous = [&R] (1,(2,(8,((((72,(((28,((((22,(75,((49,((12,(31,((13,(3,40)),(54,65)))),(43,63))),(26,33)))),(68,((46,(9,(52,(57,(37,(69,(27,((((17,(4,19)),(39,(15,23))),(16,(76,(38,59)))),(60,74))))))))),(18,(7,(62,77)))))),(24,(50,((14,(41,(55,(47,56)))),(36,(66,(58,(73,((30,35),(34,64)))))))))),(45,71))),(32,44)),(48,(25,(10,((20,42),(21,29))))))),(70,(5,11))),(51,53)),(78,(61,(6,67)))))));
	TREE * ambiguous = [&R] (1,(2,((8,(((((28,(45,(71,(((49,(((12,((13,(3,40)),(54,65))),(31,(43,63))),((22,75),(26,33)))),((9,(46,(52,(57,(37,(69,(27,((((17,(4,19)),(39,(15,23))),(16,(76,(38,59)))),(60,74))))))))),(68,(18,(77,(7,62)))))),(24,(50,((14,(41,(55,(47,56)))),(36,(66,(58,(73,((30,35),(34,64))))))))))))),(48,(25,(10,((20,42),(21,29)))))),(32,44)),(72,(70,(5,11)))),(51,53))),((6,67),(61,78)))));
	TREE * ambiguous = [&R] (1,(((2,(8,(((72,(((28,(45,(71,(((22,(75,((49,((31,(12,((13,(3,40)),(54,65)))),(43,63))),(26,33)))),(68,(18,((9,(46,(52,(57,(37,(69,(27,((((17,(4,19)),(39,(15,23))),(76,(38,59))),(16,(60,74)))))))))),(7,(62,77)))))),(24,(50,((14,(41,(55,(47,56)))),(36,(66,(58,(73,((30,35),(34,64))))))))))))),(48,(25,(10,((20,42),(21,29)))))),(32,44))),(70,(5,11))),(51,53)))),(61,78)),(6,67)));
	TREE * ambiguous = [&R] (1,(2,(8,((((72,(((28,((((22,(75,((49,((31,(12,((13,(3,40)),(54,65)))),(43,63))),(26,33)))),((68,(9,(46,(52,(57,(37,(69,(27,(16,((((17,(4,19)),(39,(15,23))),(76,(38,59))),(60,74))))))))))),(18,(62,(7,77))))),(24,(50,((14,(41,(55,(47,56)))),((58,(73,((30,35),(34,64)))),(36,66)))))),(45,71))),(32,44)),(48,(25,(10,((20,42),(21,29))))))),(70,(5,11))),(51,53)),(61,(78,(6,67)))))));
	TREE * ambiguous = [&R] (1,(2,(8,((((72,(((28,((((49,(((54,(65,(13,(3,40)))),(12,(31,(43,63)))),((22,75),(26,33)))),(68,(18,((46,(9,(52,(57,(37,(69,(27,((((17,(4,19)),(39,(15,23))),(16,(76,(38,59)))),(60,74))))))))),(62,(7,77)))))),(24,(50,((14,(41,(55,(47,56)))),((58,(73,((30,35),(34,64)))),(36,66)))))),(45,71))),(32,44)),(48,(25,(10,((20,42),(21,29))))))),(70,(5,11))),(51,53)),(61,(78,(6,67)))))));
	TREE * ambiguous = [&R] (1,(2,((8,(((((28,((((49,((((13,(3,40)),(54,65)),(12,(31,(43,63)))),((22,75),(26,33)))),(68,(18,((62,((52,(57,(37,(69,(27,((((17,(4,19)),(39,(15,23))),(16,(76,(38,59)))),(60,74))))))),(9,46))),(7,77))))),(24,(50,((14,(41,(55,(47,56)))),((58,(73,((30,35),(34,64)))),(36,66)))))),(45,71))),(48,(25,(10,((20,42),(21,29)))))),(32,44)),(72,(70,(5,11)))),(51,53))),(61,(78,(6,67))))));
	TREE * ambiguous = [&R] (1,(61,((78,(2,(8,(((72,(((28,((((49,(((12,(31,((13,(3,40)),(43,63)))),(54,65)),((22,75),(26,33)))),(68,(18,((62,((52,(57,(37,(69,(27,(16,((((17,(4,19)),(39,(15,23))),(76,(38,59))),(60,74)))))))),(9,46))),(7,77))))),(24,((50,(14,(41,(55,(47,56))))),(36,(66,(58,(73,((30,35),(34,64))))))))),(45,71))),(32,44)),(48,(25,(10,((20,42),(21,29))))))),(70,(5,11))),(51,53))))),(6,67))));
	TREE * ambiguous = [&R] (1,(2,((8,(((72,(((28,(45,(71,(((22,(75,((49,((31,((13,(3,40)),(12,(54,65)))),(43,63))),(26,33)))),(18,((9,(46,(52,(57,(37,(69,(27,((((17,(4,19)),(39,(15,23))),(16,(76,(38,59)))),(60,74))))))))),(68,(77,(7,62)))))),(24,(50,((14,(41,(55,(47,56)))),(36,(66,(58,(73,((30,35),(34,64))))))))))))),(32,44)),(48,(25,(10,((20,42),(21,29))))))),(70,(5,11))),(51,53))),(78,(61,(6,67))))));
	TREE * ambiguous = [&R] (1,(2,(8,((((72,(((28,(71,(45,(((49,(((54,(65,(13,(3,40)))),(12,(31,(43,63)))),((22,75),(26,33)))),(68,(18,((77,((52,(37,(57,(69,(27,(16,((((17,(4,19)),(39,(15,23))),(76,(38,59))),(60,74)))))))),(9,46))),(7,62))))),(24,(50,((14,(41,(55,(47,56)))),((58,(73,((30,35),(34,64)))),(36,66))))))))),(48,(25,(10,((20,42),(21,29)))))),(32,44))),(70,(5,11))),(51,53)),(78,(61,(6,67)))))));
	TREE * ambiguous = [&R] (1,(67,(6,((2,(8,(((72,(((28,((((49,(((31,((13,(3,40)),(43,63))),(12,(54,65))),((22,75),(26,33)))),(68,((9,(46,(52,(57,(37,(69,(27,(16,((((17,(4,19)),(39,(15,23))),(76,(38,59))),(60,74)))))))))),(18,(77,(7,62)))))),(24,(50,((14,(41,(55,(47,56)))),(36,(66,(58,(73,((30,35),(34,64)))))))))),(45,71))),(32,44)),(48,(25,(10,((20,42),(21,29))))))),(70,(5,11))),(51,53)))),(61,78)))));
	TREE * ambiguous = [&R] (1,(2,((8,(((72,(((28,((((22,(75,((49,((31,((13,(3,40)),(12,(54,65)))),(43,63))),(26,33)))),(18,((9,(46,(52,(57,(37,(69,(27,(16,((((17,(4,19)),(39,(15,23))),(76,(38,59))),(60,74)))))))))),(68,(7,(62,77)))))),(24,((50,(14,(41,(55,(47,56))))),(36,(66,(58,(73,((30,35),(34,64))))))))),(45,71))),(32,44)),(48,(25,(10,((20,42),(21,29))))))),(70,(5,11))),(51,53))),(61,(78,(6,67))))));
	TREE * ambiguous = [&R] (1,(67,(6,(78,(61,(2,(8,(((72,(((28,((((49,((12,((54,(65,(13,(3,40)))),(31,(43,63)))),((22,75),(26,33)))),(68,((46,(9,(52,(57,(37,(69,(27,((((17,(4,19)),(39,(15,23))),(16,(76,(38,59)))),(60,74))))))))),(18,(77,(7,62)))))),(24,((50,(14,(41,(55,(47,56))))),(36,(66,(58,(73,((30,35),(34,64))))))))),(45,71))),(32,44)),(48,(25,(10,((20,42),(21,29))))))),(70,(5,11))),(51,53)))))))));
	TREE * ambiguous = [&R] (1,(2,(8,((((72,(((28,(71,(45,(((49,(((12,(65,(54,(13,(3,40))))),(31,((22,75),(43,63)))),(26,33))),(68,((9,(46,(52,(57,(37,(69,(27,((((17,(4,19)),(39,(15,23))),(16,(76,(38,59)))),(60,74))))))))),(18,(77,(7,62)))))),(24,(50,((14,(41,(55,(47,56)))),((58,(73,((30,35),(34,64)))),(36,66))))))))),(32,44)),(48,(25,(10,((20,42),(21,29))))))),(70,(5,11))),(51,53)),((6,67),(61,78))))));
	TREE * ambiguous = [&R] (1,(((2,(8,(((((28,(71,(45,(((49,(((54,(65,(13,(3,40)))),(12,(31,(43,63)))),((22,75),(26,33)))),(68,(18,((77,((52,(37,(57,(69,(27,(16,((((17,(4,19)),(39,(15,23))),(76,(38,59))),(60,74)))))))),(9,46))),(7,62))))),(24,(50,((14,(41,(55,(47,56)))),((58,(73,((30,35),(34,64)))),(36,66))))))))),(48,(25,(10,((20,42),(21,29)))))),(32,44)),(72,(70,(5,11)))),(51,53)))),(61,78)),(6,67)));
	TREE * ambiguous = [&R] (1,(2,((8,(((((28,((((49,(((12,(54,(65,(13,(3,40))))),(31,((22,75),(43,63)))),(26,33))),(18,((68,(9,(46,(52,(57,(37,(69,(27,((((17,(4,19)),(39,(15,23))),(16,(76,(38,59)))),(60,74)))))))))),(77,(7,62))))),(24,(50,((14,(41,(55,(47,56)))),(36,(66,(58,(73,((30,35),(34,64)))))))))),(45,71))),(48,(25,(10,((20,42),(21,29)))))),(32,44)),(72,(70,(5,11)))),(51,53))),(61,(78,(6,67))))));
	TREE * ambiguous = [&R] (1,(2,(8,((((((28,(45,(71,(((49,(((12,(54,(65,(13,(3,40))))),(31,((22,75),(43,63)))),(26,33))),(68,(18,((46,(9,(52,(57,(37,(69,(27,((((17,(4,19)),(39,(15,23))),(76,(38,59))),(16,(60,74)))))))))),(77,(7,62)))))),(24,(50,((14,(41,(55,(47,56)))),((58,(73,((30,35),(34,64)))),(36,66))))))))),(48,(25,(10,((20,42),(21,29)))))),(32,44)),(72,(70,(5,11)))),(51,53)),((6,67),(61,78))))));
	TREE * ambiguous = [&R] (1,(((2,(8,(((72,(((28,(71,(45,(((22,(75,((49,((12,(31,((13,(3,40)),(54,65)))),(43,63))),(26,33)))),(68,(18,(((52,(57,(37,(69,(27,((((17,(4,19)),(39,(15,23))),(16,(76,(38,59)))),(60,74))))))),(9,46)),(7,(62,77)))))),(24,(50,((14,(41,(55,(47,56)))),(36,(66,(58,(73,((30,35),(34,64))))))))))))),(32,44)),(48,(25,(10,((20,42),(21,29))))))),(70,(5,11))),(51,53)))),(61,78)),(6,67)));
	TREE * ambiguous = [&R] (1,(2,((8,(((((28,(45,(71,(((49,((12,((54,(65,(13,(3,40)))),(31,(43,63)))),((22,75),(26,33)))),(68,(18,((9,(46,(52,(57,(37,(69,(27,((((17,(4,19)),(39,(15,23))),(16,(76,(38,59)))),(60,74))))))))),(77,(7,62)))))),(24,(50,((14,(41,(55,(47,56)))),(36,(66,(58,(73,((30,35),(34,64))))))))))))),(48,(25,(10,((20,42),(21,29)))))),(32,44)),(72,(70,(5,11)))),(51,53))),(61,(78,(6,67))))));
	TREE * ambiguous = [&R] (1,(2,((8,(((72,(((28,((((22,(75,((49,((31,((13,(3,40)),(12,(54,65)))),(43,63))),(26,33)))),(68,(7,(18,(77,(62,((52,(57,(37,(69,(27,((((17,(4,19)),(39,(15,23))),(16,(76,(38,59)))),(60,74))))))),(9,46)))))))),(24,(50,((14,(41,(55,(47,56)))),(36,(66,(58,(73,((30,35),(34,64)))))))))),(45,71))),(48,(25,(10,((20,42),(21,29)))))),(32,44))),(70,(5,11))),(51,53))),((6,67),(61,78)))));
	TREE * ambiguous = [&R] (1,(2,((8,(((72,(((28,(45,(71,(((22,(75,((49,((((13,(3,40)),(54,65)),(12,31)),(43,63))),(26,33)))),(68,(((52,(57,(37,(69,(27,((((17,(4,19)),(39,(15,23))),(76,(38,59))),(16,(60,74)))))))),(9,46)),(18,(7,(62,77)))))),(24,((50,(14,(41,(55,(47,56))))),(36,(66,(58,(73,((30,35),(34,64)))))))))))),(32,44)),(48,(25,(10,((20,42),(21,29))))))),(70,(5,11))),(51,53))),((6,67),(61,78)))));
	TREE * ambiguous = [&R] (1,(2,(8,((((72,(((28,((((49,((12,((31,((13,(3,40)),(43,63))),(54,65))),((22,75),(26,33)))),(68,(18,(((52,(57,(37,(69,(27,(16,((((17,(4,19)),(39,(15,23))),(76,(38,59))),(60,74)))))))),(9,46)),(62,(7,77)))))),(24,(50,((14,(41,(55,(47,56)))),(36,(66,(58,(73,((30,35),(34,64)))))))))),(45,71))),(48,(25,(10,((20,42),(21,29)))))),(32,44))),(70,(5,11))),(51,53)),((6,67),(61,78))))));
	TREE * ambiguous = [&R] (1,(67,(6,((2,(8,(((72,(((28,(71,(45,(((22,(75,((49,((31,((13,(3,40)),(12,(54,65)))),(43,63))),(26,33)))),(68,(18,(7,(77,(62,((52,(37,(57,(69,(27,(16,((((17,(4,19)),(39,(15,23))),(76,(38,59))),(60,74)))))))),(9,46)))))))),(24,(50,((14,(41,(55,(47,56)))),((58,(73,((30,35),(34,64)))),(36,66))))))))),(32,44)),(48,(25,(10,((20,42),(21,29))))))),(70,(5,11))),(51,53)))),(61,78)))));
	TREE * ambiguous = [&R] (1,(2,(8,((((72,(((28,(71,(45,(((22,(75,((49,((31,((13,(3,40)),(12,(54,65)))),(43,63))),(26,33)))),(68,(18,((9,(46,(52,(57,(37,(69,(27,((((17,(4,19)),(39,(15,23))),(76,(38,59))),(16,(60,74)))))))))),(7,(62,77)))))),(24,(50,((14,(41,(55,(47,56)))),((58,(73,((30,35),(34,64)))),(36,66))))))))),(48,(25,(10,((20,42),(21,29)))))),(32,44))),(70,(5,11))),(51,53)),(61,(78,(6,67)))))));
	TREE * ambiguous = [&R] (1,(2,(8,((((((28,(45,(71,(((22,(75,((49,((12,(31,((13,(3,40)),(54,65)))),(43,63))),(26,33)))),((68,(9,(46,(52,(57,(37,(69,(27,((((17,(4,19)),(39,(15,23))),(16,(76,(38,59)))),(60,74)))))))))),(18,(62,(7,77))))),(24,(50,((14,(41,(55,(47,56)))),((58,(73,((30,35),(34,64)))),(36,66))))))))),(48,(25,(10,((20,42),(21,29)))))),(32,44)),(72,(70,(5,11)))),(51,53)),((6,67),(61,78))))));
	TREE * ambiguous = [&R] (1,(2,((8,(((((28,(45,(71,(((22,(75,((49,((12,(31,((13,(3,40)),(54,65)))),(43,63))),(26,33)))),(18,((68,(9,(46,(52,(57,(37,(69,(27,(16,((((17,(4,19)),(39,(15,23))),(76,(38,59))),(60,74))))))))))),(77,(7,62))))),(24,((50,(14,(41,(55,(47,56))))),(36,(66,(58,(73,((30,35),(34,64)))))))))))),(48,(25,(10,((20,42),(21,29)))))),(32,44)),(72,(70,(5,11)))),(51,53))),(78,(61,(6,67))))));
	TREE * ambiguous = [&R] (1,(2,(8,((((72,(((28,(45,(71,(((49,(((31,((13,(3,40)),(43,63))),(12,(54,65))),((22,75),(26,33)))),(68,((77,(62,((52,(37,(57,(69,(27,((((17,(4,19)),(39,(15,23))),(16,(76,(38,59)))),(60,74))))))),(9,46)))),(7,18)))),(24,(50,((14,(41,(55,(47,56)))),((58,(73,((30,35),(34,64)))),(36,66))))))))),(48,(25,(10,((20,42),(21,29)))))),(32,44))),(70,(5,11))),(51,53)),(61,(78,(6,67)))))));
	TREE * ambiguous = [&R] (1,(2,(8,((((72,(((28,(45,(71,(((49,((12,((31,((13,(3,40)),(43,63))),(54,65))),((22,75),(26,33)))),(((9,(46,(52,(57,(37,(69,(27,((((17,(4,19)),(39,(15,23))),(76,(38,59))),(16,(60,74)))))))))),(7,(62,77))),(18,68))),(24,((50,(14,(41,(55,(47,56))))),(36,(66,(58,(73,((30,35),(34,64)))))))))))),(48,(25,(10,((20,42),(21,29)))))),(32,44))),(70,(5,11))),(51,53)),(78,(61,(6,67)))))));
	TREE * ambiguous = [&R] (1,(2,(8,((((72,(((28,(45,(71,(((22,(75,((49,((31,((13,(3,40)),(12,(54,65)))),(43,63))),(26,33)))),(68,(18,(77,(7,(62,((52,(57,(37,(69,(27,((((17,(4,19)),(39,(15,23))),(16,(76,(38,59)))),(60,74))))))),(9,46)))))))),(24,((50,(14,(41,(55,(47,56))))),(36,(66,(58,(73,((30,35),(34,64)))))))))))),(32,44)),(48,(25,(10,((20,42),(21,29))))))),(70,(5,11))),(51,53)),((6,67),(61,78))))));
	TREE * ambiguous = [&R] (1,(2,(8,((((((28,((((49,(((12,(54,(65,(13,(3,40))))),(31,(43,63))),((22,75),(26,33)))),(68,(18,((9,(46,(52,(57,(37,(69,(27,((((17,(4,19)),(39,(15,23))),(76,(38,59))),(16,(60,74)))))))))),(62,(7,77)))))),(24,(50,((14,(41,(55,(47,56)))),((58,(73,((30,35),(34,64)))),(36,66)))))),(45,71))),(48,(25,(10,((20,42),(21,29)))))),(32,44)),(72,(70,(5,11)))),(51,53)),((6,67),(61,78))))));
	TREE * ambiguous = [&R] (1,(2,((8,(((72,(((28,(71,(45,(((22,(75,((49,((31,(12,((13,(3,40)),(54,65)))),(43,63))),(26,33)))),(68,(18,(77,(((52,(57,(37,(69,(27,((((17,(4,19)),(39,(15,23))),(76,(38,59))),(16,(60,74)))))))),(9,46)),(7,62)))))),(24,(50,((14,(41,(55,(47,56)))),(36,(66,(58,(73,((30,35),(34,64))))))))))))),(32,44)),(48,(25,(10,((20,42),(21,29))))))),(70,(5,11))),(51,53))),((6,67),(61,78)))));
	TREE * ambiguous = [&R] (1,(2,((8,(((72,(((28,((((22,(75,((49,((12,(31,((13,(3,40)),(54,65)))),(43,63))),(26,33)))),(68,((77,(62,((52,(57,(37,(69,(27,(16,((((17,(4,19)),(39,(15,23))),(76,(38,59))),(60,74)))))))),(9,46)))),(7,18)))),(24,(50,((14,(41,(55,(47,56)))),((58,(73,((30,35),(34,64)))),(36,66)))))),(45,71))),(48,(25,(10,((20,42),(21,29)))))),(32,44))),(70,(5,11))),(51,53))),(78,(61,(6,67))))));
	TREE * ambiguous = [&R] (1,(((2,(8,(((72,(((28,(71,(45,(((49,(((31,((13,(3,40)),(43,63))),(12,(54,65))),((22,75),(26,33)))),(68,(18,(((52,(37,(57,(69,(27,((((17,(4,19)),(39,(15,23))),(16,(76,(38,59)))),(60,74))))))),(9,46)),(77,(7,62)))))),(24,((50,(14,(41,(55,(47,56))))),(36,(66,(58,(73,((30,35),(34,64)))))))))))),(32,44)),(48,(25,(10,((20,42),(21,29))))))),(70,(5,11))),(51,53)))),(61,78)),(6,67)));
	TREE * ambiguous = [&R] (1,(2,((8,(((72,(((28,(45,(71,(((22,(75,((49,((12,(31,((13,(3,40)),(54,65)))),(43,63))),(26,33)))),(68,(18,(((52,(57,(37,(69,(27,((((17,(4,19)),(39,(15,23))),(76,(38,59))),(16,(60,74)))))))),(9,46)),(7,(62,77)))))),(24,((50,(14,(41,(55,(47,56))))),(36,(66,(58,(73,((30,35),(34,64)))))))))))),(32,44)),(48,(25,(10,((20,42),(21,29))))))),(70,(5,11))),(51,53))),(61,(78,(6,67))))));
	TREE * ambiguous = [&R] (1,(2,((8,(((72,(((28,(71,(45,(((22,(75,((49,((12,(31,((13,(3,40)),(54,65)))),(43,63))),(26,33)))),((37,((69,(27,(16,((((17,(4,19)),(39,(15,23))),(76,(38,59))),(60,74))))),(52,57))),((68,(18,(62,(7,77)))),(9,46)))),(24,(50,((14,(41,(55,(47,56)))),((58,(73,((30,35),(34,64)))),(36,66))))))))),(48,(25,(10,((20,42),(21,29)))))),(32,44))),(70,(5,11))),(51,53))),((6,67),(61,78)))));
	TREE * extraState = [&R] (1,(2,(8,((51,(53,((72,(((71,((45,(22,(75,(((((13,(3,40)),(12,(54,65))),(31,(49,(43,63)))),(46,((52,(37,(57,(27,(69,(((4,19),(17,((39,(15,23)),(59,76)))),(16,(60,(38,74))))))))),(9,(77,(68,(18,(7,62)))))))),(26,33))))),(28,(24,(50,((14,(41,(55,(47,56)))),((73,(58,((30,35),(34,64)))),(36,66)))))))),(48,(25,((10,(20,42)),(21,29))))),(32,44))),(5,(11,70))))),((6,67),(61,78))))));
	TREE * extraState = [&R] (1,(2,(8,((51,(53,((72,(((71,((45,(22,(75,(((31,((13,(3,40)),(12,(54,65)))),((49,((9,(46,(52,(57,(37,(27,(69,(((4,19),(17,((39,(15,23)),(59,76)))),(16,(60,(38,74))))))))))),(77,(68,(18,(7,62)))))),(43,63))),(26,33))))),(28,(24,(50,((14,(41,(55,(47,56)))),((73,(58,((30,35),(34,64)))),(36,66)))))))),(32,44)),(48,(25,(10,((20,42),(21,29))))))),(5,(11,70))))),((6,67),(61,78))))));
	TREE * extraState = [&R] (1,(2,(8,((51,(53,((72,(((71,((45,(22,(75,(((((13,(3,40)),(12,(54,65))),(31,(49,(43,63)))),((52,(37,(57,(27,(69,(((4,19),(17,((39,(15,23)),(59,76)))),(16,(60,(38,74))))))))),(46,(9,(68,(18,(62,(7,77)))))))),(26,33))))),(28,(24,((50,(14,(41,(55,(47,56))))),(36,(66,(58,(73,((30,35),(34,64))))))))))),(48,(25,((10,(20,42)),(21,29))))),(32,44))),(11,(5,70))))),(78,(61,(6,67)))))));
	TREE * extraState = [&R] (1,(2,(8,(((72,(((71,((45,(22,(75,(((((13,(3,40)),(12,(54,65))),(31,(49,(43,63)))),(46,((52,(57,(27,(69,(((4,19),(17,((39,(15,23)),(59,76)))),(16,(60,(38,74)))))))),(9,(37,(77,(68,(18,(7,62))))))))),(26,33))))),(28,(24,(50,((14,(41,(55,(47,56)))),((73,(58,((30,35),(34,64)))),(36,66)))))))),(32,44)),(48,(25,(10,((20,42),(21,29))))))),((5,(11,70)),(51,53))),(61,(78,(6,67)))))));
	TREE * extraState = [&R] (1,(2,((8,((72,(((71,((45,(22,(75,(((((13,(3,40)),(12,(54,65))),(31,(49,(43,63)))),((52,(37,(57,(27,(69,(((4,19),(17,((39,(15,23)),(59,76)))),(16,(60,(38,74))))))))),(46,(9,(68,(18,(77,(7,62)))))))),(26,33))))),(28,(24,((50,(14,(41,(55,(47,56))))),(36,(66,(58,(73,((30,35),(34,64))))))))))),(32,44)),(48,(25,(10,((20,42),(21,29))))))),((70,(5,11)),(51,53)))),(78,(61,(6,67))))));
	TREE * extraState = [&R] (1,(2,((8,(((72,(((71,((45,(22,(75,(((((13,(3,40)),(12,(54,65))),(31,(49,(43,63)))),((52,(37,(57,(27,(69,(((4,19),(17,((39,(15,23)),(59,76)))),(16,(60,(38,74))))))))),(46,(9,(68,(77,(18,(7,62)))))))),(26,33))))),(28,(24,((50,(14,(41,(55,(47,56))))),(36,(66,(58,(73,((30,35),(34,64))))))))))),(48,(25,(10,((20,42),(21,29)))))),(32,44))),(70,(5,11))),(51,53))),(61,(78,(6,67))))));
	TREE * extraState = [&R] (1,(2,(8,((51,(53,((72,(((71,((45,(22,(75,((((13,(3,40)),(12,(54,65))),(31,((49,((9,(46,(52,(57,(37,(27,(69,(((4,19),(17,((39,(15,23)),(59,76)))),(16,(60,(38,74))))))))))),(77,(68,(18,(7,62)))))),(43,63)))),(26,33))))),(28,(24,((50,(14,(41,(55,(47,56))))),(36,(66,(58,(73,((30,35),(34,64))))))))))),(48,(25,((10,(20,42)),(21,29))))),(32,44))),(70,(5,11))))),(61,(78,(6,67)))))));
	TREE * extraState = [&R] (1,(2,(8,((((72,(((71,((45,(22,(75,(((((13,(3,40)),(12,(54,65))),(31,(49,(43,63)))),((52,(57,(37,(27,(69,(((4,19),(17,((39,(15,23)),(59,76)))),(16,(60,(38,74))))))))),(46,(9,(68,(18,(62,(7,77)))))))),(26,33))))),(28,(24,((50,(14,(41,(55,(47,56))))),(36,(66,(58,(73,((30,35),(34,64))))))))))),(48,(25,((10,(20,42)),(21,29))))),(32,44))),(70,(5,11))),(51,53)),(78,(61,(6,67)))))));
	TREE * extraState = [&R] (1,(2,(8,((51,(53,((72,(((71,((45,(22,(75,(((((13,(3,40)),(12,(54,65))),(31,(49,(43,63)))),((52,(57,(37,(27,(69,(((4,19),(17,((39,(15,23)),(59,76)))),(16,(60,(38,74))))))))),(46,(9,((18,(7,62)),(68,77)))))),(26,33))))),(28,(24,((50,(14,(41,(55,(47,56))))),(36,(66,(58,(73,((30,35),(34,64))))))))))),(32,44)),(48,(25,((10,(20,42)),(21,29)))))),(11,(5,70))))),(78,(61,(6,67)))))));
	TREE * extraState = [&R] (1,(2,(8,((51,(53,((72,(((71,((45,(22,(75,(((((13,(3,40)),(12,(54,65))),(31,(49,(43,63)))),(46,((52,(37,(57,(27,(69,(((4,19),(17,((39,(15,23)),(59,76)))),(16,(60,(38,74))))))))),(9,(77,(68,(18,(7,62)))))))),(26,33))))),(28,(24,((50,(14,(41,(55,(47,56))))),(36,(66,(58,(73,((30,35),(34,64))))))))))),(32,44)),(48,(25,(10,((20,42),(21,29))))))),(5,(11,70))))),(78,(61,(6,67)))))));
	TREE * extraState = [&R] (1,(2,((8,(((72,(((71,((45,(22,(75,(((((13,(3,40)),(12,(54,65))),(31,(49,(43,63)))),((52,(57,(37,(27,(69,(((4,19),(17,((39,(15,23)),(59,76)))),(16,(60,(38,74))))))))),(46,(9,(68,(77,(18,(7,62)))))))),(26,33))))),(28,(24,((50,(14,(41,(55,(47,56))))),(36,(66,(58,(73,((30,35),(34,64))))))))))),(32,44)),(48,(25,((10,(20,42)),(21,29)))))),(70,(5,11))),(51,53))),((6,67),(61,78)))));
	TREE * extraState = [&R] (1,(2,(8,((((72,(((71,((45,(22,(75,(((((13,(3,40)),(12,(54,65))),(31,(49,(43,63)))),((52,(57,(37,(27,(69,(((4,19),(17,((39,(15,23)),(59,76)))),(16,(60,(38,74))))))))),(46,(9,(68,(77,(18,(7,62)))))))),(26,33))))),(28,(24,((50,(14,(41,(55,(47,56))))),(36,(66,(58,(73,((30,35),(34,64))))))))))),(32,44)),(48,(25,((10,(20,42)),(21,29)))))),(70,(5,11))),(51,53)),((6,67),(61,78))))));
	TREE * extraState = [&R] (1,(2,(8,(((72,(((71,((45,(22,(75,(((((13,(3,40)),(12,(54,65))),(31,(49,(43,63)))),((52,(57,(37,(27,(69,(((4,19),(17,((39,(15,23)),(59,76)))),(16,(60,(38,74))))))))),(46,(9,(77,(68,(18,(7,62)))))))),(26,33))))),(28,(24,(50,((14,(41,(55,(47,56)))),((73,(58,((30,35),(34,64)))),(36,66)))))))),(32,44)),(48,(25,(10,((20,42),(21,29))))))),((70,(5,11)),(51,53))),((6,67),(61,78))))));
	TREE * extraState = [&R] (1,(2,(8,(((72,(((71,((45,(22,(75,(((((13,(3,40)),(12,(54,65))),(31,(49,(43,63)))),((52,(57,(37,(27,(69,(((4,19),(17,((39,(15,23)),(59,76)))),(16,(60,(38,74))))))))),(46,(9,(68,(77,(18,(7,62)))))))),(26,33))))),(28,(24,((50,(14,(41,(55,(47,56))))),(36,(66,(58,(73,((30,35),(34,64))))))))))),(32,44)),(48,(25,((10,(20,42)),(21,29)))))),((5,(11,70)),(51,53))),((6,67),(61,78))))));
	TREE * extraState = [&R] (1,(2,(8,((51,(53,((72,(((71,((45,(22,(75,(((((13,(3,40)),(12,(54,65))),(31,(49,(43,63)))),((52,(57,(37,(27,(69,(((4,19),(17,((39,(15,23)),(59,76)))),(16,(60,(38,74))))))))),(46,(9,(77,(68,(18,(7,62)))))))),(26,33))))),(28,(24,((50,(14,(41,(55,(47,56))))),(36,(66,(58,(73,((30,35),(34,64))))))))))),(48,(25,((10,(20,42)),(21,29))))),(32,44))),(70,(5,11))))),((6,67),(61,78))))));
	TREE * extraState = [&R] (1,(2,(8,((((72,(((71,((45,(22,(75,(((((13,(3,40)),(12,(54,65))),(31,(49,(43,63)))),((52,(57,(37,(27,(69,(((4,19),(17,((39,(15,23)),(59,76)))),(16,(60,(38,74))))))))),(46,(9,(77,(68,(18,(7,62)))))))),(26,33))))),(28,(24,(50,((14,(41,(55,(47,56)))),((73,(58,((30,35),(34,64)))),(36,66)))))))),(32,44)),(48,(25,((10,(20,42)),(21,29)))))),(70,(5,11))),(51,53)),((6,67),(61,78))))));
	TREE * extraState = [&R] (1,(2,(8,((((72,(((71,((45,(22,(75,(((((13,(3,40)),(12,(54,65))),(31,(49,(43,63)))),((46,(37,(52,(57,(27,(69,(((4,19),(17,((39,(15,23)),(59,76)))),(16,(60,(38,74)))))))))),(9,(77,(68,(18,(7,62))))))),(26,33))))),(28,(24,((50,(14,(41,(55,(47,56))))),(36,(66,(58,(73,((30,35),(34,64))))))))))),(48,(25,((10,(20,42)),(21,29))))),(32,44))),(70,(5,11))),(51,53)),((6,67),(61,78))))));
	TREE * extraState = [&R] (1,(2,(8,((51,(53,((72,(((71,((45,(22,(75,(((((13,(3,40)),(12,(54,65))),(31,(49,(43,63)))),(46,((52,(57,(27,(69,(((4,19),(17,((39,(15,23)),(59,76)))),(16,(60,(38,74)))))))),(9,(37,(77,(68,(18,(7,62))))))))),(26,33))))),(28,(24,((50,(14,(41,(55,(47,56))))),(36,(66,(58,(73,((30,35),(34,64))))))))))),(48,(25,(10,((20,42),(21,29)))))),(32,44))),(70,(5,11))))),(61,(78,(6,67)))))));
	TREE * extraState = [&R] (1,(2,(8,((51,(53,((72,(((71,((45,(22,(75,(((((13,(3,40)),(12,(54,65))),(31,(49,(43,63)))),((46,(37,(52,(57,(27,(69,(((4,19),(17,((39,(15,23)),(59,76)))),(16,(60,(38,74)))))))))),(9,(77,(68,(18,(7,62))))))),(26,33))))),(28,(24,(50,((14,(41,(55,(47,56)))),((73,(58,((30,35),(34,64)))),(36,66)))))))),(32,44)),(48,(25,((10,(20,42)),(21,29)))))),(5,(11,70))))),(78,(61,(6,67)))))));
	TREE * extraState = [&R] (1,(2,(8,(((72,(((71,((45,(22,(75,(((((13,(3,40)),(12,(54,65))),(31,(49,(43,63)))),(46,((52,(57,(27,(69,(((4,19),(17,((39,(15,23)),(59,76)))),(16,(60,(38,74)))))))),(9,(37,(77,(68,(18,(7,62))))))))),(26,33))))),(28,(24,(50,((14,(41,(55,(47,56)))),((73,(58,((30,35),(34,64)))),(36,66)))))))),(32,44)),(48,(25,((10,(20,42)),(21,29)))))),((5,(11,70)),(51,53))),(61,(78,(6,67)))))));
	TREE * extraState = [&R] (1,(2,((8,((72,(((71,((45,(22,(75,((((13,(3,40)),(12,(54,65))),(31,((49,((9,(46,(52,(57,(37,(27,(69,(((4,19),(17,((39,(15,23)),(59,76)))),(16,(60,(38,74))))))))))),(77,(68,(18,(7,62)))))),(43,63)))),(26,33))))),(28,(24,((50,(14,(41,(55,(47,56))))),(36,(66,(58,(73,((30,35),(34,64))))))))))),(32,44)),(48,(25,((10,(20,42)),(21,29)))))),((70,(5,11)),(51,53)))),(78,(61,(6,67))))));
	TREE * extraState = [&R] (1,(2,(8,((51,(53,((72,(((71,((45,(22,(75,(((((13,(3,40)),(12,(54,65))),(31,(49,(43,63)))),((52,(37,(57,(27,(69,(((4,19),(17,((39,(15,23)),(59,76)))),(16,(60,(38,74))))))))),(46,(9,(77,(68,(18,(7,62)))))))),(26,33))))),(28,(24,(50,((14,(41,(55,(47,56)))),((73,(58,((30,35),(34,64)))),(36,66)))))))),(48,(25,((10,(20,42)),(21,29))))),(32,44))),(70,(5,11))))),((6,67),(61,78))))));
	TREE * extraState = [&R] (1,(2,(8,((((72,(((71,((45,(22,(75,(((31,((13,(3,40)),(12,(54,65)))),((49,((9,(46,(52,(57,(37,(27,(69,(((4,19),(17,((39,(15,23)),(59,76)))),(16,(60,(38,74))))))))))),(77,(68,(18,(7,62)))))),(43,63))),(26,33))))),(28,(24,((50,(14,(41,(55,(47,56))))),(36,(66,(58,(73,((30,35),(34,64))))))))))),(48,(25,(10,((20,42),(21,29)))))),(32,44))),(70,(5,11))),(51,53)),(78,(61,(6,67)))))));
	TREE * extraState = [&R] (1,(2,(8,((51,(53,((72,(((71,((45,(22,(75,(((((13,(3,40)),(12,(54,65))),(31,(49,(43,63)))),(46,((52,(37,(57,(27,(69,(((4,19),(17,((39,(15,23)),(59,76)))),(16,(60,(38,74))))))))),(9,(77,(68,(18,(7,62)))))))),(26,33))))),(28,(24,((50,(14,(41,(55,(47,56))))),(36,(66,(58,(73,((30,35),(34,64))))))))))),(48,(25,((10,(20,42)),(21,29))))),(32,44))),(11,(5,70))))),((6,67),(61,78))))));
	TREE * extraState = [&R] (1,(2,(8,((51,(53,((72,(((71,((45,(22,(75,(((((13,(3,40)),(12,(54,65))),(31,(49,(43,63)))),((52,(57,(37,(27,(69,(((4,19),(17,((39,(15,23)),(59,76)))),(16,(60,(38,74))))))))),(46,(9,(68,(18,(62,(7,77)))))))),(26,33))))),(28,(24,(50,((14,(41,(55,(47,56)))),((73,(58,((30,35),(34,64)))),(36,66)))))))),(48,(25,(10,((20,42),(21,29)))))),(32,44))),(11,(5,70))))),(61,(78,(6,67)))))));
	TREE * extraState = [&R] (1,(2,(8,((((72,(((71,((45,(22,(75,(((31,((13,(3,40)),(12,(54,65)))),((49,((9,(46,(52,(57,(37,(27,(69,(((4,19),(17,((39,(15,23)),(59,76)))),(16,(60,(38,74))))))))))),(77,(68,(18,(7,62)))))),(43,63))),(26,33))))),(28,(24,((50,(14,(41,(55,(47,56))))),(36,(66,(58,(73,((30,35),(34,64))))))))))),(32,44)),(48,(25,(10,((20,42),(21,29))))))),(70,(5,11))),(51,53)),(61,(78,(6,67)))))));
	TREE * extraState = [&R] (1,(2,((8,(((72,(((71,((45,(22,(75,(((((13,(3,40)),(12,(54,65))),(31,(49,(43,63)))),((52,(57,(37,(27,(69,(((4,19),(17,((39,(15,23)),(59,76)))),(16,(60,(38,74))))))))),(46,(9,(68,(18,(7,(62,77)))))))),(26,33))))),(28,(24,(50,((14,(41,(55,(47,56)))),((73,(58,((30,35),(34,64)))),(36,66)))))))),(32,44)),(48,(25,((10,(20,42)),(21,29)))))),(70,(5,11))),(51,53))),((6,67),(61,78)))));
	TREE * extraState = [&R] (1,(2,(8,((((72,(((71,((45,(22,(75,(((((13,(3,40)),(12,(54,65))),(31,(49,(43,63)))),((52,(37,(57,(27,(69,(((4,19),(17,((39,(15,23)),(59,76)))),(16,(60,(38,74))))))))),(46,(9,(68,(18,(7,(62,77)))))))),(26,33))))),(28,(24,(50,((14,(41,(55,(47,56)))),((73,(58,((30,35),(34,64)))),(36,66)))))))),(48,(25,(10,((20,42),(21,29)))))),(32,44))),(70,(5,11))),(51,53)),((6,67),(61,78))))));
	TREE * extraState = [&R] (1,(2,((8,((72,(((71,((45,(22,(75,(((((13,(3,40)),(12,(54,65))),(31,(49,(43,63)))),((52,(57,(37,(27,(69,(((4,19),(17,((39,(15,23)),(59,76)))),(16,(60,(38,74))))))))),(46,(9,(77,(68,(18,(7,62)))))))),(26,33))))),(28,(24,((50,(14,(41,(55,(47,56))))),(36,(66,(58,(73,((30,35),(34,64))))))))))),(32,44)),(48,(25,((10,(20,42)),(21,29)))))),((5,(11,70)),(51,53)))),((6,67),(61,78)))));
	TREE * extraState = [&R] (1,(2,(8,((51,(53,((72,(((71,((45,(22,(75,(((((13,(3,40)),(12,(54,65))),(31,(49,(43,63)))),((46,(37,(52,(57,(27,(69,(((4,19),(17,((39,(15,23)),(59,76)))),(16,(60,(38,74)))))))))),(9,(77,(68,(18,(7,62))))))),(26,33))))),(28,(24,(50,((14,(41,(55,(47,56)))),((73,(58,((30,35),(34,64)))),(36,66)))))))),(32,44)),(48,(25,(10,((20,42),(21,29))))))),(11,(5,70))))),((6,67),(61,78))))));
	TREE * extraState = [&R] (1,(2,(8,((51,(53,((72,(((71,((45,(22,(75,(((((13,(3,40)),(12,(54,65))),(31,(49,(43,63)))),((52,(57,(37,(27,(69,(((4,19),(17,((39,(15,23)),(59,76)))),(16,(60,(38,74))))))))),(46,(9,(68,(18,(77,(7,62)))))))),(26,33))))),(28,(24,(50,((14,(41,(55,(47,56)))),((73,(58,((30,35),(34,64)))),(36,66)))))))),(48,(25,((10,(20,42)),(21,29))))),(32,44))),(70,(5,11))))),((6,67),(61,78))))));
	TREE * extraState = [&R] (1,(2,((8,((72,(((71,((45,(22,(75,(((((13,(3,40)),(12,(54,65))),(31,(49,(43,63)))),((52,(57,(37,(27,(69,(((4,19),(17,((39,(15,23)),(59,76)))),(16,(60,(38,74))))))))),(46,(9,(68,(18,(62,(7,77)))))))),(26,33))))),(28,(24,((50,(14,(41,(55,(47,56))))),(36,(66,(58,(73,((30,35),(34,64))))))))))),(32,44)),(48,(25,(10,((20,42),(21,29))))))),((5,(11,70)),(51,53)))),(61,(78,(6,67))))));
	TREE * extraState = [&R] (1,(2,(8,((51,(53,((72,(((71,((45,(22,(75,(((((13,(3,40)),(12,(54,65))),(31,(49,(43,63)))),(46,((52,(57,(37,(27,(69,(((4,19),(17,((39,(15,23)),(59,76)))),(16,(60,(38,74))))))))),(9,(77,(68,(18,(7,62)))))))),(26,33))))),(28,(24,(50,((14,(41,(55,(47,56)))),((73,(58,((30,35),(34,64)))),(36,66)))))))),(48,(25,((10,(20,42)),(21,29))))),(32,44))),(70,(5,11))))),((6,67),(61,78))))));
	TREE * extraState = [&R] (1,(2,((8,((72,(((71,((45,(22,(75,(((((13,(3,40)),(12,(54,65))),(31,(49,(43,63)))),(46,((37,(52,(57,(27,(69,(((4,19),(17,((39,(15,23)),(59,76)))),(16,(60,(38,74))))))))),(9,(77,(68,(18,(7,62)))))))),(26,33))))),(28,(24,((50,(14,(41,(55,(47,56))))),(36,(66,(58,(73,((30,35),(34,64))))))))))),(32,44)),(48,(25,(10,((20,42),(21,29))))))),((11,(5,70)),(51,53)))),((6,67),(61,78)))));
	TREE * extraState = [&R] (1,(2,((8,(((72,(((71,((45,(22,(75,(((((13,(3,40)),(12,(54,65))),(31,(49,(43,63)))),(46,((52,(57,(37,(27,(69,(((4,19),(17,((39,(15,23)),(59,76)))),(16,(60,(38,74))))))))),(9,(77,(68,(18,(7,62)))))))),(26,33))))),(28,(24,(50,((14,(41,(55,(47,56)))),((73,(58,((30,35),(34,64)))),(36,66)))))))),(32,44)),(48,(25,(10,((20,42),(21,29))))))),(70,(5,11))),(51,53))),((6,67),(61,78)))));
	TREE * extraState = [&R] (1,(2,(8,((51,(53,((72,(((71,((45,(22,(75,(((((13,(3,40)),(12,(54,65))),(31,(49,(43,63)))),(46,((37,(52,(57,(27,(69,(((4,19),(17,((39,(15,23)),(59,76)))),(16,(60,(38,74))))))))),(9,(77,(68,(18,(7,62)))))))),(26,33))))),(28,(24,(50,((14,(41,(55,(47,56)))),((73,(58,((30,35),(34,64)))),(36,66)))))))),(32,44)),(48,(25,((10,(20,42)),(21,29)))))),(5,(11,70))))),(78,(61,(6,67)))))));
	TREE * extraState = [&R] (1,(2,((8,(((72,(((71,((45,(22,(75,(((((13,(3,40)),(12,(54,65))),(31,(49,(43,63)))),((52,(37,(57,(27,(69,(((4,19),(17,((39,(15,23)),(59,76)))),(16,(60,(38,74))))))))),(46,(9,(77,(68,(18,(7,62)))))))),(26,33))))),(28,(24,(50,((14,(41,(55,(47,56)))),((73,(58,((30,35),(34,64)))),(36,66)))))))),(48,(25,((10,(20,42)),(21,29))))),(32,44))),(70,(5,11))),(51,53))),((6,67),(61,78)))));
	TREE * extraState = [&R] (1,(2,(8,((51,(53,((72,(((71,((45,(22,(75,(((((13,(3,40)),(12,(54,65))),(31,(49,(43,63)))),(46,((52,(57,(27,(69,(((4,19),(17,((39,(15,23)),(59,76)))),(16,(60,(38,74)))))))),(9,(37,(77,(68,(18,(7,62))))))))),(26,33))))),(28,(24,((50,(14,(41,(55,(47,56))))),(36,(66,(58,(73,((30,35),(34,64))))))))))),(32,44)),(48,(25,(10,((20,42),(21,29))))))),(11,(5,70))))),(61,(78,(6,67)))))));
	TREE * extraState = [&R] (1,(2,(8,((((72,(((71,((45,(22,(75,(((((13,(3,40)),(12,(54,65))),(31,(49,(43,63)))),((52,(37,(57,(27,(69,(((4,19),(17,((39,(15,23)),(59,76)))),(16,(60,(38,74))))))))),(46,(9,(68,(77,(18,(7,62)))))))),(26,33))))),(28,(24,((50,(14,(41,(55,(47,56))))),(36,(66,(58,(73,((30,35),(34,64))))))))))),(32,44)),(48,(25,((10,(20,42)),(21,29)))))),(70,(5,11))),(51,53)),((6,67),(61,78))))));
	TREE * extraState = [&R] (1,(2,((8,(((72,(((71,((45,(22,(75,(((((13,(3,40)),(12,(54,65))),(31,(49,(43,63)))),((52,(57,(37,(27,(69,(((4,19),(17,((39,(15,23)),(59,76)))),(16,(60,(38,74))))))))),(46,(9,(68,(18,(77,(7,62)))))))),(26,33))))),(28,(24,((50,(14,(41,(55,(47,56))))),(36,(66,(58,(73,((30,35),(34,64))))))))))),(32,44)),(48,(25,(10,((20,42),(21,29))))))),(70,(5,11))),(51,53))),(78,(61,(6,67))))));
	TREE * extraState = [&R] (1,(2,(8,((51,(53,((72,(((71,((45,(22,(75,(((((13,(3,40)),(12,(54,65))),(31,(49,(43,63)))),((46,(37,(52,(57,(27,(69,(((4,19),(17,((39,(15,23)),(59,76)))),(16,(60,(38,74)))))))))),(9,(77,(68,(18,(7,62))))))),(26,33))))),(28,(24,((50,(14,(41,(55,(47,56))))),(36,(66,(58,(73,((30,35),(34,64))))))))))),(32,44)),(48,(25,((10,(20,42)),(21,29)))))),(11,(5,70))))),(78,(61,(6,67)))))));
	TREE * extraState = [&R] (1,(2,(8,((51,(53,((72,(((71,((45,(22,(75,(((((13,(3,40)),(12,(54,65))),(31,(49,(43,63)))),((52,(57,(37,(27,(69,(((4,19),(17,((39,(15,23)),(59,76)))),(16,(60,(38,74))))))))),(46,(9,(68,(77,(18,(7,62)))))))),(26,33))))),(28,(24,((50,(14,(41,(55,(47,56))))),(36,(66,(58,(73,((30,35),(34,64))))))))))),(48,(25,(10,((20,42),(21,29)))))),(32,44))),(11,(5,70))))),((6,67),(61,78))))));
	TREE * extraState = [&R] (1,(2,(8,((((72,(((71,((45,(22,(75,(((((13,(3,40)),(12,(54,65))),(31,(49,(43,63)))),((46,(52,(57,(37,(27,(69,(((4,19),(17,((39,(15,23)),(59,76)))),(16,(60,(38,74)))))))))),(9,(77,(68,(18,(7,62))))))),(26,33))))),(28,(24,(50,((14,(41,(55,(47,56)))),((73,(58,((30,35),(34,64)))),(36,66)))))))),(48,(25,(10,((20,42),(21,29)))))),(32,44))),(70,(5,11))),(51,53)),(78,(61,(6,67)))))));
	TREE * extraState = [&R] (1,(2,(8,((51,(53,((72,(((71,((45,(22,(75,(((((13,(3,40)),(12,(54,65))),(31,(49,(43,63)))),((46,(52,(57,(37,(27,(69,(((4,19),(17,((39,(15,23)),(59,76)))),(16,(60,(38,74)))))))))),(9,(77,(68,(18,(7,62))))))),(26,33))))),(28,(24,((50,(14,(41,(55,(47,56))))),(36,(66,(58,(73,((30,35),(34,64))))))))))),(32,44)),(48,(25,(10,((20,42),(21,29))))))),(70,(5,11))))),(61,(78,(6,67)))))));
	TREE * extraState = [&R] (1,(2,(8,((((72,(((71,((45,(22,(75,(((((13,(3,40)),(12,(54,65))),(31,(49,(43,63)))),((52,(57,(37,(27,(69,(((4,19),(17,((39,(15,23)),(59,76)))),(16,(60,(38,74))))))))),(46,(9,(68,(18,(62,(7,77)))))))),(26,33))))),(28,(24,(50,((14,(41,(55,(47,56)))),((73,(58,((30,35),(34,64)))),(36,66)))))))),(48,(25,((10,(20,42)),(21,29))))),(32,44))),(70,(5,11))),(51,53)),(78,(61,(6,67)))))));
	TREE * extraState = [&R] (1,(2,(8,((51,(53,((72,(((71,((45,(22,(75,(((((13,(3,40)),(12,(54,65))),(31,(49,(43,63)))),((52,(57,(37,(27,(69,(((4,19),(17,((39,(15,23)),(59,76)))),(16,(60,(38,74))))))))),(46,(9,(68,(18,(62,(7,77)))))))),(26,33))))),(28,(24,((50,(14,(41,(55,(47,56))))),(36,(66,(58,(73,((30,35),(34,64))))))))))),(32,44)),(48,(25,(10,((20,42),(21,29))))))),(70,(5,11))))),(78,(61,(6,67)))))));
	TREE * extraState = [&R] (1,(2,(8,((51,(53,((72,(((71,((45,(22,(75,(((((13,(3,40)),(12,(54,65))),(31,(49,(43,63)))),((46,(37,(52,(57,(27,(69,(((4,19),(17,((39,(15,23)),(59,76)))),(16,(60,(38,74)))))))))),(9,(77,(68,(18,(7,62))))))),(26,33))))),(28,(24,((50,(14,(41,(55,(47,56))))),(36,(66,(58,(73,((30,35),(34,64))))))))))),(48,(25,((10,(20,42)),(21,29))))),(32,44))),(5,(11,70))))),((6,67),(61,78))))));
	TREE * extraState = [&R] (1,(2,(8,((51,(53,((72,(((71,((45,(22,(75,(((((13,(3,40)),(12,(54,65))),(31,(49,(43,63)))),((52,(57,(27,(69,(((4,19),(17,((39,(15,23)),(59,76)))),(16,(60,(38,74)))))))),(46,(9,(37,(77,(68,(18,(7,62))))))))),(26,33))))),(28,(24,(50,((14,(41,(55,(47,56)))),((73,(58,((30,35),(34,64)))),(36,66)))))))),(48,(25,((10,(20,42)),(21,29))))),(32,44))),(5,(11,70))))),((6,67),(61,78))))));
	TREE * extraState = [&R] (1,(2,((8,(((72,(((71,((45,(22,(75,(((31,((13,(3,40)),(12,(54,65)))),((49,((9,(46,(52,(57,(37,(27,(69,(((4,19),(17,((39,(15,23)),(59,76)))),(16,(60,(38,74))))))))))),(77,(68,(18,(7,62)))))),(43,63))),(26,33))))),(28,(24,(50,((14,(41,(55,(47,56)))),((73,(58,((30,35),(34,64)))),(36,66)))))))),(32,44)),(48,(25,(10,((20,42),(21,29))))))),(70,(5,11))),(51,53))),(78,(61,(6,67))))));
	TREE * extraState = [&R] (1,(2,((8,((72,(((71,((45,(22,(75,(((((13,(3,40)),(12,(54,65))),(31,(49,(43,63)))),((52,(37,(57,(27,(69,(((4,19),(17,((39,(15,23)),(59,76)))),(16,(60,(38,74))))))))),(46,(9,(68,(77,(18,(7,62)))))))),(26,33))))),(28,(24,(50,((14,(41,(55,(47,56)))),((73,(58,((30,35),(34,64)))),(36,66)))))))),(32,44)),(48,(25,(10,((20,42),(21,29))))))),((70,(5,11)),(51,53)))),((6,67),(61,78)))));
	TREE * inapplicable = [&R] (1,(2,(8,(((78,61),(6,67)),((72,((53,(51,(70,(11,5)))),((21,(29,((25,48),(10,(20,42))))),(28,(((24,45),((50,(14,(41,(55,(47,56))))),(36,(66,(58,(73,((35,30),(64,34)))))))),(22,(71,((75,(((54,(65,12)),(13,(3,40))),(26,33))),((49,(31,(63,43))),(77,(68,(((46,9),(52,(37,(57,(69,(27,((16,(74,60)),((38,(59,76)),((17,(19,4)),(39,(23,15))))))))))),(18,(62,7)))))))))))))),(32,44))))));
	TREE * inapplicable = [&R] (1,(2,(8,((61,(78,(67,6))),((32,44),(72,(((51,53),(70,(11,5))),((21,(29,((10,(42,20)),(48,25)))),(28,(45,(71,(((49,((77,(68,(((52,(57,(37,(69,(27,((16,(60,74)),((38,(76,59)),((39,(23,15)),(17,(19,4)))))))))),(46,9)),(18,(7,62))))),((75,22),(33,26)))),((31,((13,(40,3)),(12,(54,65)))),(63,43))),(50,((24,(14,(41,(55,(47,56))))),(36,(66,(58,(73,((35,30),(34,64))))))))))))))))))));
	TREE * inapplicable = [&R] (1,(2,(8,(((78,61),(67,6)),((72,(((51,53),(70,(5,11))),((28,((24,(45,((50,(14,(41,(55,(47,56))))),(36,(66,(58,(73,((35,30),(34,64))))))))),((22,71),(((46,9),(68,((77,(37,(52,(57,(69,(27,(16,((((39,(23,15)),(17,(4,19))),(38,(76,59))),(60,74))))))))),(18,(62,7))))),(49,((75,(26,33)),((31,((13,(3,40)),(12,(54,65)))),(43,63)))))))),(21,(29,((25,48),(10,(20,42)))))))),(44,32))))));
	TREE * inapplicable = [&R] (1,(2,(((8,61),(78,(6,67))),((72,((53,(51,(70,(11,5)))),((28,(((45,24),(50,((14,(41,(55,(56,47)))),(36,(66,(58,(73,((30,35),(64,34))))))))),(22,(71,(((68,((18,(7,62)),(77,(52,(37,(57,(69,(27,((16,(74,60)),((38,(59,76)),((39,(15,23)),(17,(19,4))))))))))))),(9,46)),(49,((75,(33,26)),((31,((13,(40,3)),(12,(54,65)))),(63,43))))))))),(21,(29,((48,25),(10,(42,20)))))))),(32,44)))));
	TREE * inapplicable = [&R] (1,(2,((61,(8,(78,(6,67)))),((72,(((51,53),(70,(11,5))),((21,(29,((25,48),(10,(42,20))))),(28,(45,(71,(((24,(50,(14,(41,(55,(56,47)))))),(36,(66,(58,(73,((34,64),(30,35))))))),(((49,((31,((12,(54,65)),(13,(40,3)))),(43,63))),((33,26),(22,75))),(18,((62,7),(77,(68,(((37,(69,(27,((16,(60,74)),((38,(59,76)),((39,(15,23)),(17,(4,19)))))))),(57,52)),(46,9)))))))))))))),(32,44)))));
	TREE * inapplicable = [&R] (1,(2,(8,(((78,61),(6,67)),((44,32),(72,(((53,51),(70,(5,11))),((28,((45,((71,22),(((68,((18,(62,7)),(77,(52,(37,(57,(69,(27,(16,(((38,(59,76)),((39,(15,23)),(17,(19,4)))),(74,60))))))))))),(9,46)),(49,((75,(33,26)),((31,((12,(54,65)),(13,(40,3)))),(63,43))))))),(24,(50,((14,(41,(55,(56,47)))),(36,(66,(58,(73,((30,35),(64,34))))))))))),(21,(29,((48,25),(10,(42,20)))))))))))));
	TREE * inapplicable = [&R] (1,(2,(((8,61),(78,(67,6))),((72,((53,(51,(70,(5,11)))),((28,(((45,24),(50,((14,(41,(55,(56,47)))),(36,(66,(58,(73,((35,30),(34,64))))))))),(22,(71,((49,((75,(26,33)),((31,((13,(3,40)),(12,(65,54)))),(43,63)))),((68,((18,(62,7)),(77,(37,(52,(57,(69,(27,((16,(74,60)),(((39,(23,15)),(17,(4,19))),(38,(76,59)))))))))))),(46,9))))))),(21,(29,((25,48),(10,(20,42)))))))),(44,32)))));
	TREE * inapplicable = [&R] (1,(2,((8,((61,78),(6,67))),((44,32),(72,(((21,(29,((10,(20,42)),(25,48)))),(28,(45,(71,((((49,((63,43),(31,((12,(54,65)),(13,(40,3)))))),((33,26),(75,22))),(18,(((77,68),((52,(57,(37,(69,(27,((16,(60,74)),((38,(76,59)),((17,(19,4)),(39,(15,23)))))))))),(46,9))),(7,62)))),(50,((24,(14,(41,(55,(56,47))))),(36,(66,(58,(73,((30,35),(34,64))))))))))))),(53,(51,(70,(5,11))))))))));
	TREE * inapplicable = [&R] (1,(2,(((61,8),(78,(6,67))),((44,32),(72,(((21,(29,((25,48),(10,(42,20))))),(28,(45,(71,(((50,(24,(14,(41,(55,(56,47)))))),(36,(66,(58,(73,((30,35),(34,64))))))),((((75,22),(33,26)),(49,((43,63),(31,((12,(65,54)),(13,(3,40))))))),(((77,((57,52),(37,(69,(27,((74,60),((16,(38,(76,59))),((17,(19,4)),(39,(23,15)))))))))),(9,46)),(68,(18,(62,7)))))))))),(53,(51,(70,(5,11))))))))));
	TREE * inapplicable = [&R] (1,(2,(8,((78,(61,(6,67))),((32,44),(72,(((21,(29,((10,(42,20)),(25,48)))),(28,(45,(71,(((((26,33),(75,22)),(49,((31,((12,(65,54)),(13,(3,40)))),(43,63)))),(((9,46),((52,57),(37,(69,(27,(((16,(38,(76,59))),((39,(15,23)),(17,(4,19)))),(60,74))))))),(77,(68,(18,(62,7)))))),(((50,24),(14,(41,(55,(47,56))))),(36,(66,(58,(73,((30,35),(64,34)))))))))))),((53,51),(70,(11,5))))))))));
	TREE * inapplicable = [&R] (1,(2,((61,(8,(78,(6,67)))),((72,((53,(51,(70,(11,5)))),((21,(29,((25,48),(10,(42,20))))),(28,(45,((22,(75,((71,(49,((31,(((13,(3,40)),(12,(65,54))),(63,43))),(77,(68,((18,(62,7)),((52,(57,(37,(69,(27,(16,((60,74),((38,(59,76)),((39,(15,23)),(17,(4,19))))))))))),(9,46)))))))),(33,26)))),(24,(50,((14,(41,(55,(56,47)))),(36,(66,(58,(73,((35,30),(34,64))))))))))))))),(44,32)))));
	TREE * inapplicable = [&R] (1,(2,((8,((78,61),(6,67))),((32,44),(72,(((21,(29,((25,48),(10,(20,42))))),(28,((45,(24,(50,((14,(41,(55,(47,56)))),(36,(66,(58,(73,((35,30),(64,34)))))))))),(22,(75,((71,(49,((31,(((12,(65,54)),(13,(3,40))),(63,43))),(77,(68,((18,(62,7)),((46,9),((57,52),(37,(69,(27,((74,60),((16,(38,(76,59))),((17,(4,19)),(39,(23,15)))))))))))))))),(33,26))))))),(53,(51,(70,(11,5))))))))));
	TREE * inapplicable = [&R] (1,(2,((8,(61,(78,(67,6)))),((44,32),(72,(((28,(45,(71,((50,((24,(14,(41,(55,(47,56))))),(36,(66,(58,(73,((35,30),(64,34)))))))),(((49,((63,43),(31,((13,(3,40)),(12,(65,54)))))),((33,26),(22,75))),(18,((68,((9,46),(52,(37,(57,(69,(27,((74,60),((16,(38,(76,59))),((39,(23,15)),(17,(19,4)))))))))))),(7,(62,77))))))))),(21,(29,((10,(42,20)),(25,48))))),(53,(51,(70,(5,11))))))))));
	TREE * inapplicable = [&R] (1,(2,(((61,8),(78,(6,67))),((44,32),(72,(((21,(29,((48,25),(10,(20,42))))),(28,(45,(((49,((31,((12,(54,65)),(13,(3,40)))),(77,(68,(((37,(52,(57,(69,(27,((74,60),((16,(38,(76,59))),((39,(15,23)),(17,(19,4)))))))))),(9,46)),(18,(62,7))))))),((71,((75,22),(33,26))),(63,43))),((24,(50,(14,(41,(55,(56,47)))))),(36,(66,(58,(73,((30,35),(34,64))))))))))),((53,51),(70,(11,5)))))))));
	TREE * inapplicable = [&R] (1,(2,((61,(8,(78,(67,6)))),((44,32),(72,(((21,(29,((10,(42,20)),(48,25)))),(28,(45,(71,((((24,50),(14,(41,(55,(56,47))))),(36,(66,(58,(73,((35,30),(34,64))))))),((((33,26),(22,75)),(49,((31,((13,(40,3)),(12,(54,65)))),(63,43)))),(18,((68,((46,9),(52,(57,(37,(69,(27,((74,60),((16,(38,(59,76))),((39,(23,15)),(17,(19,4)))))))))))),(77,(7,62)))))))))),((51,53),(70,(5,11)))))))));
	TREE * inapplicable = [&R] (1,(2,(8,((78,(61,(6,67))),((44,32),(72,((53,(51,(70,(5,11)))),((21,(29,((10,(20,42)),(25,48)))),(28,(45,(71,(((((26,33),(75,22)),(49,((43,63),(31,((12,(65,54)),(13,(3,40))))))),(18,((68,(77,((37,(52,(57,(69,(27,(16,((((17,(19,4)),(39,(15,23))),(38,(76,59))),(74,60)))))))),(9,46)))),(7,62)))),(50,((24,(14,(41,(55,(56,47))))),(36,(66,(58,(73,((30,35),(64,34))))))))))))))))))));
	TREE * inapplicable = [&R] (1,(2,((8,(78,(61,(6,67)))),((32,44),(72,((53,(51,(70,(5,11)))),((21,(29,((25,48),(10,(42,20))))),(28,(45,(71,(((((26,33),(22,75)),(49,((63,43),(31,((12,(54,65)),(13,(40,3))))))),(18,((77,(68,((37,(52,(57,(69,(27,(16,((74,60),(((39,(23,15)),(17,(4,19))),(38,(76,59)))))))))),(9,46)))),(7,62)))),((50,(24,(14,(41,(55,(56,47)))))),(36,(66,(58,(73,((30,35),(34,64))))))))))))))))));
	TREE * inapplicable = [&R] (1,(2,(8,((78,(61,(67,6))),((44,32),(72,(((28,(((45,24),((50,(14,(41,(55,(47,56))))),(36,(66,(58,(73,((30,35),(34,64)))))))),(22,(71,((75,((26,33),((54,(12,65)),(13,(40,3))))),((49,(31,(43,63))),(77,(68,(((37,(52,(57,(69,(27,((16,(74,60)),((38,(59,76)),((17,(4,19)),(39,(15,23)))))))))),(9,46)),(18,(7,62))))))))))),(21,(29,((48,25),(10,(42,20)))))),(53,(51,(70,(5,11)))))))))));
	TREE * inapplicable = [&R] (1,(2,(((8,61),(78,(67,6))),((44,32),(72,(((21,(29,((48,25),(10,(42,20))))),(28,(45,(71,((50,((24,(14,(41,(55,(56,47))))),(36,(66,(58,(73,((35,30),(64,34)))))))),((((33,26),(75,22)),(49,((63,43),(31,((13,(3,40)),(12,(54,65))))))),(18,(68,(77,((62,7),((46,9),(52,(57,(37,(69,(27,(16,((74,60),(((39,(23,15)),(17,(4,19))),(38,(76,59))))))))))))))))))))),(53,(51,(70,(11,5))))))))));
	TREE * inapplicable = [&R] (1,(2,((61,(8,(78,(67,6)))),((72,((53,(51,(70,(11,5)))),((21,(29,((48,25),(10,(42,20))))),(28,(45,(71,(((((33,26),(75,22)),(49,((31,((12,(54,65)),(13,(40,3)))),(43,63)))),((77,(68,(18,(7,62)))),(((37,(69,(27,((16,(60,74)),((38,(59,76)),((17,(4,19)),(39,(23,15)))))))),(57,52)),(46,9)))),((50,(24,(14,(41,(55,(47,56)))))),(36,(66,(58,(73,((35,30),(64,34)))))))))))))),(44,32)))));
	TREE * inapplicable = [&R] (1,(2,(((61,8),(78,(67,6))),((32,44),(72,(((28,((45,((71,22),((49,((75,(26,33)),((31,((12,(65,54)),(13,(3,40)))),(43,63)))),((68,((77,(37,(52,(57,(69,(27,((16,(60,74)),(((39,(23,15)),(17,(4,19))),(38,(76,59)))))))))),(18,(7,62)))),(46,9))))),(24,(50,((14,(41,(55,(56,47)))),(36,(66,(58,(73,((35,30),(34,64))))))))))),(21,(29,((25,48),(10,(20,42)))))),(53,(51,(70,(5,11))))))))));
	TREE * inapplicable = [&R] (1,(2,(8,((61,(78,(6,67))),((72,(((51,53),(70,(5,11))),((21,(29,((25,48),(10,(20,42))))),(28,(45,(71,(((((33,26),(22,75)),(49,((31,((12,(65,54)),(13,(3,40)))),(63,43)))),((68,(18,(62,(77,7)))),(((37,(69,(27,((16,(74,60)),((38,(76,59)),((17,(19,4)),(39,(15,23)))))))),(52,57)),(9,46)))),(((24,50),(14,(41,(55,(56,47))))),(36,(66,(58,(73,((30,35),(34,64)))))))))))))),(32,44))))));
	TREE * inapplicable = [&R] (1,(2,(8,(((78,61),(67,6)),((44,32),(72,(((51,53),(70,(11,5))),((21,(29,((48,25),(10,(42,20))))),(28,(45,(71,((((49,((43,63),(31,((12,(65,54)),(13,(3,40)))))),((26,33),(22,75))),(18,(((77,68),((52,(57,(37,(69,(27,(16,((74,60),(((17,(4,19)),(39,(23,15))),(38,(59,76)))))))))),(9,46))),(62,7)))),(((24,50),(14,(41,(55,(47,56))))),(36,(66,(58,(73,((35,30),(64,34)))))))))))))))))));
	TREE * inapplicable = [&R] (1,(2,((61,(8,(78,(6,67)))),((44,32),(72,(((21,(29,((25,48),(10,(42,20))))),(28,((45,(22,(75,((71,((49,(31,((63,43),((13,(3,40)),(12,(54,65)))))),(77,(68,((((52,57),(37,(69,(27,(16,((60,74),((38,(59,76)),((39,(15,23)),(17,(4,19)))))))))),(9,46)),(18,(7,62))))))),(33,26))))),(24,((50,(14,(41,(55,(56,47))))),(36,(66,(58,(73,((35,30),(34,64))))))))))),(53,(51,(70,(11,5))))))))));
	TREE * inapplicable = [&R] (1,(2,(8,(((61,78),(67,6)),((32,44),(72,(((28,(45,(71,((((49,((31,((12,(54,65)),(13,(3,40)))),(43,63))),((22,75),(33,26))),((68,(18,(62,(7,77)))),((46,9),((57,52),(37,(69,(27,((16,(74,60)),((38,(76,59)),((17,(19,4)),(39,(23,15)))))))))))),((50,(24,(14,(41,(55,(56,47)))))),(36,(66,(58,(73,((64,34),(35,30))))))))))),(21,(29,((48,25),(10,(20,42)))))),((53,51),(70,(5,11))))))))));
	TREE * inapplicable = [&R] (1,(2,((8,((78,61),(67,6))),((72,((53,(51,(70,(5,11)))),((21,(29,((48,25),(10,(20,42))))),(28,(((45,24),((50,(14,(41,(55,(47,56))))),(36,(66,(58,(73,((30,35),(64,34)))))))),(22,(75,((71,(49,((31,(((13,(40,3)),(12,(54,65))),(43,63))),(77,(68,((18,(7,62)),((52,(57,(37,(69,(27,((16,(74,60)),((38,(76,59)),((39,(23,15)),(17,(19,4)))))))))),(46,9)))))))),(26,33))))))))),(32,44)))));
	TREE * inapplicable = [&R] (1,(2,(8,(((78,61),(67,6)),((72,(((21,(29,((48,25),(10,(20,42))))),(28,(45,(71,(((((26,33),(75,22)),(49,((31,((13,(3,40)),(12,(54,65)))),(63,43)))),(((77,((37,(69,(27,((16,(74,60)),(((17,(4,19)),(39,(23,15))),(38,(59,76))))))),(57,52))),(68,(18,(7,62)))),(46,9))),((24,(50,(14,(41,(55,(47,56)))))),(36,(66,(58,(73,((34,64),(35,30)))))))))))),((51,53),(70,(11,5))))),(32,44))))));
	TREE * inapplicable = [&R] (1,(2,(8,(((61,78),(67,6)),((44,32),(72,(((53,51),(70,(11,5))),((21,(29,((48,25),(10,(42,20))))),(28,(45,(71,((((49,((43,63),(31,((12,(65,54)),(13,(3,40)))))),((26,33),(22,75))),(18,((68,((52,(37,(57,(69,(27,((16,(74,60)),(((17,(4,19)),(39,(23,15))),(38,(59,76))))))))),(9,46))),(77,(62,7))))),(((50,24),(14,(41,(55,(47,56))))),(36,(66,(58,(73,((35,30),(64,34)))))))))))))))))));
	TREE * inapplicable = [&R] (1,(2,(8,((78,(61,(6,67))),((44,32),(72,(((21,(29,((10,(20,42)),(25,48)))),(28,(45,(71,((((49,((63,43),(31,((12,(54,65)),(13,(40,3)))))),((33,26),(75,22))),(18,((77,(7,62)),(68,(((37,(69,(27,((16,(60,74)),((38,(59,76)),((17,(19,4)),(39,(15,23)))))))),(52,57)),(46,9)))))),(((24,50),(14,(41,(55,(56,47))))),(36,(66,(58,(73,((30,35),(34,64)))))))))))),(53,(51,(70,(5,11)))))))))));
	TREE * inapplicable = [&R] (1,(2,(8,((61,(78,(67,6))),((72,(((21,(29,((10,(42,20)),(25,48)))),(28,(45,(((49,((31,((12,(54,65)),(13,(40,3)))),(77,(68,((18,(62,7)),((52,(57,(37,(69,(27,(16,((74,60),((38,(59,76)),((39,(23,15)),(17,(19,4))))))))))),(46,9))))))),((71,((26,33),(22,75))),(63,43))),((24,(50,(14,(41,(55,(47,56)))))),(36,(66,(58,(73,((35,30),(64,34))))))))))),(53,(51,(70,(11,5)))))),(32,44))))));
	TREE * inapplicable = [&R] (1,(2,((8,(61,(78,(67,6)))),((44,32),(72,(((28,((45,(24,((50,(14,(41,(55,(56,47))))),(36,(66,(58,(73,((35,30),(34,64))))))))),(22,(71,((49,((75,(26,33)),((31,((13,(40,3)),(12,(65,54)))),(43,63)))),((68,((18,(62,7)),(77,((52,57),(37,(69,(27,((16,(74,60)),((38,(76,59)),((17,(4,19)),(39,(23,15)))))))))))),(46,9))))))),(21,(29,((25,48),(10,(20,42)))))),((51,53),(70,(5,11)))))))));
	TREE * inapplicable = [&R] (1,(2,(8,((78,(61,(67,6))),((72,(((21,(29,((10,(42,20)),(25,48)))),(28,(((45,24),(50,((14,(41,(55,(47,56)))),(36,(66,(58,(73,((30,35),(34,64))))))))),(22,(75,((71,(49,((31,(((13,(3,40)),(12,(65,54))),(63,43))),(77,(68,(((9,46),(52,(57,(37,(69,(27,(16,((60,74),((38,(76,59)),((39,(23,15)),(17,(19,4)))))))))))),(18,(62,7)))))))),(26,33))))))),(53,(51,(70,(11,5)))))),(32,44))))));
	TREE * inapplicable = [&R] (1,(2,((8,(78,(61,(6,67)))),((72,(((21,(29,((48,25),(10,(42,20))))),(28,(45,(71,(((((33,26),(22,75)),(49,((31,((12,(65,54)),(13,(40,3)))),(43,63)))),(18,((77,(68,((52,(57,(37,(69,(27,(16,((74,60),((38,(59,76)),((17,(4,19)),(39,(15,23))))))))))),(9,46)))),(7,62)))),(((50,24),(14,(41,(55,(56,47))))),(36,(66,(58,(73,((64,34),(30,35)))))))))))),(53,(51,(70,(5,11)))))),(44,32)))));
	TREE * inapplicable = [&R] (1,(2,(8,((61,(78,(67,6))),((72,(((51,53),(70,(11,5))),((28,(((24,45),(50,((14,(41,(55,(56,47)))),(36,(66,(58,(73,((64,34),(35,30))))))))),(22,(71,((75,((33,26),((12,(65,54)),(13,(3,40))))),((49,(31,(43,63))),(77,(68,((18,(62,7)),((52,(57,(37,(69,(27,((16,(60,74)),((38,(76,59)),((39,(23,15)),(17,(19,4)))))))))),(46,9))))))))))),(21,(29,((48,25),(10,(42,20)))))))),(32,44))))));
	TREE * inapplicable = [&R] (1,(2,((8,((61,78),(67,6))),((72,(((21,(29,((25,48),(10,(20,42))))),(28,(45,(71,(((((26,33),(75,22)),(49,((31,((12,(54,65)),(13,(3,40)))),(63,43)))),(18,((68,(77,((52,(37,(57,(69,(27,((60,74),((16,(38,(59,76))),((39,(23,15)),(17,(19,4)))))))))),(46,9)))),(62,7)))),((24,(50,(14,(41,(55,(47,56)))))),(36,(66,(58,(73,((34,64),(35,30)))))))))))),(53,(51,(70,(11,5)))))),(32,44)))));
	TREE * inapplicable = [&R] (1,(2,((8,(61,(78,(67,6)))),((32,44),(72,(((51,53),(70,(5,11))),((28,(45,((((50,24),(14,(41,(55,(47,56))))),(36,(66,(58,(73,((35,30),(64,34))))))),(((43,63),(71,((22,75),(33,26)))),(49,((77,(68,(((37,(52,(57,(69,(27,((16,(74,60)),((38,(76,59)),((39,(23,15)),(17,(19,4)))))))))),(46,9)),(18,(7,62))))),(31,((12,(54,65)),(13,(40,3)))))))))),(21,(29,((10,(42,20)),(25,48)))))))))));
	TREE * inapplicable = [&R] (1,(2,(8,(((78,61),(6,67)),((44,32),(72,(((51,53),(70,(5,11))),((28,((45,(24,((50,(14,(41,(55,(56,47))))),(36,(66,(58,(73,((30,35),(64,34))))))))),((22,71),(((68,((18,(62,7)),(77,((57,52),(37,(69,(27,((16,(74,60)),((38,(59,76)),((39,(15,23)),(17,(19,4)))))))))))),(9,46)),(49,((75,(33,26)),((31,((12,(54,65)),(13,(40,3)))),(63,43)))))))),(21,(29,((48,25),(10,(42,20)))))))))))));
	TREE * inapplicable = [&R] (1,(2,(8,(((61,78),(67,6)),((72,(((21,(29,((48,25),(10,(42,20))))),(28,((45,(22,(75,((71,(49,((31,(((12,(65,54)),(13,(40,3))),(43,63))),(77,(68,((18,(7,62)),((9,46),(52,(57,(37,(69,(27,(((38,(59,76)),((39,(15,23)),(17,(19,4)))),(16,(60,74))))))))))))))),(33,26))))),(24,((50,(14,(41,(55,(56,47))))),(36,(66,(58,(73,((30,35),(34,64))))))))))),(53,(51,(70,(11,5)))))),(44,32))))));
	TREE * inapplicable = [&R] (1,(2,((8,((78,61),(6,67))),((72,(((21,(29,((25,48),(10,(42,20))))),(28,((45,(24,(50,((14,(41,(55,(47,56)))),(36,(66,(58,(73,((35,30),(34,64)))))))))),(22,(75,((33,26),(71,(49,((31,(((12,(54,65)),(13,(3,40))),(43,63))),(77,(68,((18,(7,62)),((52,(37,(57,(69,(27,(16,(((38,(76,59)),((39,(15,23)),(17,(4,19)))),(74,60)))))))),(9,46)))))))))))))),(53,(51,(70,(11,5)))))),(44,32)))));
	TREE * inapplicable = [&R] (1,(2,((8,(61,(78,(67,6)))),((32,44),(72,(((53,51),(70,(5,11))),((21,(29,((10,(42,20)),(25,48)))),(28,((45,(24,(50,((14,(41,(55,(47,56)))),(36,(66,(58,(73,((34,64),(30,35)))))))))),(22,(75,((33,26),(71,(49,((31,(((13,(40,3)),(12,(65,54))),(63,43))),(77,(68,(((52,(37,(57,(69,(27,(16,((74,60),(((17,(19,4)),(39,(23,15))),(38,(76,59)))))))))),(46,9)),(18,(7,62))))))))))))))))))));
	TREE * inapplicable = [&R] (1,(2,(8,((61,(78,(67,6))),((32,44),(72,(((21,(29,((10,(42,20)),(25,48)))),(28,(45,(71,((((49,((63,43),(31,((13,(3,40)),(12,(65,54)))))),((22,75),(26,33))),(18,((77,(7,62)),(68,((52,(37,(57,(69,(27,(16,((60,74),((38,(76,59)),((17,(4,19)),(39,(23,15))))))))))),(9,46)))))),((24,(50,(14,(41,(55,(47,56)))))),(36,(66,(58,(73,((30,35),(34,64)))))))))))),((51,53),(70,(11,5))))))))));
	TREE * inapplicable = [&R] (1,(2,(8,(((61,78),(67,6)),((44,32),(72,(((21,(29,((10,(42,20)),(48,25)))),(28,(45,(71,((((49,((43,63),(31,((12,(65,54)),(13,(3,40)))))),((26,33),(22,75))),((68,(77,(62,(((52,57),(37,(69,(27,(16,((60,74),((38,(59,76)),((17,(4,19)),(39,(23,15)))))))))),(9,46))))),(18,7))),(50,((24,(14,(41,(55,(47,56))))),(36,(66,(58,(73,((35,30),(64,34))))))))))))),((53,51),(70,(11,5))))))))));
	TREE * inapplicable = [&R] (1,(2,(8,((61,(78,(6,67))),((32,44),(72,(((21,(29,((10,(42,20)),(25,48)))),(28,(45,(71,(((((26,33),(75,22)),(49,((31,((12,(65,54)),(13,(3,40)))),(43,63)))),(((9,46),((52,57),(37,(69,(27,((((39,(15,23)),(17,(4,19))),(16,(38,(76,59)))),(60,74))))))),(68,(18,(62,(77,7)))))),(50,((24,(14,(41,(55,(47,56))))),(36,(66,(58,(73,((30,35),(64,34))))))))))))),((51,53),(70,(11,5))))))))));
	TREE * inapplicable = [&R] (1,(2,(((8,61),(78,(67,6))),((32,44),(72,(((28,(45,((24,((50,(14,(41,(55,(47,56))))),(36,(66,(58,(73,((30,35),(64,34)))))))),(22,(71,((75,((26,33),((12,(65,54)),(13,(3,40))))),((49,(31,(43,63))),(77,(68,(((46,9),(52,(37,(57,(69,(27,((((39,(23,15)),(17,(19,4))),(16,(38,(76,59)))),(74,60)))))))),(18,(7,62)))))))))))),(21,(29,((48,25),(10,(20,42)))))),((53,51),(70,(5,11)))))))));
	TREE * inapplicable = [&R] (1,(2,(8,((61,(78,(67,6))),((44,32),(72,(((28,(45,(71,((50,((24,(14,(41,(55,(47,56))))),(36,(66,(58,(73,((30,35),(34,64)))))))),(((68,((77,((37,(69,(27,(16,((60,74),((38,(76,59)),((39,(15,23)),(17,(4,19))))))))),(57,52))),(18,(62,7)))),(9,46)),(((26,33),(75,22)),(49,((43,63),(31,((12,(65,54)),(13,(40,3)))))))))))),(21,(29,((48,25),(10,(42,20)))))),((51,53),(70,(5,11))))))))));
	TREE * inapplicable = [&R] (1,(2,((8,(61,(78,(67,6)))),((72,(((28,((24,(45,(50,((14,(41,(55,(56,47)))),(36,(66,(58,(73,((30,35),(64,34)))))))))),(22,(75,((71,(49,((31,(((13,(40,3)),(12,(65,54))),(63,43))),(77,(68,((18,(7,62)),((52,(57,(37,(69,(27,((60,74),((16,(38,(76,59))),((39,(23,15)),(17,(19,4)))))))))),(46,9)))))))),(26,33)))))),(21,(29,((10,(42,20)),(25,48))))),((53,51),(70,(5,11))))),(32,44)))));
	TREE * inapplicable = [&R] (1,(2,(8,(((78,61),(6,67)),((44,32),(72,((53,(51,(70,(5,11)))),((21,(29,((10,(20,42)),(48,25)))),(28,(45,((24,((50,(14,(41,(55,(47,56))))),(36,(66,(58,(73,((64,34),(35,30)))))))),(22,(71,((75,(((12,(54,65)),(13,(40,3))),(33,26))),((49,(31,(43,63))),(77,(68,((((57,52),(37,(69,(27,((74,60),((16,(38,(76,59))),((17,(19,4)),(39,(15,23))))))))),(9,46)),(18,(62,7))))))))))))))))))));
	TREE * inapplicable = [&R] (1,(2,((8,(78,(61,(67,6)))),((72,((53,(51,(70,(5,11)))),((21,(29,((48,25),(10,(20,42))))),(28,(45,(71,(((((26,33),(75,22)),(49,((31,((12,(54,65)),(13,(3,40)))),(63,43)))),(18,((68,((46,9),((37,(69,(27,(((16,(38,(59,76))),((17,(19,4)),(39,(23,15)))),(60,74))))),(57,52)))),(77,(62,7))))),((50,(24,(14,(41,(55,(47,56)))))),(36,(66,(58,(73,((35,30),(64,34)))))))))))))),(32,44)))));
	TREE * inapplicable = [&R] (1,(2,(8,((78,(61,(6,67))),((72,(((28,((24,(45,(50,((14,(41,(55,(56,47)))),(36,(66,(58,(73,((30,35),(64,34)))))))))),((71,22),(((9,46),(68,((18,(7,62)),(77,(52,(37,(57,(69,(27,(16,((74,60),(((17,(19,4)),(39,(15,23))),(38,(59,76)))))))))))))),(49,((75,(33,26)),((63,43),(31,((12,(65,54)),(13,(40,3))))))))))),(21,(29,((48,25),(10,(42,20)))))),((51,53),(70,(11,5))))),(44,32))))));
	TREE * inapplicable = [&R] (1,(2,((8,((78,61),(6,67))),((32,44),(72,(((28,(45,(71,(((50,(24,(14,(41,(55,(56,47)))))),(36,(66,(58,(73,((35,30),(64,34))))))),(((68,((18,(7,62)),(77,(37,(52,(57,(69,(27,(16,((((39,(23,15)),(17,(19,4))),(38,(59,76))),(74,60))))))))))),(46,9)),(((33,26),(22,75)),(49,((63,43),(31,((13,(3,40)),(12,(54,65)))))))))))),(21,(29,((10,(20,42)),(25,48))))),(53,(51,(70,(11,5))))))))));
END;
