#NEXUS
BEGIN DATA;
  DIMENSIONS NTAX=20 NCHAR=93;
	FORMAT DATATYPE=Standard SYMBOLS= "0129" MISSING=? GAP= -;
  MATRIX                               
    Psittacosaurus_spp                 0--0--00100-01000-0000----0--00000000000-0000000000000000000000--00000000000000-0000000000000
    Thescelosaurus_neglectus           0--0--00100-00000-0000----0--00000000000-01000000000000?00000000000000000110000-0000000000000
    Colepiocephale_lambei              100101200110101010?20???????0?????????????????????????????????1??????????????????????????????
    Gravitholus_albertae               10010020011010?010?2????????0???0?0??10???????????????????????1??????????????????????????????
    Stegoceras_validum                 110100200110101?1000?1000010011001001100-101011110011011111001111?1?111?111111101010011?11?11
    Texacephale_langstoni              1101012011?01?1?10??0???????0?????????????????????????????????1??????????????????????????????
    Hanssuesia_sternbergi              1101111011101010101010----100110010??100-101??????????????????1??????????????????????????????
    Sphaerotholus_brevis               110101102110101?1101110010?01??001???1????????????????????????1??????????????????????????????
    Sphaerotholus_goodwini             110111002110111011111100111111100100?10????10?1???????????????1??????????????????????????????
    Sphaerotholus_edmontonense         11011100211?111111011???????1???01???1????????????????????????1??????????????????????????????
    Sphaerotholus_buchholtzae          110111002111111111011100111111100100?10????10?????????????????1??????????????????????????????
    Alaskacephale_gangloffi            1??????????????????1111020?0??10?1???1????????????????????????1??????????????????????????????
    Pachycephalosaurus_wyomingensis    1111111111111010110111102-1011100111110111110?11??????1111????1?????????????????1????????????
    Prenocephale_prenes                1101111021111?101?1111001?10111001111111010111111111111111????11?????1??????1211111111111111?
    Tylocephale_gilmorei               1101?110?1????101?1??1001010?1?00111110??????1?1?11???????????1??????????????????????????????
    Homalocephale_calathocercos        0--0--00?11???101-1001001010-1100111111????11111111???01-1????1???1111?1????121111111111?1?11
    Goyocephale_lattimorei             0--0--0021?100101-100100?0??-1100?1??111000???1????111?????111111?11?1?1?11?1111111100???????
    Wannanosaurus_yansiensis           0--0--???1??????1-?00100???0-??00111010??????????1????????11111?????????111?????????????????1
    Stygimoloch_spinifer               111101111111111-111011112-10111111???1?????10?????????1???????1??????1????????????????????1??
    Dracorex_hogwartsi                 0--0--0111?1?11-1-1001112-10-111111011?110110?11?011111111????1??11??-???????????????????????
  ;
END;


BEGIN TAXA;
	DIMENSIONS NTAX = 20;
	TAXLABELS
		Psittacosaurus_spp
		Thescelosaurus_neglectus
		Colepiocephale_lambei
		Gravitholus_albertae
		Stegoceras_validum
		Texacephale_langstoni
		Hanssuesia_sternbergi
		Sphaerotholus_brevis
		Sphaerotholus_goodwini
		Sphaerotholus_edmontonense
		Sphaerotholus_buchholtzae
		Alaskacephale_gangloffi
		Pachycephalosaurus_wyomingensis
		Prenocephale_prenes
		Tylocephale_gilmorei
		Homalocephale_calathocercos
		Goyocephale_lattimorei
		Wannanosaurus_yansiensis
		Stygimoloch_spinifer
		Dracorex_hogwartsi
	;
END;
BEGIN TREES;
	TRANSLATE
		1	Psittacosaurus_spp,
		2	Thescelosaurus_neglectus,
		3	Colepiocephale_lambei,
		4	Gravitholus_albertae,
		5	Stegoceras_validum,
		6	Texacephale_langstoni,
		7	Hanssuesia_sternbergi,
		8	Sphaerotholus_brevis,
		9	Sphaerotholus_goodwini,
		10	Sphaerotholus_edmontonense,
		11	Sphaerotholus_buchholtzae,
		12	Alaskacephale_gangloffi,
		13	Pachycephalosaurus_wyomingensis,
		14	Prenocephale_prenes,
		15	Tylocephale_gilmorei,
		16	Homalocephale_calathocercos,
		17	Goyocephale_lattimorei,
		18	Wannanosaurus_yansiensis,
		19	Stygimoloch_spinifer,
		20	Dracorex_hogwartsi
	;
	TREE * ambiguous = [&R] (1,(2,((5,(3,4)),(6,(7,((8,(((12,13),(19,20)),(15,(14,(18,(16,17)))))),(9,(10,11))))))));
	TREE * ambiguous = [&R] (1,(2,(7,((6,(5,(3,4))),((8,(((12,13),(19,20)),((14,15),(18,(16,17))))),(9,(10,11)))))));
	TREE * ambiguous = [&R] (1,(2,((6,(5,(3,4))),(7,((8,(9,(10,11))),((13,(12,(19,20))),(15,(14,(17,(16,18))))))))));
	TREE * ambiguous = [&R] (1,(2,(6,((5,(3,4)),(7,((8,((13,(12,(19,20))),(14,(15,(18,(16,17)))))),(9,(10,11))))))));
	TREE * ambiguous = [&R] (1,(2,(7,((6,(5,(3,4))),((8,(9,(10,11))),((13,(12,(19,20))),(15,(14,(18,(16,17))))))))));
	TREE * ambiguous = [&R] (1,(2,(7,((6,(5,(3,4))),((8,(9,(10,11))),((13,(12,(19,20))),(15,(14,(16,(17,18))))))))));
	TREE * extraState = [&R] (1,(2,(7,((6,(5,(3,4))),((8,(9,(10,11))),(((12,13),(19,20)),(15,(14,(18,(16,17))))))))));
	TREE * extraState = [&R] (1,(2,(7,((6,(5,(3,4))),((8,(9,(10,11))),((13,(12,(19,20))),(14,(15,(18,(16,17))))))))));
	TREE * extraState = [&R] (1,(2,(7,((6,(5,(3,4))),(8,((9,(10,11)),((13,(12,(19,20))),(15,(14,(17,(16,18)))))))))));
	TREE * inapplicable = [&R] (1,(2,((6,(7,(8,(((15,(14,(18,(16,17)))),(13,(12,(20,19)))),(9,(11,10)))))),(5,(4,3)))));
	TREE * inapplicable = [&R] (1,(2,((6,(7,((8,(9,(11,10))),((13,(12,(19,20))),(15,(14,(17,(18,16)))))))),(5,(4,3)))));
	TREE * inapplicable = [&R] (1,(2,((6,(5,(3,4))),(7,((8,(9,(11,10))),((15,(14,(17,(16,18)))),((13,12),(20,19))))))));
	TREE * inapplicable = [&R] (1,(2,(7,((6,(5,(4,3))),((8,(((14,15),(18,(16,17))),(12,(13,(20,19))))),(9,(10,11)))))));
	TREE * inapplicable = [&R] (1,(2,(7,(((8,(9,(10,11))),((15,(14,(17,(18,16)))),((12,13),(20,19)))),(6,(5,(4,3)))))));
	TREE * inapplicable = [&R] (1,(2,((6,(7,((8,(9,(11,10))),((15,(14,(18,(17,16)))),(12,(13,(19,20))))))),(5,(4,3)))));
	TREE * inapplicable = [&R] (1,(2,(7,((8,((9,(11,10)),((15,(14,(18,(16,17)))),(13,(12,(20,19)))))),(6,(5,(3,4)))))));
	TREE * inapplicable = [&R] (1,(2,(7,((6,(5,(4,3))),((8,(9,(11,10))),((15,(14,(17,(18,16)))),(12,(13,(19,20)))))))));
	TREE * inapplicable = [&R] (1,(2,(6,((5,(3,4)),(7,(8,(((15,(14,(18,(17,16)))),((13,12),(19,20))),(9,(10,11)))))))));
	TREE * inapplicable = [&R] (1,(2,(6,((5,(4,3)),(7,((8,((15,(14,(18,(17,16)))),((13,12),(20,19)))),(9,(11,10))))))));
	TREE * inapplicable = [&R] (1,(2,(6,((7,(8,(((12,(13,(20,19))),(15,(14,(17,(18,16))))),(9,(10,11))))),(5,(4,3))))));
	TREE * inapplicable = [&R] (1,(2,(7,(((8,(9,(10,11))),((15,(14,(17,(18,16)))),(13,(12,(20,19))))),(6,(5,(3,4)))))));
	TREE * inapplicable = [&R] (1,(2,((6,(7,((8,(9,(11,10))),((13,(12,(19,20))),(14,(15,(18,(17,16)))))))),(5,(3,4)))));
	TREE * inapplicable = [&R] (1,(2,(6,((5,(4,3)),(7,((8,(((15,14),(18,(16,17))),((13,12),(19,20)))),(9,(10,11))))))));
	TREE * inapplicable = [&R] (1,(2,((6,(7,((8,(9,(10,11))),(((13,12),(20,19)),(15,(14,(18,(17,16)))))))),(5,(3,4)))));
	TREE * inapplicable = [&R] (1,(2,((6,(7,((8,((12,(13,(19,20))),(15,(14,(18,(17,16)))))),(9,(10,11))))),(5,(3,4)))));
	TREE * inapplicable = [&R] (1,(2,((6,(7,((8,(9,(11,10))),((15,(14,(16,(17,18)))),(12,(13,(19,20))))))),(5,(4,3)))));
	TREE * inapplicable = [&R] (1,(2,(6,((7,((8,(9,(10,11))),((13,(12,(19,20))),((15,14),(18,(16,17)))))),(5,(4,3))))));
	TREE * inapplicable = [&R] (1,(2,((6,(7,(8,((9,(10,11)),((15,(14,(17,(16,18)))),(13,(12,(20,19)))))))),(5,(3,4)))));
	TREE * inapplicable = [&R] (1,(2,(7,(((8,(((15,14),(18,(17,16))),((12,13),(19,20)))),(9,(10,11))),(6,(5,(4,3)))))));
	TREE * inapplicable = [&R] (1,(2,((6,(7,((8,(9,(11,10))),(((15,14),(18,(16,17))),((13,12),(19,20)))))),(5,(4,3)))));
	TREE * inapplicable = [&R] (1,(2,(7,((6,(5,(4,3))),((8,(9,(10,11))),((15,(14,(18,(17,16)))),(13,(12,(19,20)))))))));
	TREE * inapplicable = [&R] (1,(2,((6,(5,(3,4))),(7,((8,(9,(10,11))),((14,(15,(18,(16,17)))),(13,(12,(20,19)))))))));
	TREE * inapplicable = [&R] (1,(2,((6,(7,((8,(((13,12),(19,20)),(14,(15,(18,(17,16)))))),(9,(10,11))))),(5,(4,3)))));
	TREE * inapplicable = [&R] (1,(2,(6,((5,(3,4)),(7,((8,(9,(11,10))),((15,(14,(18,(17,16)))),((12,13),(19,20)))))))));
	TREE * inapplicable = [&R] (1,(2,(6,((7,(8,((9,(10,11)),((12,(13,(19,20))),(15,(14,(16,(17,18)))))))),(5,(4,3))))));
	TREE * inapplicable = [&R] (1,(2,((6,(5,(4,3))),(7,((8,(9,(11,10))),((15,(14,(18,(16,17)))),(12,(13,(19,20)))))))));
	TREE * inapplicable = [&R] (1,(2,(7,((8,((9,(10,11)),((15,(14,(16,(17,18)))),(13,(12,(19,20)))))),(6,(5,(4,3)))))));
	TREE * inapplicable = [&R] (1,(2,(7,((6,(5,(4,3))),(8,(((14,(15,(18,(17,16)))),(13,(12,(19,20)))),(9,(11,10))))))));
	TREE * inapplicable = [&R] (1,(2,((7,(8,((9,(10,11)),(((15,14),(18,(16,17))),(12,(13,(20,19))))))),(6,(5,(3,4))))));
	TREE * inapplicable = [&R] (1,(2,((6,(5,(4,3))),(7,(8,((9,(11,10)),((15,(14,(18,(16,17)))),((13,12),(19,20)))))))));
	TREE * inapplicable = [&R] (1,(2,(7,((8,((((14,15),(18,(16,17))),((12,13),(19,20))),(9,(11,10)))),(6,(5,(3,4)))))));
	TREE * inapplicable = [&R] (1,(2,(6,((7,((8,((12,(13,(20,19))),(15,(14,(16,(17,18)))))),(9,(11,10)))),(5,(3,4))))));
	TREE * inapplicable = [&R] (1,(2,(6,((7,((8,(9,(10,11))),(((14,15),(18,(17,16))),((12,13),(20,19))))),(5,(3,4))))));
	TREE * inapplicable = [&R] (1,(2,((6,(7,(8,(((15,(14,(17,(16,18)))),((12,13),(20,19))),(9,(11,10)))))),(5,(4,3)))));
	TREE * inapplicable = [&R] (1,(2,(7,((8,((9,(10,11)),((14,(15,(18,(17,16)))),(12,(13,(19,20)))))),(6,(5,(3,4)))))));
	TREE * inapplicable = [&R] (1,(2,((6,(7,((8,((14,(15,(18,(17,16)))),(13,(12,(19,20))))),(9,(11,10))))),(5,(3,4)))));
	TREE * inapplicable = [&R] (1,(2,((7,((8,(9,(11,10))),((14,(15,(18,(17,16)))),((12,13),(19,20))))),(6,(5,(4,3))))));
	TREE * inapplicable = [&R] (1,(2,((7,((8,(9,(11,10))),((13,(12,(20,19))),(15,(14,(16,(18,17))))))),(6,(5,(3,4))))));
	TREE * inapplicable = [&R] (1,(2,(6,((7,((8,(9,(10,11))),(((14,15),(18,(17,16))),(12,(13,(20,19)))))),(5,(3,4))))));
	TREE * inapplicable = [&R] (1,(2,(6,((5,(4,3)),(7,((8,(9,(10,11))),((14,(15,(18,(17,16)))),(12,(13,(20,19))))))))));
	TREE * inapplicable = [&R] (1,(2,(6,((5,(3,4)),(7,(8,(((14,(15,(18,(17,16)))),(13,(12,(20,19)))),(9,(10,11)))))))));
	TREE * inapplicable = [&R] (1,(2,((6,(5,(4,3))),(7,((8,(9,(10,11))),((15,(14,(18,(17,16)))),(13,(12,(19,20)))))))));
	TREE * inapplicable = [&R] (1,(2,(6,((5,(3,4)),(7,(8,((((14,15),(18,(16,17))),((12,13),(19,20))),(9,(11,10)))))))));
	TREE * inapplicable = [&R] (1,(2,(6,((5,(3,4)),(7,((8,((14,(15,(18,(17,16)))),(12,(13,(20,19))))),(9,(10,11))))))));
	TREE * inapplicable = [&R] (1,(2,(6,((7,(8,((((14,15),(18,(17,16))),(12,(13,(19,20)))),(9,(10,11))))),(5,(4,3))))));
	TREE * inapplicable = [&R] (1,(2,(7,(((8,(9,(11,10))),(((15,14),(18,(17,16))),((13,12),(19,20)))),(6,(5,(4,3)))))));
	TREE * inapplicable = [&R] (1,(2,((6,(7,((8,(9,(11,10))),((13,(12,(20,19))),((15,14),(18,(17,16))))))),(5,(3,4)))));
	TREE * inapplicable = [&R] (1,(2,((6,(7,((8,(9,(11,10))),((13,(12,(20,19))),(15,(14,(16,(17,18)))))))),(5,(3,4)))));
	TREE * inapplicable = [&R] (1,(2,(6,((7,((8,(9,(10,11))),((15,(14,(18,(16,17)))),(13,(12,(19,20)))))),(5,(4,3))))));
END;
