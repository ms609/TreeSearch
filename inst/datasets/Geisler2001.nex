#NEXUS
BEGIN data;
  DIMENSIONS NTAX=68 NCHAR=186;
	FORMAT DATATYPE=Standard SYMBOLS= "01234" MISSING=? GAP= -;
	MATRIX
    Agriochoerus                  10000?000100010110001200110202001111002?12101021001000101111001010111000000111110020100?0100001111200000010?221000000110010112110?110010002021?0200001021002032011101001120000010010??????
    Ambulocetus                   ???????????11???10112101?1?00?10????????????????00??00??3???00??20???1?00101000??1??????????110?0?0??11120110?2001?00???00100???002??????1200100?0?0?0101??11???????????1??0?0110011??????
    Amphimeryx                    ?0?0??00??????001??0220011?20200?03100??0??01001????00?111?1000?200????00???1?11???????????000111??00000010120100001000001010?????????????????????????????????????????????????????????????
    Andrewsarchus                 ??????00????????????????????00?02??30?3400011??01???001131??00?120?1100?0???1?0100???001000?00?0??000?0?0010001000?10000??000?????????????????????????????????????????????????????????????
    Arctocyon                     ?0?0001000000000????????????001030?2001100011011?100000011110012201110000???100100?00?010?00000000000020001000000000000001000??100?0?0000000001???????000000101010010000?0?2??010001??????
    Balaenoptera                  01111-2-111213111011200301101110012301140000022100?10101??3100?2?0020?2000100001??????-????????0?????????--?-?-00???????0??00000??021110?020011?201?1?----???????????????0-----000??110011
    Basilosaurus                  ?1?11-111112131110??2??2????120020230122000002100???01100?1????1201?11??010?101101001002011011000??121312?10022000??000?00?00000020211100120??012?????2??20?????????????22????0000????????
    Bos_taurus                    11011-00011?010011001403110202?0012100?30200100100001021311300112000001000220211101?10001-0100001120001001112210000001000101111100311111112?2111201313221112022101111101121313211110003111
    Bunomeryx                     ??????00??0???00100?141?01?20??011??0?030??000010?10001?1??000002?0?000?????1?1100?0??02??0000011?2000100000100000010000010?0?????????????2??11020?1?2?????20220111?10???0?????00010??????
    Cainotherium                  1000??00??000000110024101101011?2230--020?0000111010012020?001101001000110311111001010020000000?11200010010122000001000001010?????????????????????????????????????????????????????????????
    Camelus                       11011-00010001011100240011110110122200??000000110011002121110021000110210002020?0?1000?01-000000112000100011221000000000010110121031?110002221102?1313?21??2032101101001121313211011001011
    Canis                         ?1011-00010001001000120011010100112200?2000010101000001000100000201101010011100100100001001000100010002?21100?000000?00?010000010011011000100010200000021002000010000000121110?10000000000
    Cebochoerus                   ?1????2-11????001??0121?1102010021??110200000020???100111010000?200?00?00???111?00??1?0?0000000?01100010001001100001000001010?????????????????????????????????????????????????????????????
    Delphinapterus                01111-2-111113111010111301101101-10111310000100000010100?0300011?012002001000011?0?0???????????????????????????????????????000000-021110002001??100010----0-0-0------000-0-----000--1100??
    Diacodexis_pakistanensis      ?0?0??00010??1??1000?????1??00??11?1001200?010110001001?2?11?0102?0??0010012110100100?02000000010?1000100010001000000000010100?1001????0?020?11010?1?1?110?20220?1???00012????110000??????
    Dissacus_navajovious          ??0???10??01????????????????????????????000100?0??????00111?0?1?2???01??0???1001?????00?000000100?20102020000220001000010?10000?00??00000??02???????????1??111101000000????????1??????????
    Dissacus_praenuntius          ?0001-???0010?????????????????????220032000101?????????????????????????00?01?00??????0??00?0001?0?2010202??0?22000100001021?0???????????0?????????????????????????????????????????????????
    Elomeryx_armatus              01011-110111010010000200110201002130--321010001000?0011021330021210110001011120100???0020011000111100000010120100001100001010001?0?101101120211020???1??10?2?320?1??1000111111??0012??????
    Entelodontidae                10?11-2-1110010110000200110200202130--3400000010000000202113001120010000100010020000000200100101011000100010000000010000010000010011111110222110211313021002032011111001121313110010??????
    Eoconodon                     ??00??00?0?0?1?1????????????0?1021?20022000100101???000021????10101?10010001?0010??00001000000000?00002001100100000000000?0?0????????0000??????????????????11???100???????????????????????
    Eotylopus_reedi               ????????????????110?231??1????1111??00?30?00???0????01?02??00020001??0000?2212010000000?0000000111100000001120100000000000011???????11100?22111021?2?2??1??2022?0110100?1213131100100?????
    Equus                         01011-0?1011000111010410010201100121000200111121111100013112002100?1100000210212001?20-10??1001010?000100111200110010100110111110031111101212110101313201212020010010000021313220011000000
    Georgiacetus                  11?11-1111??12011011211111101200302301230000021000??01002?1?00?1201?011001000011010???02000?1111????1?112010022001?0000100100??0020???????????????????????????????????????????????????????
    Gobiohyus                     ?0?11-00?1??01?????????????????02111000200?000??00??01?02?110010201?000?00?11?01???100020?0000011?2000000000001000011000010???????????????????????????????????????????????????????????????
    Hapalodectes_hetangensis      ?000??0010??00?0????????????010101?100000001101011110021001000?0200101000?01?00100?0?0?1000?001?0?2010?12011021000100001001?0?????????????????????????????????????????????????????????????
    Hapalodectes_leptognathus     ??????????????????????????????????????00????????????????????????2???01??????1?01?????00?0??????0???010202011021000100001001???????????0?0?????????????????????????????????????????????????
    Harpagolestes                 0????????0????0?100001?011?2001030120034000110101???00102111001111111?00??000001?0?00?011-1?0010??2?213?20110220001????102100????????10001202??????????0??????????0????????????1??????????
    Heptodon                      -1?11-00?01101100-00--?-00-?0110?0?2??01001010211???011021?000102?00?0000011110?001000011-0100111020000000000??110011000110000?10???01110020111010?2022010?202101000000002?113?10?11??????
    Heteromeryx_dispar            ???????????????????????????????????????????????1????0?212??????02?1??0??????????????????????0001????0?1???102?000???????????????????1110002?21102???1???1??20?2001??1001???????10010??????
    Hexaprotodon                  0?????2-??110?01110010031??201100132013300001110?01100101032000110110000101110020030011100010001110000100-10021000010000020000010031011011222110201110121?010320111110001210100100121?20??
    Hippopotamus                  0101??2-??110?0111001003110201100032013300001110001101?010330001?011000010100002003001111-10000?011000100-101210000100000?00001100310110012211102011112210020220111110001211100100121120??
    Homacodon_vagans              ?00?010001??01?1????????????0?0??2?10001001010???0?00??1210???10200?000??0????0?0?????02??000?010?1000000000000000011000010?1??????????????????????????????10120?1????????????????????????
    Hyopsodus                     ?0?00?00000101?0????????????011011?100120000101110??0000111100101?0?000?00??12020000000100010001100000100010?00000010000010000?1?020?000000011?010?1?10000001000?01?000000?0?0?1?010??????
    Hypertragulus                 ?0011-000100?1?01???111001?2010012010012021010110??0000011010100200?000000211111??1?1002000000011?2000?000111210000000000200001????101101022211020?2?21?12020321?1111101101212110010??????
    Hyracotherium                 ?1?11-0010?101?1?????????0-?0?1021?20?120000101111?00110111000012?0?000000111102001?00020001001110100010001000011001100011000001003101101020111?1?011220100202001000000002?1???10011??????
    Lama                          1?0???00010?0?0?1100240011120210123100??0000101100000121211101110?01?02?00220?0?0?1000?01-?0000?112000100??122?0000000000101111210311110002221102?13131211120321011110011213??2110100010??
    Leptictidae                   -0000000010000000-00--?-00-0000011210001000000?110000001111000200000000100????01001000010000001100200020010001000001001101000??1?0?1?000010010??1?????2?100110?00?00000001?0??1?0000??????
    Leptomeryx                    10011-0011000101100001101112020012210002021010110010002011110100200??0000002121101201000000100001120001000112210000000000?011011003?11101020211120121222111203210111110112131?211010??????
    Leptoreodon                   ??????00?????????????????????????1??????0??0??11????0??02???0??12????00?????1101001100021-?100011?2000000100221000000000010????????????00?????????????121??1??2?????10????????????????????
    Meniscotherium                ?0?0??00100100?1????????????0??011?1000100001021111?0100111?00100011?0000012021200100001000000?110?00010010120?01000010011000001002000000120111010?1?120100010001000000001?010010011??????
    Merycoidodon                  11011-00010001011000010011?2020021010013121010110010002011021000200110000011111100101002010100011120001001002210000001000101021?002?0110002021?02011100?100103201111100112111101?010??????
    Mesohippus                    ?1011-01101101?11?00021311020000?1210101000111111?1000001?111011?100000000121212001010020001001?10200010011020011001100011011011003111101?202110100213201002021010000000021213?10011??????
    Mesonyx                       ?00001???01101?110000??0?1?20?10311200340001000011??000?2?1?00102?1110000???1011?00000010??000100021113?201102200010000102100011?01101000120210020?1?0101001021010000000120010?10011??????
    Mixtotherium                  ?0?1??11??????10100?120011?20010201?1104100000200??0011001?100002001000?0??010120010000200?100111?200000010022100000000001010?????????????????????????????????????????????????????????????
    Mongolian_Dissacus            ??100110?00?01?110???????1??000?????0022000100??11??00?0111?000?201?010??0??1?0100100001000000100?20102020000220001000010210000??0??00000?202?0020?0?0101001111010000000?2?0?0?100????????
    Odocoileus                    10011-01011001011000011311020101022200?3021010010010202?2102110121000000002201011?1?10001-01000?1120001000112210000000000201111?00211110112121112?131322111?022101121101121313221110??31??
    Orycteropus_afer              -0?0002-001000000-00--?-00-?000000010001000000110000000030120021000100010022020?1??????01-????????????1????????????????????0000100300000010000001100101011011000100000000100100100110?????
    Ovis                          10011-00011001?11000021301020101022100?302001001001011213112101120000000002101111?1?10001-0100001120001001112210000000000101?11100211111102121112?1313121112032101121101121313221012003111
    Pachyaena_gigantea            ????0????00?????100????0?1?2??0??0?3003?000100??????000?210?001?21??100000000001?0?0?00?0?1000100?21112120000210001000010210000??0?0?10001202100200010???0?11210?0????????????????11??????
    Pachyaena_ossifraga           ??0??????0?1????????????????0?1???2?0?34000100?01??????021110??0211110?00?01100100?00001001000100?221222200002100010000102100001001?01000120210020?0?02010?112101000000012?0?0010011??????
    Pakicetus                     ???11-111101?2001010100111010000312211330000001?01???0??????????????0???0000?001??????02???01101000?2?1020100?200100???100110?????????????????????????????????????????????????????????????
    Perchoerus                    0101??1111????00100?120011010?202030--2300100011000?0010311?00212001000?10?1110200?101120?100011111000000010000000011?00010?0???????0??????2??????????????????????????????????????????????
    Phenacodus                    ?1?11-0010??00?01????????0-000?0?1?100320000101110?00000?11100100110100000020?010010000101010011100000101?1?200000010100010000110?2?00000020111?10001?201001100000?00000010011010011??????
    Physeter                      01111-2-111?13111010211301101210--2101?400001???00010100?03000???0120020010000011?-?--??0--01-0?0--1-1-1-??1?-?11--0000-0--00-000-02111000200???0?0010----0-0-0------000-0-----000--1100??
    Poebrotherium                 11?11-000100010011002?0011?10110023100320100000100?101212011012101011001001211010010000200100000112000100011221000000000000110121021111010222110211313121212032101101001121313210010??????
    Protoceras_celer              11011-00010001?1100?020011?20110113100?30210101100??0121311?00?111100020001101011?11100200?1000?11200010001122?0000000000101101?00?11110102021?02011112?1102032001101001111313110010??????
    Protocetus                    11?11-11????12011011211111001200?0220113000002?00??001002???00?1?01?011????0???????0??01??0?110???1?1?1??01102200???????0??00000010???????????????????????????????????????????????????????
    Rattus_norvegicus             1100000101001100100110?3011002?0010100?020001001100100000010??30?1000000000101010?3????01-???????0?00020??11??1110?11??0110000010010001000000000201010201201000011??000000001000000000?0??
    Remingtonocetus               ?1?11-11?1?112?11?11?1111110120031???1?10000021000??00??3??300322012010????????2?1??????????1?????????0??01?02200??0000?0?100001002???????????????????2?0?????????????????????????????????
    Sinonyx                       00???????0???1001000?10001?20010301200230001?01?11?0000021010010211?00000001000100000001000000?00?21?021200002200010000102100?????????????????????????????????????????????????????????????
    Sus_scrofa                    01011-2-1100010111002200010202200010--34?210111000000010310310320101000000011202003001121-100010111000100-11?00000011000010100110021111111202110211111121002032001101000121111020012000011
    Synoplotherium                ????????00??????1??0020??1?2001031?200340001001011??0000211100101?1110000?00100100???00?0???0???0?211?2?2?11???00010???1021?0??1??1001000120210020000010100?021??00?0000121010010011??????
    Tayassu_tajacu                01011-2-11100101110?121001020120?030--320001111100100010312000110101000010001002001101101-010010110000100-10000000?110000101001100311111112221102112121?10020320111010001221120210100000??
    Tragulus                      10001-00000001011100241011?10101023100000?0000010010002000?200002?001000001101011?1110?01-1000??010000100101221000000000010110110021?110102?2111201212?2121203210111111112111221111?0031??
    Tursiops                      01111-2-111213111011211301101211020101??0000??100001010???3000?1?0120020?1??0??1???????????????????????????????00???????0??00??00-021110?020011?000011----0-0-0------000-0-----000??110011
    Vulpavus                      ?0010000010001?1????????????000011?2000100001011100?001100100000100?000000021101001?00010000011?0?10002?01000000000000010100000????00000000000?02000001?0000100010110000100000010000??????
    Wasatch_Diacodexis            ?0000100?10?01?1????????????0?????210?010????0??0???00??????????2?1?10???0??1001??1???0?0?0000010?100010001000100000000001010011001?01100??021????????1110?20220111010011??110210010??????
    Xiphodon                      ??????00??0?????1?0?2????1?????1?2??00?????0??01????0?2111??0????001?0?00??2?2110000??02001000011??0000001002010000000000101?????????11??0202?10201313?21??20?21?1??1001121313210010??????
  ;
END;


BEGIN TAXA;
	DIMENSIONS NTAX = 68;
	TAXLABELS
		Agriochoerus
		Ambulocetus
		Amphimeryx
		Andrewsarchus
		Arctocyon
		Balaenoptera
		Basilosaurus
		Bos_taurus
		Bunomeryx
		Cainotherium
		Camelus
		Canis
		Cebochoerus
		Delphinapterus
		Diacodexis_pakistanensis
		Dissacus_navajovious
		Dissacus_praenuntius
		Elomeryx_armatus
		Entelodontidae
		Eoconodon
		Eotylopus_reedi
		Equus
		Georgiacetus
		Gobiohyus
		Hapalodectes_hetangensis
		Hapalodectes_leptognathus
		Harpagolestes
		Heptodon
		Heteromeryx_dispar
		Hexaprotodon
		Hippopotamus
		Homacodon_vagans
		Hyopsodus
		Hypertragulus
		Hyracotherium
		Lama
		Leptictidae
		Leptomeryx
		Leptoreodon
		Meniscotherium
		Merycoidodon
		Mesohippus
		Mesonyx
		Mixtotherium
		Mongolian_Dissacus
		Odocoileus
		Orycteropus_afer
		Ovis
		Pachyaena_gigantea
		Pachyaena_ossifraga
		Pakicetus
		Perchoerus
		Phenacodus
		Physeter
		Poebrotherium
		Protoceras_celer
		Protocetus
		Rattus_norvegicus
		Remingtonocetus
		Sinonyx
		Sus_scrofa
		Synoplotherium
		Tayassu_tajacu
		Tragulus
		Tursiops
		Vulpavus
		Wasatch_Diacodexis
		Xiphodon
	;
END;
BEGIN TREES;
	TRANSLATE
		1	Agriochoerus,
		2	Ambulocetus,
		3	Amphimeryx,
		4	Andrewsarchus,
		5	Arctocyon,
		6	Balaenoptera,
		7	Basilosaurus,
		8	Bos_taurus,
		9	Bunomeryx,
		10	Cainotherium,
		11	Camelus,
		12	Canis,
		13	Cebochoerus,
		14	Delphinapterus,
		15	Diacodexis_pakistanensis,
		16	Dissacus_navajovious,
		17	Dissacus_praenuntius,
		18	Elomeryx_armatus,
		19	Entelodontidae,
		20	Eoconodon,
		21	Eotylopus_reedi,
		22	Equus,
		23	Georgiacetus,
		24	Gobiohyus,
		25	Hapalodectes_hetangensis,
		26	Hapalodectes_leptognathus,
		27	Harpagolestes,
		28	Heptodon,
		29	Heteromeryx_dispar,
		30	Hexaprotodon,
		31	Hippopotamus,
		32	Homacodon_vagans,
		33	Hyopsodus,
		34	Hypertragulus,
		35	Hyracotherium,
		36	Lama,
		37	Leptictidae,
		38	Leptomeryx,
		39	Leptoreodon,
		40	Meniscotherium,
		41	Merycoidodon,
		42	Mesohippus,
		43	Mesonyx,
		44	Mixtotherium,
		45	Mongolian_Dissacus,
		46	Odocoileus,
		47	Orycteropus_afer,
		48	Ovis,
		49	Pachyaena_gigantea,
		50	Pachyaena_ossifraga,
		51	Pakicetus,
		52	Perchoerus,
		53	Phenacodus,
		54	Physeter,
		55	Poebrotherium,
		56	Protoceras_celer,
		57	Protocetus,
		58	Rattus_norvegicus,
		59	Remingtonocetus,
		60	Sinonyx,
		61	Sus_scrofa,
		62	Synoplotherium,
		63	Tayassu_tajacu,
		64	Tragulus,
		65	Tursiops,
		66	Vulpavus,
		67	Wasatch_Diacodexis,
		68	Xiphodon
	;
	TREE * ambiguous = [&R] (1,(41,((((12,(66,((((((51,(2,(59,((6,(54,(14,65))),(7,(23,57)))))),(60,((27,(43,62)),(49,50)))),(17,(16,45))),(25,26)),(5,(4,20))),(58,((33,(53,(40,((22,42),(28,35))))),(37,47)))))),(32,(15,67))),(24,(39,(44,(18,((13,(30,31)),(19,(52,(61,63))))))))),((3,68),(9,(((38,(64,(8,(46,48)))),(29,56)),(34,(10,(21,(55,(11,36)))))))))));
	TREE * ambiguous = [&R] (1,(41,((((12,(66,((((((51,(2,(59,((6,(54,(14,65))),(7,(23,57)))))),(60,((27,(43,62)),(49,50)))),(16,(17,45))),(25,26)),(5,(4,20))),(58,((33,(53,(40,((22,42),(28,35))))),(37,47)))))),(15,(32,67))),(24,(39,(44,(18,((13,(30,31)),(19,(52,(61,63))))))))),(9,((3,68),(((38,(64,(8,(46,48)))),(29,56)),(34,(10,(21,(55,(11,36)))))))))));
	TREE * ambiguous = [&R] (1,(41,((((12,(66,((((16,(45,(17,((51,(2,(59,((6,(54,(14,65))),(57,(7,23)))))),(60,((27,(43,62)),(49,50))))))),(25,26)),(5,(4,20))),(58,((53,(33,(40,((22,42),(28,35))))),(37,47)))))),(32,(15,67))),((44,(18,((13,(30,31)),(19,(52,(61,63)))))),(24,39))),((3,68),(9,(29,((56,(38,(64,(8,(46,48))))),(34,(10,(21,(55,(11,36))))))))))));
	TREE * ambiguous = [&R] (1,(41,((((12,(66,(((((16,((51,(2,(59,((6,(54,(14,65))),(23,(7,57)))))),(60,((27,(43,62)),(49,50))))),(17,45)),(25,26)),(5,(4,20))),(58,((33,(53,(40,((22,42),(28,35))))),(37,47)))))),(15,(32,67))),((44,(18,((13,(30,31)),(19,(52,(61,63)))))),(24,39))),((3,68),(9,((56,(38,(64,(8,(46,48))))),(34,((10,29),(21,(55,(11,36)))))))))));
	TREE * ambiguous = [&R] (1,(41,((((12,(66,(((((16,((51,(2,(59,((6,(54,(14,65))),(23,(7,57)))))),(60,((27,(43,62)),(49,50))))),(17,45)),(25,26)),(5,(4,20))),(58,((33,(53,(40,((22,42),(28,35))))),(37,47)))))),(32,(15,67))),((44,(18,((13,(30,31)),(19,(52,(61,63)))))),(24,39))),((3,68),(9,(((38,(64,(8,(46,48)))),(29,56)),(34,(10,(21,(55,(11,36)))))))))));
	TREE * ambiguous = [&R] (1,(41,((((12,(66,((((45,(((51,(2,(59,((6,(54,(14,65))),(23,(7,57)))))),(60,(50,(49,(27,(43,62)))))),(16,17))),(25,26)),(5,(4,20))),(58,((33,(53,(40,((22,42),(28,35))))),(37,47)))))),(32,(15,67))),((44,(18,((13,(30,31)),(19,(52,(61,63)))))),(24,39))),((3,68),(9,((56,(38,(64,(48,(8,46))))),(34,((10,29),(21,(55,(11,36)))))))))));
	TREE * ambiguous = [&R] (1,(41,((((12,(66,((((16,(45,(17,((51,(2,(59,((6,(54,(14,65))),(57,(7,23)))))),(60,((27,(43,62)),(49,50))))))),(25,26)),(5,(4,20))),(58,((53,(33,(40,((22,42),(28,35))))),(37,47)))))),(15,(32,67))),(24,(39,(44,(18,((13,(30,31)),(19,(52,(61,63))))))))),((3,68),(9,(29,((56,(38,(64,(8,(46,48))))),(34,(10,(21,(55,(11,36))))))))))));
	TREE * ambiguous = [&R] (1,(41,((((12,(66,((((((51,(2,(59,((6,(54,(14,65))),(7,(23,57)))))),(60,((27,(43,62)),(49,50)))),(45,(16,17))),(25,26)),(5,(4,20))),(58,((33,(53,(40,((22,42),(28,35))))),(37,47)))))),(15,(32,67))),(24,(39,(44,(18,((13,(30,31)),(19,(52,(61,63))))))))),(9,((3,68),((56,(38,(64,(8,(46,48))))),(34,((10,29),(21,(55,(11,36)))))))))));
	TREE * ambiguous = [&R] (1,(41,((((12,(66,((((17,(16,(45,((51,(2,(59,((6,(54,(14,65))),(7,(23,57)))))),(60,((27,(43,62)),(49,50))))))),(25,26)),(5,(4,20))),(58,((53,(33,(40,((22,42),(28,35))))),(37,47)))))),(15,(32,67))),(24,(39,(44,(18,((13,(30,31)),(19,(52,(61,63))))))))),((3,68),(9,((56,(38,(64,(48,(8,46))))),(34,((10,29),(21,(55,(11,36)))))))))));
	TREE * ambiguous = [&R] (1,(41,((((12,(66,((((((51,(2,(59,((6,(54,(14,65))),(23,(7,57)))))),(60,((27,(43,62)),(49,50)))),(45,(16,17))),(25,26)),(5,(4,20))),(58,((33,(53,(40,((22,42),(28,35))))),(37,47)))))),(15,(32,67))),((44,(18,((13,(30,31)),(19,(52,(61,63)))))),(24,39))),(9,((3,68),((56,(38,(64,(48,(8,46))))),(34,((10,29),(21,(55,(11,36)))))))))));
	TREE * ambiguous = [&R] (1,(41,((((12,(66,((((((51,(2,(59,((6,(54,(14,65))),(23,(7,57)))))),(60,(50,(49,(27,(43,62)))))),(17,(16,45))),(25,26)),(5,(4,20))),(58,((33,(53,(40,((22,42),(28,35))))),(37,47)))))),(15,(32,67))),((44,(18,((13,(30,31)),(19,(52,(61,63)))))),(24,39))),((3,68),(9,(((38,(64,(48,(8,46)))),(29,56)),(34,(10,(21,(55,(11,36)))))))))));
	TREE * ambiguous = [&R] (1,(41,((((12,(66,((((17,(((51,(2,(59,((6,(54,(14,65))),(57,(7,23)))))),(60,((27,(43,62)),(49,50)))),(16,45))),(25,26)),(5,(4,20))),(58,((33,(53,(40,((22,42),(28,35))))),(37,47)))))),(32,(15,67))),(24,(39,(44,(18,((13,(30,31)),(19,(52,(61,63))))))))),((3,68),(9,((56,(38,(64,(48,(8,46))))),(34,((10,29),(21,(55,(11,36)))))))))));
	TREE * ambiguous = [&R] (1,(41,((((12,(66,(((((45,((51,(2,(59,((6,(54,(14,65))),(57,(7,23)))))),(60,((27,(43,62)),(49,50))))),(16,17)),(25,26)),(5,(4,20))),(58,((53,(33,(40,((22,42),(28,35))))),(37,47)))))),(15,(32,67))),((44,(18,((13,(30,31)),(19,(52,(61,63)))))),(24,39))),((3,68),(9,((56,(38,(64,(8,(46,48))))),(34,((10,29),(21,(55,(11,36)))))))))));
	TREE * ambiguous = [&R] (1,(41,((((12,(66,(((((45,((51,(2,(59,((6,(54,(14,65))),(7,(23,57)))))),(60,(50,(49,(27,(43,62))))))),(16,17)),(25,26)),(5,(4,20))),(58,((33,(53,(40,((22,42),(28,35))))),(37,47)))))),(32,(15,67))),(24,(39,(44,(18,((13,(30,31)),(19,(52,(61,63))))))))),((3,68),(9,((56,(38,(64,(48,(8,46))))),(34,((10,29),(21,(55,(11,36)))))))))));
	TREE * ambiguous = [&R] (1,(41,((((12,(66,((((17,(((51,(2,(59,((6,(54,(14,65))),(23,(7,57)))))),(60,(50,(49,(27,(43,62)))))),(16,45))),(25,26)),(5,(4,20))),(58,((33,(53,(40,((22,42),(28,35))))),(37,47)))))),(32,(15,67))),(24,(39,(44,(18,((13,(30,31)),(19,(52,(61,63))))))))),((3,68),(9,(29,((56,(38,(64,(48,(8,46))))),(34,(10,(21,(55,(11,36))))))))))));
	TREE * ambiguous = [&R] (1,(41,((((12,(66,((((((51,(2,(59,((6,(54,(14,65))),(23,(7,57)))))),(60,(50,(49,(27,(43,62)))))),(45,(16,17))),(25,26)),(5,(4,20))),(58,((33,(53,(40,((22,42),(28,35))))),(37,47)))))),(15,(32,67))),(24,(39,(44,(18,((13,(30,31)),(19,(52,(61,63))))))))),((3,68),(9,(((38,(64,(8,(46,48)))),(29,56)),(34,(10,(21,(55,(11,36)))))))))));
	TREE * ambiguous = [&R] (1,(41,((((12,(66,((((16,(((51,(2,(59,((6,(54,(14,65))),(57,(7,23)))))),(60,(50,(49,(27,(43,62)))))),(17,45))),(25,26)),(5,(4,20))),(58,((33,(53,(40,((22,42),(28,35))))),(37,47)))))),(15,(32,67))),(24,(39,(44,(18,((13,(30,31)),(19,(52,(61,63))))))))),((3,68),(9,(((38,(64,(48,(8,46)))),(29,56)),(34,(10,(21,(55,(11,36)))))))))));
	TREE * ambiguous = [&R] (1,(41,((((12,(66,((((16,(17,(45,((51,(2,(59,((6,(54,(14,65))),(7,(23,57)))))),(60,((27,(43,62)),(49,50))))))),(25,26)),(5,(4,20))),(58,((53,(33,(40,((22,42),(28,35))))),(37,47)))))),(15,(32,67))),((44,(18,((13,(30,31)),(19,(52,(61,63)))))),(24,39))),(9,((3,68),(((38,(64,(8,(46,48)))),(29,56)),(34,(10,(21,(55,(11,36)))))))))));
	TREE * ambiguous = [&R] (1,(41,((((12,(66,((((45,(((51,(2,(59,((6,(54,(14,65))),(23,(7,57)))))),(60,((27,(43,62)),(49,50)))),(16,17))),(25,26)),(5,(4,20))),(58,((33,(53,(40,((22,42),(28,35))))),(37,47)))))),(15,(32,67))),(24,(39,(44,(18,((13,(30,31)),(19,(52,(61,63))))))))),((3,68),(9,(((38,(64,(8,(46,48)))),(29,56)),(34,(10,(21,(55,(11,36)))))))))));
	TREE * ambiguous = [&R] (1,(41,((((12,(66,((((16,(45,(17,((51,(2,(59,((6,(54,(14,65))),(23,(7,57)))))),(60,(50,(49,(27,(43,62))))))))),(25,26)),(5,(4,20))),(58,((33,(53,(40,((22,42),(28,35))))),(37,47)))))),(15,(32,67))),((44,(18,((13,(30,31)),(19,(52,(61,63)))))),(24,39))),((3,68),(9,((56,(38,(64,(48,(8,46))))),(34,((10,29),(21,(55,(11,36)))))))))));
	TREE * ambiguous = [&R] (1,(41,((((12,(66,((((((51,(2,(59,((6,(54,(14,65))),(23,(7,57)))))),(60,(50,(49,(27,(43,62)))))),(16,(17,45))),(25,26)),(5,(4,20))),(58,((33,(53,(40,((22,42),(28,35))))),(37,47)))))),(32,(15,67))),((44,(18,((13,(30,31)),(19,(52,(61,63)))))),(24,39))),((3,68),(9,((56,(38,(64,(8,(46,48))))),(34,((10,29),(21,(55,(11,36)))))))))));
	TREE * ambiguous = [&R] (1,(41,((((12,(66,(((((45,((51,(2,(59,((6,(54,(14,65))),(57,(7,23)))))),(60,((27,(43,62)),(49,50))))),(16,17)),(25,26)),(5,(4,20))),(58,((33,(53,(40,((22,42),(28,35))))),(37,47)))))),(32,(15,67))),((44,(18,((13,(30,31)),(19,(52,(61,63)))))),(24,39))),((3,68),(9,(((38,(64,(48,(8,46)))),(29,56)),(34,(10,(21,(55,(11,36)))))))))));
	TREE * ambiguous = [&R] (1,(41,((((12,(66,((((17,(((51,(2,(59,((6,(54,(14,65))),(23,(7,57)))))),(60,((27,(43,62)),(49,50)))),(16,45))),(25,26)),(5,(4,20))),(58,((33,(53,(40,((22,42),(28,35))))),(37,47)))))),(15,(32,67))),(24,(39,(44,(18,((13,(30,31)),(19,(52,(61,63))))))))),((3,68),(9,(((38,(64,(48,(8,46)))),(29,56)),(34,(10,(21,(55,(11,36)))))))))));
	TREE * ambiguous = [&R] (1,(41,((((12,(66,((((45,(16,(17,((51,(2,(59,((6,(54,(14,65))),(7,(23,57)))))),(60,(50,(49,(27,(43,62))))))))),(25,26)),(5,(4,20))),(58,((33,(53,(40,((22,42),(28,35))))),(37,47)))))),(15,(32,67))),((44,(18,((13,(30,31)),(19,(52,(61,63)))))),(24,39))),(9,((3,68),((56,(38,(64,(48,(8,46))))),(34,((10,29),(21,(55,(11,36)))))))))));
	TREE * ambiguous = [&R] (1,(41,((((12,(66,((((16,(17,(45,((51,(2,(59,((6,(54,(14,65))),(23,(7,57)))))),(60,(50,(49,(27,(43,62))))))))),(25,26)),(5,(4,20))),(58,((53,(33,(40,((22,42),(28,35))))),(37,47)))))),(15,(32,67))),(24,(39,(44,(18,((13,(30,31)),(19,(52,(61,63))))))))),(9,((3,68),(((38,(64,(8,(46,48)))),(29,56)),(34,(10,(21,(55,(11,36)))))))))));
	TREE * ambiguous = [&R] (1,(41,((((12,(66,((((17,(16,(45,((51,(2,(59,((6,(54,(14,65))),(7,(23,57)))))),(60,(50,(49,(27,(43,62))))))))),(25,26)),(5,(4,20))),(58,((53,(33,(40,((22,42),(28,35))))),(37,47)))))),(15,(32,67))),((44,(18,((13,(30,31)),(19,(52,(61,63)))))),(24,39))),((3,68),(9,((56,(38,(64,(48,(8,46))))),(34,((10,29),(21,(55,(11,36)))))))))));
	TREE * ambiguous = [&R] (1,(41,((((12,(66,(((((17,((51,(2,(59,((6,(54,(14,65))),(7,(23,57)))))),(60,(50,(49,(27,(43,62))))))),(16,45)),(25,26)),(5,(4,20))),(58,((53,(33,(40,((22,42),(28,35))))),(37,47)))))),(32,(15,67))),(24,(39,(44,(18,((13,(30,31)),(19,(52,(61,63))))))))),((3,68),(9,(((38,(64,(48,(8,46)))),(29,56)),(34,(10,(21,(55,(11,36)))))))))));
	TREE * ambiguous = [&R] (1,(41,((((12,(66,((((17,(45,(16,((51,(2,(59,((6,(54,(14,65))),(57,(7,23)))))),(60,((27,(43,62)),(49,50))))))),(25,26)),(5,(4,20))),(58,((33,(53,(40,((22,42),(28,35))))),(37,47)))))),(32,(15,67))),((44,(18,((13,(30,31)),(19,(52,(61,63)))))),(24,39))),((3,68),(9,(29,((56,(38,(64,(48,(8,46))))),(34,(10,(21,(55,(11,36))))))))))));
	TREE * ambiguous = [&R] (1,(41,((((12,(66,((((16,(45,(17,((51,(2,(59,((6,(54,(14,65))),(7,(23,57)))))),(60,((27,(43,62)),(49,50))))))),(25,26)),(5,(4,20))),(58,((53,(33,(40,((22,42),(28,35))))),(37,47)))))),(32,(15,67))),((44,(18,((13,(30,31)),(19,(52,(61,63)))))),(24,39))),((3,68),(9,(((38,(64,(48,(8,46)))),(29,56)),(34,(10,(21,(55,(11,36)))))))))));
	TREE * ambiguous = [&R] (1,(41,((((12,(66,((((((51,(2,(59,((6,(54,(14,65))),(57,(7,23)))))),(60,(50,(49,(27,(43,62)))))),(45,(16,17))),(25,26)),(5,(4,20))),(58,((53,(33,(40,((22,42),(28,35))))),(37,47)))))),(15,(32,67))),(24,(39,(44,(18,((13,(30,31)),(19,(52,(61,63))))))))),((3,68),(9,(29,((56,(38,(64,(48,(8,46))))),(34,(10,(21,(55,(11,36))))))))))));
	TREE * ambiguous = [&R] (1,(41,((((12,(66,((((((51,(2,(59,((6,(54,(14,65))),(7,(23,57)))))),(60,(50,(49,(27,(43,62)))))),(17,(16,45))),(25,26)),(5,(4,20))),(58,((33,(53,(40,((22,42),(28,35))))),(37,47)))))),(15,(32,67))),((44,(18,((13,(30,31)),(19,(52,(61,63)))))),(24,39))),(9,((3,68),(((38,(64,(8,(46,48)))),(29,56)),(34,(10,(21,(55,(11,36)))))))))));
	TREE * ambiguous = [&R] (1,(41,((((12,(66,((((16,(17,(45,((51,(2,(59,((6,(54,(14,65))),(23,(7,57)))))),(60,((27,(43,62)),(49,50))))))),(25,26)),(5,(4,20))),(58,((53,(33,(40,((22,42),(28,35))))),(37,47)))))),(32,(15,67))),(24,(39,(44,(18,((13,(30,31)),(19,(52,(61,63))))))))),((3,68),(9,(((38,(64,(8,(46,48)))),(29,56)),(34,(10,(21,(55,(11,36)))))))))));
	TREE * ambiguous = [&R] (1,(41,((((12,(66,((((((51,(2,(59,((6,(54,(14,65))),(23,(7,57)))))),(60,((27,(43,62)),(49,50)))),(17,(16,45))),(25,26)),(5,(4,20))),(58,((33,(53,(40,((22,42),(28,35))))),(37,47)))))),(32,(15,67))),((44,(18,((13,(30,31)),(19,(52,(61,63)))))),(24,39))),((3,68),(9,((56,(38,(64,(8,(46,48))))),(34,((10,29),(21,(55,(11,36)))))))))));
	TREE * ambiguous = [&R] (1,(41,((((12,(66,((((45,(17,(16,((51,(2,(59,((6,(54,(14,65))),(7,(23,57)))))),(60,((27,(43,62)),(49,50))))))),(25,26)),(5,(4,20))),(58,((53,(33,(40,((22,42),(28,35))))),(37,47)))))),(15,(32,67))),(24,(39,(44,(18,((13,(30,31)),(19,(52,(61,63))))))))),(9,((3,68),(((38,(64,(48,(8,46)))),(29,56)),(34,(10,(21,(55,(11,36)))))))))));
	TREE * ambiguous = [&R] (1,(41,((((12,(66,((((((51,(2,(59,((6,(54,(14,65))),(23,(7,57)))))),(60,((27,(43,62)),(49,50)))),(17,(16,45))),(25,26)),(5,(4,20))),(58,((33,(53,(40,((22,42),(28,35))))),(37,47)))))),(15,(32,67))),(24,(39,(44,(18,((13,(30,31)),(19,(52,(61,63))))))))),(9,((3,68),((56,(38,(64,(48,(8,46))))),(34,((10,29),(21,(55,(11,36)))))))))));
	TREE * ambiguous = [&R] (1,(41,((((12,(66,((((16,(45,(17,((51,(2,(59,((6,(54,(14,65))),(7,(23,57)))))),(60,(50,(49,(27,(43,62))))))))),(25,26)),(5,(4,20))),(58,((53,(33,(40,((22,42),(28,35))))),(37,47)))))),(32,(15,67))),((44,(18,((13,(30,31)),(19,(52,(61,63)))))),(24,39))),((3,68),(9,((56,(38,(64,(8,(46,48))))),(34,((10,29),(21,(55,(11,36)))))))))));
	TREE * ambiguous = [&R] (1,(41,((((12,(66,((((45,(16,(17,((51,(2,(59,((6,(54,(14,65))),(57,(7,23)))))),(60,(50,(49,(27,(43,62))))))))),(25,26)),(5,(4,20))),(58,((33,(53,(40,((22,42),(28,35))))),(37,47)))))),(15,(32,67))),((44,(18,((13,(30,31)),(19,(52,(61,63)))))),(24,39))),((3,68),(9,(29,((56,(38,(64,(8,(46,48))))),(34,(10,(21,(55,(11,36))))))))))));
	TREE * ambiguous = [&R] (1,(41,((((12,(66,(((((45,((51,(2,(59,((6,(54,(14,65))),(23,(7,57)))))),(60,((27,(43,62)),(49,50))))),(16,17)),(25,26)),(5,(4,20))),(58,((33,(53,(40,((22,42),(28,35))))),(37,47)))))),(32,(15,67))),(24,(39,(44,(18,((13,(30,31)),(19,(52,(61,63))))))))),((3,68),(9,(29,((56,(38,(64,(8,(46,48))))),(34,(10,(21,(55,(11,36))))))))))));
	TREE * ambiguous = [&R] (1,(41,((((12,(66,(((((17,((51,(2,(59,((6,(54,(14,65))),(23,(7,57)))))),(60,(50,(49,(27,(43,62))))))),(16,45)),(25,26)),(5,(4,20))),(58,((33,(53,(40,((22,42),(28,35))))),(37,47)))))),(32,(15,67))),(24,(39,(44,(18,((13,(30,31)),(19,(52,(61,63))))))))),((3,68),(9,((56,(38,(64,(8,(46,48))))),(34,((10,29),(21,(55,(11,36)))))))))));
	TREE * ambiguous = [&R] (1,(41,((((12,(66,((((17,(45,(16,((51,(2,(59,((6,(54,(14,65))),(7,(23,57)))))),(60,((27,(43,62)),(49,50))))))),(25,26)),(5,(4,20))),(58,((33,(53,(40,((22,42),(28,35))))),(37,47)))))),(15,(32,67))),((44,(18,((13,(30,31)),(19,(52,(61,63)))))),(24,39))),(9,((3,68),(((38,(64,(48,(8,46)))),(29,56)),(34,(10,(21,(55,(11,36)))))))))));
	TREE * ambiguous = [&R] (1,(41,((((12,(66,((((((51,(2,(59,((6,(54,(14,65))),(23,(7,57)))))),(60,((27,(43,62)),(49,50)))),(17,(16,45))),(25,26)),(5,(4,20))),(58,((53,(33,(40,((22,42),(28,35))))),(37,47)))))),(32,(15,67))),((44,(18,((13,(30,31)),(19,(52,(61,63)))))),(24,39))),((3,68),(9,((56,(38,(64,(8,(46,48))))),(34,((10,29),(21,(55,(11,36)))))))))));
	TREE * ambiguous = [&R] (1,(41,((((12,(66,((((17,(16,(45,((51,(2,(59,((6,(54,(14,65))),(23,(7,57)))))),(60,(50,(49,(27,(43,62))))))))),(25,26)),(5,(4,20))),(58,((33,(53,(40,((22,42),(28,35))))),(37,47)))))),(15,(32,67))),((44,(18,((13,(30,31)),(19,(52,(61,63)))))),(24,39))),((3,68),(9,(29,((56,(38,(64,(48,(8,46))))),(34,(10,(21,(55,(11,36))))))))))));
	TREE * ambiguous = [&R] (1,(41,((((12,(66,((((17,(16,(45,((51,(2,(59,((6,(54,(14,65))),(57,(7,23)))))),(60,((27,(43,62)),(49,50))))))),(25,26)),(5,(4,20))),(58,((33,(53,(40,((22,42),(28,35))))),(37,47)))))),(15,(32,67))),((44,(18,((13,(30,31)),(19,(52,(61,63)))))),(24,39))),((3,68),(9,(((38,(64,(48,(8,46)))),(29,56)),(34,(10,(21,(55,(11,36)))))))))));
	TREE * ambiguous = [&R] (1,(41,((((12,(66,((((17,(16,(45,((51,(2,(59,((6,(54,(14,65))),(7,(23,57)))))),(60,((27,(43,62)),(49,50))))))),(25,26)),(5,(4,20))),(58,((53,(33,(40,((22,42),(28,35))))),(37,47)))))),(15,(32,67))),(24,(39,(44,(18,((13,(30,31)),(19,(52,(61,63))))))))),((3,68),(9,(29,((56,(38,(64,(48,(8,46))))),(34,(10,(21,(55,(11,36))))))))))));
	TREE * ambiguous = [&R] (1,(41,((((12,(66,(((((17,((51,(2,(59,((6,(54,(14,65))),(7,(23,57)))))),(60,(50,(49,(27,(43,62))))))),(16,45)),(25,26)),(5,(4,20))),(58,((33,(53,(40,((22,42),(28,35))))),(37,47)))))),(15,(32,67))),(24,(39,(44,(18,((13,(30,31)),(19,(52,(61,63))))))))),((3,68),(9,((56,(38,(64,(8,(46,48))))),(34,((10,29),(21,(55,(11,36)))))))))));
	TREE * ambiguous = [&R] (1,(41,((((12,(66,(((((45,((51,(2,(59,((6,(54,(14,65))),(23,(7,57)))))),(60,(50,(49,(27,(43,62))))))),(16,17)),(25,26)),(5,(4,20))),(58,((33,(53,(40,((22,42),(28,35))))),(37,47)))))),(32,(15,67))),((44,(18,((13,(30,31)),(19,(52,(61,63)))))),(24,39))),((3,68),(9,(29,((56,(38,(64,(8,(46,48))))),(34,(10,(21,(55,(11,36))))))))))));
	TREE * ambiguous = [&R] (1,(41,((((12,(66,(((((45,((51,(2,(59,((6,(54,(14,65))),(23,(7,57)))))),(60,((27,(43,62)),(49,50))))),(16,17)),(25,26)),(5,(4,20))),(58,((53,(33,(40,((22,42),(28,35))))),(37,47)))))),(15,(32,67))),((44,(18,((13,(30,31)),(19,(52,(61,63)))))),(24,39))),(9,((3,68),((56,(38,(64,(48,(8,46))))),(34,((10,29),(21,(55,(11,36)))))))))));
	TREE * ambiguous = [&R] (1,(41,((((12,(66,((((16,(17,(45,((51,(2,(59,((6,(54,(14,65))),(23,(7,57)))))),(60,(50,(49,(27,(43,62))))))))),(25,26)),(5,(4,20))),(58,((53,(33,(40,((22,42),(28,35))))),(37,47)))))),(15,(32,67))),(24,(39,(44,(18,((13,(30,31)),(19,(52,(61,63))))))))),((3,68),(9,(((38,(64,(8,(46,48)))),(29,56)),(34,(10,(21,(55,(11,36)))))))))));
	TREE * ambiguous = [&R] (1,(41,((((12,(66,(((((16,((51,(2,(59,((6,(54,(14,65))),(7,(23,57)))))),(60,(50,(49,(27,(43,62))))))),(17,45)),(25,26)),(5,(4,20))),(58,((53,(33,(40,((22,42),(28,35))))),(37,47)))))),(32,(15,67))),((44,(18,((13,(30,31)),(19,(52,(61,63)))))),(24,39))),((3,68),(9,(29,((56,(38,(64,(8,(46,48))))),(34,(10,(21,(55,(11,36))))))))))));
	TREE * ambiguous = [&R] (1,(41,((((12,(66,((((45,(16,(17,((51,(2,(59,((6,(54,(14,65))),(57,(7,23)))))),(60,((27,(43,62)),(49,50))))))),(25,26)),(5,(4,20))),(58,((33,(53,(40,((22,42),(28,35))))),(37,47)))))),(15,(32,67))),(24,(39,(44,(18,((13,(30,31)),(19,(52,(61,63))))))))),((3,68),(9,((56,(38,(64,(48,(8,46))))),(34,((10,29),(21,(55,(11,36)))))))))));
	TREE * extraState = [&R] (1,(41,(((((12,(66,(((((17,(51,(2,(59,(57,((6,(65,(14,54))),(7,23))))))),((16,45),(60,((27,(43,62)),(49,50))))),(25,26)),(5,(4,20))),(58,((33,(53,(40,((22,42),(28,35))))),(37,47)))))),(13,(19,((18,52),((30,31),(61,63)))))),(15,(32,67))),(24,(39,44))),(9,((3,68),(((38,(64,(48,(8,46)))),(29,56)),(34,(10,(21,(55,(11,36)))))))))));
	TREE * extraState = [&R] (1,(41,(((((12,(66,((((51,(2,(59,((6,(65,(14,54))),(57,(7,23)))))),((17,((16,45),(60,((27,(43,62)),(49,50))))),(25,26))),(5,(4,20))),(58,((33,(53,(40,((22,42),(28,35))))),(37,47)))))),(13,(19,((18,52),((30,31),(61,63)))))),(15,(32,67))),(24,(39,44))),(9,((3,68),((56,(38,(64,(8,(46,48))))),(34,((10,29),(21,(55,(11,36)))))))))));
	TREE * extraState = [&R] (1,(41,(((((12,(66,(((16,(45,((17,((51,(2,(59,((6,(54,(14,65))),(57,(7,23)))))),(25,26))),(60,((43,(27,62)),(49,50)))))),(5,(4,20))),(58,((53,(33,(40,((22,42),(28,35))))),(37,47)))))),(13,(19,((18,52),((30,31),(61,63)))))),(15,(32,67))),(24,(39,44))),(9,((3,68),(((38,(64,(48,(8,46)))),(29,56)),(34,(10,(21,(55,(11,36)))))))))));
	TREE * extraState = [&R] (1,(41,(((((12,(66,(((((51,(2,(59,((6,(54,(14,65))),(57,(7,23)))))),(17,(45,(16,(60,((62,(27,43)),(49,50))))))),(25,26)),(5,(4,20))),(58,((33,(53,(40,((22,42),(28,35))))),(37,47)))))),(13,(19,((18,52),((30,31),(61,63)))))),(15,(32,67))),(24,(39,44))),(9,((3,68),(((38,(64,(48,(8,46)))),(29,56)),(34,(10,(21,(55,(11,36)))))))))));
	TREE * extraState = [&R] (1,(41,(((((12,(66,((((51,(2,(59,(57,((6,(65,(14,54))),(7,23)))))),((16,(17,(45,(60,(50,(49,(62,(27,43)))))))),(25,26))),(5,(4,20))),(58,((53,(33,(40,((22,42),(28,35))))),(37,47)))))),(13,(19,((18,52),((30,31),(61,63)))))),(15,(32,67))),(24,(39,44))),(9,((3,68),((56,(38,(64,(8,(46,48))))),(34,((10,29),(21,(55,(11,36)))))))))));
	TREE * extraState = [&R] (1,(41,(((((12,(66,((((51,(2,(59,((6,(65,(14,54))),(57,(7,23)))))),((17,(45,(16,(60,((62,(27,43)),(49,50)))))),(25,26))),(5,(4,20))),(58,((53,(33,(40,((22,42),(28,35))))),(37,47)))))),(13,(19,((18,52),((30,31),(61,63)))))),(15,(32,67))),(24,(39,44))),(9,((3,68),(((38,(64,(48,(8,46)))),(29,56)),(34,(10,(21,(55,(11,36)))))))))));
	TREE * extraState = [&R] (1,(41,(((((12,(66,((((51,(2,(59,(57,((6,(54,(14,65))),(7,23)))))),(((16,17),(45,(60,(50,(49,(62,(27,43))))))),(25,26))),(5,(4,20))),(58,((33,(53,(40,((22,42),(28,35))))),(37,47)))))),(13,(19,((18,52),((30,31),(61,63)))))),(15,(32,67))),(24,(39,44))),(9,((3,68),(((38,(64,(8,(46,48)))),(29,56)),(34,(10,(21,(55,(11,36)))))))))));
	TREE * extraState = [&R] (1,(41,(((((12,(66,(((45,(16,((17,((51,(2,(59,((6,(54,(14,65))),(57,(7,23)))))),(25,26))),(60,((43,(27,62)),(49,50)))))),(5,(4,20))),(58,((53,(33,(40,((22,42),(28,35))))),(37,47)))))),(13,(19,((18,52),((30,31),(61,63)))))),(15,(32,67))),(24,(39,44))),(9,((3,68),((56,(38,(64,(48,(8,46))))),(34,((10,29),(21,(55,(11,36)))))))))));
	TREE * extraState = [&R] (1,(41,(((((12,(66,(((45,(16,((17,((51,(2,(59,(57,((6,(54,(14,65))),(7,23)))))),(25,26))),(60,((62,(27,43)),(49,50)))))),(5,(4,20))),(58,((33,(53,(40,((22,42),(28,35))))),(37,47)))))),(13,(19,((18,52),((30,31),(61,63)))))),(15,(32,67))),(24,(39,44))),(9,((3,68),((56,(38,(64,(48,(8,46))))),(34,((10,29),(21,(55,(11,36)))))))))));
	TREE * extraState = [&R] (1,(41,(((((12,(66,(((((51,(2,(59,((6,(65,(14,54))),(57,(7,23)))))),(17,((16,45),(60,((27,(43,62)),(49,50)))))),(25,26)),(5,(4,20))),(58,((33,(53,(40,((22,42),(28,35))))),(37,47)))))),(13,(19,((18,52),((30,31),(61,63)))))),(15,(32,67))),(24,(39,44))),(9,((3,68),((56,(38,(64,(48,(8,46))))),(34,((10,29),(21,(55,(11,36)))))))))));
	TREE * extraState = [&R] (1,(41,(((((12,(66,((((17,((51,(2,(59,((6,(54,(14,65))),(57,(7,23)))))),(25,26))),((16,45),(60,(50,(49,(62,(27,43))))))),(5,(4,20))),(58,((33,(53,(40,((22,42),(28,35))))),(37,47)))))),(13,(19,((18,52),((30,31),(61,63)))))),(15,(32,67))),(24,(39,44))),(9,((3,68),((56,(38,(64,(48,(8,46))))),(34,((10,29),(21,(55,(11,36)))))))))));
	TREE * extraState = [&R] (1,(41,(((((12,(66,((((17,((51,(2,(59,(57,((6,(54,(14,65))),(7,23)))))),(25,26))),(45,(16,(60,(50,(49,(62,(27,43)))))))),(5,(4,20))),(58,((33,(53,(40,((22,42),(28,35))))),(37,47)))))),(13,(19,((18,52),((30,31),(61,63)))))),(15,(32,67))),(24,(39,44))),(9,((3,68),((56,(38,(64,(8,(46,48))))),(34,((10,29),(21,(55,(11,36)))))))))));
	TREE * extraState = [&R] (1,(41,(((((12,(66,(((((51,(2,(59,((6,(54,(14,65))),(57,(7,23)))))),(17,(45,(16,(60,((27,(43,62)),(49,50))))))),(25,26)),(5,(4,20))),(58,((53,(33,(40,((22,42),(28,35))))),(37,47)))))),(13,(19,((18,52),((30,31),(61,63)))))),(15,(32,67))),(24,(39,44))),(9,((3,68),(((38,(64,(8,(46,48)))),(29,56)),(34,(10,(21,(55,(11,36)))))))))));
	TREE * extraState = [&R] (1,(41,(((((12,(66,((((51,(2,(59,((6,(54,(14,65))),(57,(7,23)))))),(((16,17),(45,(60,(50,(49,(62,(27,43))))))),(25,26))),(5,(4,20))),(58,((33,(53,(40,((22,42),(28,35))))),(37,47)))))),(13,(19,((18,52),((30,31),(61,63)))))),(15,(32,67))),(24,(39,44))),(9,((3,68),(((38,(64,(8,(46,48)))),(29,56)),(34,(10,(21,(55,(11,36)))))))))));
	TREE * extraState = [&R] (1,(41,(((((12,(66,((((51,(2,(59,((6,(65,(14,54))),(57,(7,23)))))),(((16,17),(45,(60,(50,(49,(62,(27,43))))))),(25,26))),(5,(4,20))),(58,((33,(53,(40,((22,42),(28,35))))),(37,47)))))),(13,(19,((18,52),((30,31),(61,63)))))),(15,(32,67))),(24,(39,44))),(9,((3,68),(((38,(64,(8,(46,48)))),(29,56)),(34,(10,(21,(55,(11,36)))))))))));
	TREE * extraState = [&R] (1,(41,(((((12,(66,(((((17,(51,(2,(59,((6,(54,(14,65))),(57,(7,23))))))),((16,45),(60,((43,(27,62)),(49,50))))),(25,26)),(5,(4,20))),(58,((53,(33,(40,((22,42),(28,35))))),(37,47)))))),(13,(19,((18,52),((30,31),(61,63)))))),(15,(32,67))),(24,(39,44))),(9,((3,68),((56,(38,(64,(8,(46,48))))),(34,((10,29),(21,(55,(11,36)))))))))));
	TREE * extraState = [&R] (1,(41,(((((12,(66,(((((17,((51,(2,(59,(57,((6,(65,(14,54))),(7,23)))))),(25,26))),(50,((43,(27,62)),(49,60)))),(16,45)),(5,(4,20))),(58,((33,(53,(40,((22,42),(28,35))))),(37,47)))))),(13,(19,((18,52),((30,31),(61,63)))))),(15,(32,67))),(24,(39,44))),(9,((3,68),((56,(38,(64,(48,(8,46))))),(34,((10,29),(21,(55,(11,36)))))))))));
	TREE * extraState = [&R] (1,(41,(((((12,(66,(((((51,(2,(59,((6,(54,(14,65))),(57,(7,23)))))),(17,(45,(16,(60,(50,(49,(43,(27,62))))))))),(25,26)),(5,(4,20))),(58,((53,(33,(40,((22,42),(28,35))))),(37,47)))))),(13,(19,((18,52),((30,31),(61,63)))))),(15,(32,67))),(24,(39,44))),(9,((3,68),((56,(38,(64,(48,(8,46))))),(34,((10,29),(21,(55,(11,36)))))))))));
	TREE * extraState = [&R] (1,(41,(((((12,(66,(((((51,(2,(59,((6,(54,(14,65))),(57,(7,23)))))),(17,(16,(45,(60,(50,(49,(43,(27,62))))))))),(25,26)),(5,(4,20))),(58,((33,(53,(40,((22,42),(28,35))))),(37,47)))))),(13,(19,((18,52),((30,31),(61,63)))))),(15,(32,67))),(24,(39,44))),(9,((3,68),((56,(38,(64,(8,(46,48))))),(34,((10,29),(21,(55,(11,36)))))))))));
	TREE * extraState = [&R] (1,(41,(((((12,(66,((((17,((51,(2,(59,((6,(65,(14,54))),(57,(7,23)))))),(25,26))),((16,45),(60,((27,(43,62)),(49,50))))),(5,(4,20))),(58,((53,(33,(40,((22,42),(28,35))))),(37,47)))))),(13,(19,((18,52),((30,31),(61,63)))))),(15,(32,67))),(24,(39,44))),(9,((3,68),(((38,(64,(48,(8,46)))),(29,56)),(34,(10,(21,(55,(11,36)))))))))));
	TREE * extraState = [&R] (1,(41,(((((12,(66,(((((51,(2,(59,(57,((6,(65,(14,54))),(7,23)))))),(17,(16,(45,(60,(50,(49,(27,(43,62))))))))),(25,26)),(5,(4,20))),(58,((33,(53,(40,((22,42),(28,35))))),(37,47)))))),(13,(19,((18,52),((30,31),(61,63)))))),(15,(32,67))),(24,(39,44))),(9,((3,68),((56,(38,(64,(8,(46,48))))),(34,((10,29),(21,(55,(11,36)))))))))));
	TREE * extraState = [&R] (1,(41,(((((12,(66,(((((17,(51,(2,(59,(57,((6,(65,(14,54))),(7,23))))))),((16,45),(60,(50,(49,(27,(43,62))))))),(25,26)),(5,(4,20))),(58,((33,(53,(40,((22,42),(28,35))))),(37,47)))))),(13,(19,((18,52),((30,31),(61,63)))))),(15,(32,67))),(24,(39,44))),(9,((3,68),(((38,(64,(8,(46,48)))),(29,56)),(34,(10,(21,(55,(11,36)))))))))));
	TREE * extraState = [&R] (1,(41,(((((12,(66,(((((17,(51,(2,(59,((6,(65,(14,54))),(57,(7,23))))))),((16,45),(60,((62,(27,43)),(49,50))))),(25,26)),(5,(4,20))),(58,((33,(53,(40,((22,42),(28,35))))),(37,47)))))),(13,(19,((18,52),((30,31),(61,63)))))),(15,(32,67))),(24,(39,44))),(9,((3,68),((56,(38,(64,(48,(8,46))))),(34,((10,29),(21,(55,(11,36)))))))))));
	TREE * extraState = [&R] (1,(41,(((((12,(66,(((((17,(51,(2,(59,((6,(65,(14,54))),(57,(7,23))))))),(16,(45,(60,(50,(49,(62,(27,43)))))))),(25,26)),(5,(4,20))),(58,((33,(53,(40,((22,42),(28,35))))),(37,47)))))),(13,(19,((18,52),((30,31),(61,63)))))),(15,(32,67))),(24,(39,44))),(9,((3,68),(((38,(64,(8,(46,48)))),(29,56)),(34,(10,(21,(55,(11,36)))))))))));
	TREE * extraState = [&R] (1,(41,(((((12,(66,((((17,((51,(2,(59,(57,((6,(65,(14,54))),(7,23)))))),(25,26))),((16,45),(60,((62,(27,43)),(49,50))))),(5,(4,20))),(58,((53,(33,(40,((22,42),(28,35))))),(37,47)))))),(13,(19,((18,52),((30,31),(61,63)))))),(15,(32,67))),(24,(39,44))),(9,((3,68),(((38,(64,(8,(46,48)))),(29,56)),(34,(10,(21,(55,(11,36)))))))))));
	TREE * extraState = [&R] (1,(41,(((((12,(66,((((51,(2,(59,(57,((6,(65,(14,54))),(7,23)))))),((17,((16,45),(60,(50,(49,(27,(43,62))))))),(25,26))),(5,(4,20))),(58,((33,(53,(40,((22,42),(28,35))))),(37,47)))))),(13,(19,((18,52),((30,31),(61,63)))))),(15,(32,67))),(24,(39,44))),(9,((3,68),(((38,(64,(48,(8,46)))),(29,56)),(34,(10,(21,(55,(11,36)))))))))));
	TREE * extraState = [&R] (1,(41,(((((12,(66,(((((51,(2,(59,(57,((6,(65,(14,54))),(7,23)))))),(16,(17,(45,(60,(50,(49,(43,(27,62))))))))),(25,26)),(5,(4,20))),(58,((33,(53,(40,((22,42),(28,35))))),(37,47)))))),(13,(19,((18,52),((30,31),(61,63)))))),(15,(32,67))),(24,(39,44))),(9,((3,68),((56,(38,(64,(48,(8,46))))),(34,((10,29),(21,(55,(11,36)))))))))));
	TREE * extraState = [&R] (1,(41,(((((12,(66,((((17,((51,(2,(59,((6,(65,(14,54))),(57,(7,23)))))),(25,26))),(45,(16,(60,((62,(27,43)),(49,50)))))),(5,(4,20))),(58,((53,(33,(40,((22,42),(28,35))))),(37,47)))))),(13,(19,((18,52),((30,31),(61,63)))))),(15,(32,67))),(24,(39,44))),(9,((3,68),((56,(38,(64,(8,(46,48))))),(34,((10,29),(21,(55,(11,36)))))))))));
	TREE * extraState = [&R] (1,(41,(((((12,(66,(((((51,(2,(59,(57,((6,(54,(14,65))),(7,23)))))),(17,(16,(45,(50,((62,(27,43)),(49,60))))))),(25,26)),(5,(4,20))),(58,((33,(53,(40,((22,42),(28,35))))),(37,47)))))),(13,(19,((18,52),((30,31),(61,63)))))),(15,(32,67))),(24,(39,44))),(9,((3,68),((56,(38,(64,(48,(8,46))))),(34,((10,29),(21,(55,(11,36)))))))))));
	TREE * extraState = [&R] (1,(41,(((((12,(66,((((51,(2,(59,(57,((6,(65,(14,54))),(7,23)))))),((17,((16,45),(60,((27,(43,62)),(49,50))))),(25,26))),(5,(4,20))),(58,((33,(53,(40,((22,42),(28,35))))),(37,47)))))),(13,(19,((18,52),((30,31),(61,63)))))),(15,(32,67))),(24,(39,44))),(9,((3,68),(((38,(64,(8,(46,48)))),(29,56)),(34,(10,(21,(55,(11,36)))))))))));
	TREE * extraState = [&R] (1,(41,(((((12,(66,((((17,((51,(2,(59,((6,(65,(14,54))),(57,(7,23)))))),(25,26))),((16,45),(50,((62,(27,43)),(49,60))))),(5,(4,20))),(58,((53,(33,(40,((22,42),(28,35))))),(37,47)))))),(13,(19,((18,52),((30,31),(61,63)))))),(15,(32,67))),(24,(39,44))),(9,((3,68),((56,(38,(64,(48,(8,46))))),(34,((10,29),(21,(55,(11,36)))))))))));
	TREE * extraState = [&R] (1,(41,(((((12,(66,((((51,(2,(59,(57,((6,(65,(14,54))),(7,23)))))),((16,(17,(45,(60,((43,(27,62)),(49,50)))))),(25,26))),(5,(4,20))),(58,((53,(33,(40,((22,42),(28,35))))),(37,47)))))),(13,(19,((18,52),((30,31),(61,63)))))),(15,(32,67))),(24,(39,44))),(9,((3,68),(((38,(64,(48,(8,46)))),(29,56)),(34,(10,(21,(55,(11,36)))))))))));
	TREE * extraState = [&R] (1,(41,(((((12,(66,(((45,(16,((17,((51,(2,(59,((6,(65,(14,54))),(57,(7,23)))))),(25,26))),(60,(50,(49,(43,(27,62)))))))),(5,(4,20))),(58,((53,(33,(40,((22,42),(28,35))))),(37,47)))))),(13,(19,((18,52),((30,31),(61,63)))))),(15,(32,67))),(24,(39,44))),(9,((3,68),(((38,(64,(48,(8,46)))),(29,56)),(34,(10,(21,(55,(11,36)))))))))));
	TREE * extraState = [&R] (1,(41,(((((12,(66,(((((17,((51,(2,(59,(57,((6,(54,(14,65))),(7,23)))))),(25,26))),(60,(50,(49,(62,(27,43)))))),(16,45)),(5,(4,20))),(58,((33,(53,(40,((22,42),(28,35))))),(37,47)))))),(13,(19,((18,52),((30,31),(61,63)))))),(15,(32,67))),(24,(39,44))),(9,((3,68),((56,(38,(64,(48,(8,46))))),(34,((10,29),(21,(55,(11,36)))))))))));
	TREE * extraState = [&R] (1,(41,(((((12,(66,((((51,(2,(59,((6,(54,(14,65))),(57,(7,23)))))),((16,(17,(45,(60,((27,(43,62)),(49,50)))))),(25,26))),(5,(4,20))),(58,((33,(53,(40,((22,42),(28,35))))),(37,47)))))),(13,(19,((18,52),((30,31),(61,63)))))),(15,(32,67))),(24,(39,44))),(9,((3,68),(((38,(64,(48,(8,46)))),(29,56)),(34,(10,(21,(55,(11,36)))))))))));
	TREE * extraState = [&R] (1,(41,(((((12,(66,(((16,(45,((17,((51,(2,(59,(57,((6,(54,(14,65))),(7,23)))))),(25,26))),(50,(60,(49,(27,(43,62)))))))),(5,(4,20))),(58,((53,(33,(40,((22,42),(28,35))))),(37,47)))))),(13,(19,((18,52),((30,31),(61,63)))))),(15,(32,67))),(24,(39,44))),(9,((3,68),(((38,(64,(48,(8,46)))),(29,56)),(34,(10,(21,(55,(11,36)))))))))));
	TREE * extraState = [&R] (1,(41,(((((12,(66,((((51,(2,(59,(57,((6,(54,(14,65))),(7,23)))))),((17,((16,45),(50,((43,(27,62)),(49,60))))),(25,26))),(5,(4,20))),(58,((53,(33,(40,((22,42),(28,35))))),(37,47)))))),(13,(19,((18,52),((30,31),(61,63)))))),(15,(32,67))),(24,(39,44))),(9,((3,68),(((38,(64,(8,(46,48)))),(29,56)),(34,(10,(21,(55,(11,36)))))))))));
	TREE * extraState = [&R] (1,(41,(((((12,(66,(((((17,((51,(2,(59,(57,((6,(54,(14,65))),(7,23)))))),(25,26))),(60,(50,(49,(43,(27,62)))))),(16,45)),(5,(4,20))),(58,((53,(33,(40,((22,42),(28,35))))),(37,47)))))),(13,(19,((18,52),((30,31),(61,63)))))),(15,(32,67))),(24,(39,44))),(9,((3,68),((56,(38,(64,(8,(46,48))))),(34,((10,29),(21,(55,(11,36)))))))))));
	TREE * extraState = [&R] (1,(41,(((((12,(66,((((51,(2,(59,((6,(65,(14,54))),(57,(7,23)))))),((17,(45,(16,(60,((27,(43,62)),(49,50)))))),(25,26))),(5,(4,20))),(58,((53,(33,(40,((22,42),(28,35))))),(37,47)))))),(13,(19,((18,52),((30,31),(61,63)))))),(15,(32,67))),(24,(39,44))),(9,((3,68),(((38,(64,(8,(46,48)))),(29,56)),(34,(10,(21,(55,(11,36)))))))))));
	TREE * extraState = [&R] (1,(41,(((((12,(66,(((((51,(2,(59,((6,(54,(14,65))),(57,(7,23)))))),(17,(45,(16,(50,((62,(27,43)),(49,60))))))),(25,26)),(5,(4,20))),(58,((33,(53,(40,((22,42),(28,35))))),(37,47)))))),(13,(19,((18,52),((30,31),(61,63)))))),(15,(32,67))),(24,(39,44))),(9,((3,68),(((38,(64,(8,(46,48)))),(29,56)),(34,(10,(21,(55,(11,36)))))))))));
	TREE * extraState = [&R] (1,(41,(((((12,(66,(((((17,(51,(2,(59,(57,((6,(54,(14,65))),(7,23))))))),(16,(45,(50,(60,(49,(27,(43,62)))))))),(25,26)),(5,(4,20))),(58,((53,(33,(40,((22,42),(28,35))))),(37,47)))))),(13,(19,((18,52),((30,31),(61,63)))))),(15,(32,67))),(24,(39,44))),(9,((3,68),(((38,(64,(48,(8,46)))),(29,56)),(34,(10,(21,(55,(11,36)))))))))));
	TREE * extraState = [&R] (1,(41,(((((12,(66,(((((17,(51,(2,(59,((6,(54,(14,65))),(57,(7,23))))))),(16,(45,(60,(50,(49,(62,(27,43)))))))),(25,26)),(5,(4,20))),(58,((53,(33,(40,((22,42),(28,35))))),(37,47)))))),(13,(19,((18,52),((30,31),(61,63)))))),(15,(32,67))),(24,(39,44))),(9,((3,68),(((38,(64,(8,(46,48)))),(29,56)),(34,(10,(21,(55,(11,36)))))))))));
	TREE * extraState = [&R] (1,(41,(((((12,(66,((((17,((51,(2,(59,(57,((6,(65,(14,54))),(7,23)))))),(25,26))),((16,45),(60,(50,(49,(27,(43,62))))))),(5,(4,20))),(58,((33,(53,(40,((22,42),(28,35))))),(37,47)))))),(13,(19,((18,52),((30,31),(61,63)))))),(15,(32,67))),(24,(39,44))),(9,((3,68),(((38,(64,(8,(46,48)))),(29,56)),(34,(10,(21,(55,(11,36)))))))))));
	TREE * extraState = [&R] (1,(41,(((((12,(66,(((((51,(2,(59,((6,(54,(14,65))),(57,(7,23)))))),(17,(16,(45,(60,((43,(27,62)),(49,50))))))),(25,26)),(5,(4,20))),(58,((53,(33,(40,((22,42),(28,35))))),(37,47)))))),(13,(19,((18,52),((30,31),(61,63)))))),(15,(32,67))),(24,(39,44))),(9,((3,68),(((38,(64,(48,(8,46)))),(29,56)),(34,(10,(21,(55,(11,36)))))))))));
	TREE * extraState = [&R] (1,(41,(((((12,(66,((((17,((51,(2,(59,(57,((6,(54,(14,65))),(7,23)))))),(25,26))),(16,(45,(60,((62,(27,43)),(49,50)))))),(5,(4,20))),(58,((53,(33,(40,((22,42),(28,35))))),(37,47)))))),(13,(19,((18,52),((30,31),(61,63)))))),(15,(32,67))),(24,(39,44))),(9,((3,68),((56,(38,(64,(48,(8,46))))),(34,((10,29),(21,(55,(11,36)))))))))));
	TREE * extraState = [&R] (1,(41,(((((12,(66,((((51,(2,(59,(57,((6,(65,(14,54))),(7,23)))))),((16,(17,(45,(60,((27,(43,62)),(49,50)))))),(25,26))),(5,(4,20))),(58,((33,(53,(40,((22,42),(28,35))))),(37,47)))))),(13,(19,((18,52),((30,31),(61,63)))))),(15,(32,67))),(24,(39,44))),(9,((3,68),(((38,(64,(8,(46,48)))),(29,56)),(34,(10,(21,(55,(11,36)))))))))));
	TREE * extraState = [&R] (1,(41,(((((12,(66,((20,(4,(5,((45,(17,(16,((51,(2,(59,(57,((6,(54,(14,65))),(7,23)))))),(25,26))))),(50,((62,(27,43)),(49,60))))))),(58,((33,(53,(40,((22,42),(28,35))))),(37,47)))))),(13,(19,((18,52),((30,31),(61,63)))))),(15,(32,67))),(24,(39,44))),(9,((3,68),((56,(38,(64,(48,(8,46))))),(34,((10,29),(21,(55,(11,36)))))))))));
	TREE * extraState = [&R] (1,(41,(((((12,(66,((((17,((51,(2,(59,((6,(54,(14,65))),(57,(7,23)))))),(25,26))),(45,(16,(60,((43,(27,62)),(49,50)))))),(5,(4,20))),(58,((33,(53,(40,((22,42),(28,35))))),(37,47)))))),(13,(19,((18,52),((30,31),(61,63)))))),(15,(32,67))),(24,(39,44))),(9,((3,68),(((38,(64,(8,(46,48)))),(29,56)),(34,(10,(21,(55,(11,36)))))))))));
	TREE * extraState = [&R] (1,(41,(((((12,(66,((((17,((51,(2,(59,((6,(54,(14,65))),(57,(7,23)))))),(25,26))),(45,(16,(60,((62,(27,43)),(49,50)))))),(5,(4,20))),(58,((53,(33,(40,((22,42),(28,35))))),(37,47)))))),(13,(19,((18,52),((30,31),(61,63)))))),(15,(32,67))),(24,(39,44))),(9,((3,68),((56,(38,(64,(8,(46,48))))),(34,((10,29),(21,(55,(11,36)))))))))));
	TREE * extraState = [&R] (1,(41,(((((12,(66,((((51,(2,(59,(57,((6,(54,(14,65))),(7,23)))))),((16,(17,(45,(50,((62,(27,43)),(49,60)))))),(25,26))),(5,(4,20))),(58,((53,(33,(40,((22,42),(28,35))))),(37,47)))))),(13,(19,((18,52),((30,31),(61,63)))))),(15,(32,67))),(24,(39,44))),(9,((3,68),(((38,(64,(48,(8,46)))),(29,56)),(34,(10,(21,(55,(11,36)))))))))));
	TREE * inapplicable = [&R] (1,(41,(((9,(29,((34,(10,(21,(55,(11,36))))),(56,(38,(64,(8,(48,46)))))))),(68,3)),(((15,(67,32)),(12,(66,((58,((37,47),(33,(53,(40,((42,22),(28,35))))))),(((17,(45,(16,((51,(2,(59,((6,(54,(14,65))),(57,(23,7)))))),(60,(50,(49,(27,(43,62))))))))),(26,25)),(5,(4,20))))))),(24,(39,(44,(18,((19,(52,(63,61))),(13,(31,30)))))))))));
	TREE * inapplicable = [&R] (1,(41,(((9,(29,((34,(10,(21,(55,(11,36))))),(56,(38,(64,(8,(46,48)))))))),(68,3)),(((12,(66,((58,((47,37),(53,(33,(40,((42,22),(35,28))))))),((5,(4,20)),((17,((16,45),((60,(50,(49,(27,(62,43))))),(51,(2,(59,((57,(7,23)),(6,(54,(14,65)))))))))),(26,25)))))),(15,(32,67))),((39,24),(44,(18,((13,(30,31)),(19,(52,(61,63)))))))))));
	TREE * inapplicable = [&R] (1,(41,(((68,3),(9,(29,((34,(10,(21,(55,(36,11))))),(56,(38,(64,(48,(46,8))))))))),(((24,39),(44,(18,((13,(31,30)),(19,(52,(63,61))))))),((32,(15,67)),(12,(66,((58,((37,47),(53,(33,(40,((22,42),(28,35))))))),(((17,((16,45),((60,((50,49),(27,(43,62)))),(51,(2,(59,((57,(23,7)),(6,(54,(65,14)))))))))),(26,25)),(5,(20,4)))))))))));
	TREE * inapplicable = [&R] (1,(41,(((68,3),(9,(29,((56,(38,(64,(48,(46,8))))),(34,(10,(21,(55,(36,11))))))))),((24,(39,(44,(18,((13,(31,30)),(19,(52,(63,61)))))))),((12,(66,((58,((37,47),(53,(33,(40,((22,42),(28,35))))))),((5,(20,4)),((26,25),(16,(17,(45,((60,((27,(43,62)),(49,50))),(51,(2,(59,((57,(7,23)),(6,(54,(65,14)))))))))))))))),(15,(32,67)))))));
	TREE * inapplicable = [&R] (1,(41,((9,(((34,(10,(21,(55,(36,11))))),((29,56),(38,(64,(48,(46,8)))))),(68,3))),(((12,(66,((58,((37,47),(33,(53,(40,((22,42),(35,28))))))),((5,(4,20)),(((16,(45,17)),((51,(2,(59,((57,(23,7)),(6,(54,(65,14))))))),(60,(50,(49,(27,(62,43))))))),(25,26)))))),(15,(32,67))),((24,39),(44,(18,((13,(30,31)),(19,(52,(61,63)))))))))));
	TREE * inapplicable = [&R] (1,(41,(((9,((34,(10,(21,(55,(11,36))))),((56,29),(38,(64,(8,(46,48))))))),(3,68)),(((12,(66,((58,((33,(53,(40,((22,42),(28,35))))),(47,37))),(((26,25),(17,(16,(45,((60,((49,50),(27,(62,43)))),(51,(2,(59,((57,(23,7)),(6,(54,(65,14)))))))))))),(5,(20,4)))))),(32,(67,15))),((39,24),(44,(18,((13,(31,30)),(19,(52,(63,61)))))))))));
	TREE * inapplicable = [&R] (1,(41,((9,(((34,((10,29),(21,(55,(11,36))))),(56,(38,(64,(8,(46,48)))))),(68,3))),(((15,(32,67)),(12,(66,((58,((47,37),(33,(53,(40,((42,22),(35,28))))))),((5,(20,4)),((17,((16,45),((60,((49,50),(27,(62,43)))),(51,(2,(59,((57,(23,7)),(6,(54,(14,65)))))))))),(26,25))))))),(24,(39,(44,(18,((19,(52,(63,61))),(13,(30,31)))))))))));
	TREE * inapplicable = [&R] (1,(41,((9,((((38,(64,(48,(46,8)))),(29,56)),(34,(10,(21,(55,(36,11)))))),(68,3))),((24,(39,(44,(18,((13,(31,30)),(19,(52,(63,61)))))))),((15,(67,32)),(12,(66,((58,((37,47),(33,(53,(40,((22,42),(28,35))))))),(((16,(45,(17,((60,((50,49),(27,(62,43)))),(51,(2,(59,((57,(23,7)),(6,(54,(65,14))))))))))),(26,25)),(5,(20,4)))))))))));
	TREE * inapplicable = [&R] (1,(41,(((3,68),(9,((56,(38,(64,(8,(46,48))))),(34,((29,10),(21,(55,(11,36)))))))),((24,(39,(44,(18,((19,(52,(63,61))),(13,(31,30))))))),((32,(15,67)),(12,(66,((58,((47,37),(53,(33,(40,((42,22),(28,35))))))),(((16,(45,(17,((60,(50,(49,(27,(62,43))))),(51,(2,(59,((57,(7,23)),(6,(54,(14,65))))))))))),(26,25)),(5,(20,4)))))))))));
	TREE * inapplicable = [&R] (1,(41,(((9,(29,((34,(10,(21,(55,(36,11))))),(56,(38,(64,(8,(48,46)))))))),(3,68)),((24,(39,(44,(18,((19,(52,(63,61))),(13,(30,31))))))),((15,(67,32)),(12,(66,((58,((37,47),(33,(53,(40,((28,35),(42,22))))))),(((25,26),(45,(16,(17,((51,(2,(59,((57,(7,23)),(6,(54,(14,65))))))),(60,((49,50),(27,(43,62))))))))),(5,(4,20)))))))))));
	TREE * inapplicable = [&R] (1,(41,(((9,((34,(10,(21,(55,(11,36))))),((29,56),(38,(64,(8,(48,46))))))),(3,68)),(((12,(66,((58,((33,(53,(40,((22,42),(28,35))))),(47,37))),((5,(4,20)),((26,25),(17,(45,(16,((60,(50,(49,(27,(62,43))))),(51,(2,(59,((57,(7,23)),(6,(54,(65,14)))))))))))))))),(15,(67,32))),(24,(39,(44,(18,((13,(31,30)),(19,(52,(63,61))))))))))));
	TREE * inapplicable = [&R] (1,(41,(((9,((34,(10,(21,(55,(11,36))))),((29,56),(38,(64,(48,(46,8))))))),(3,68)),(((12,(66,((58,((47,37),(53,(33,(40,((22,42),(35,28))))))),((((45,(17,16)),((51,(2,(59,((57,(7,23)),(6,(54,(14,65))))))),(60,(50,(49,(27,(62,43))))))),(25,26)),(5,(4,20)))))),(15,(32,67))),(24,(39,(44,(18,((19,(52,(63,61))),(13,(30,31)))))))))));
	TREE * inapplicable = [&R] (1,(41,(((9,(29,((34,(10,(21,(55,(36,11))))),(56,(38,(64,(8,(48,46)))))))),(68,3)),(((12,(66,((58,((37,47),(53,(33,(40,((42,22),(28,35))))))),((((45,(17,16)),((51,(2,(59,((57,(23,7)),(6,(54,(65,14))))))),(60,(50,(49,(27,(62,43))))))),(26,25)),(5,(4,20)))))),(32,(15,67))),((39,24),(44,(18,((13,(31,30)),(19,(52,(61,63)))))))))));
	TREE * inapplicable = [&R] (1,(41,(((9,(29,((34,(10,(21,(55,(11,36))))),(56,(38,(64,(8,(46,48)))))))),(68,3)),(((12,(66,((58,((47,37),(33,(53,(40,((22,42),(28,35))))))),((5,(4,20)),((25,26),((16,17),(45,((51,(2,(59,((57,(23,7)),(6,(54,(65,14))))))),(60,((49,50),(27,(43,62)))))))))))),(15,(32,67))),((39,24),(44,(18,((13,(31,30)),(19,(52,(63,61)))))))))));
	TREE * inapplicable = [&R] (1,(41,(((9,((34,(10,(21,(55,(11,36))))),((29,56),(38,(64,(48,(46,8))))))),(68,3)),(((15,(67,32)),(12,(66,((58,((37,47),(33,(53,(40,((42,22),(28,35))))))),((5,(4,20)),(((17,((51,(2,(59,((6,(54,(14,65))),(57,(7,23)))))),(60,((50,49),(27,(43,62)))))),(45,16)),(26,25))))))),((39,24),(44,(18,((13,(31,30)),(19,(52,(63,61)))))))))));
	TREE * inapplicable = [&R] (1,(41,(((68,3),(9,((34,((21,(55,(36,11))),(29,10))),(56,(38,(64,(48,(8,46)))))))),((24,(39,(44,(18,((13,(31,30)),(19,(52,(63,61)))))))),((12,(66,((58,((37,47),(53,(33,(40,((22,42),(28,35))))))),((5,(20,4)),((16,(45,(17,((60,((50,49),(27,(62,43)))),(51,(2,(59,((57,(7,23)),(6,(54,(65,14))))))))))),(26,25)))))),(15,(67,32)))))));
	TREE * inapplicable = [&R] (1,(41,((9,(((34,(10,(21,(55,(11,36))))),((29,56),(38,(64,(48,(8,46)))))),(68,3))),(((12,(66,((58,((37,47),(33,(53,(40,((22,42),(28,35))))))),((5,(20,4)),((17,(16,(45,((51,(2,(59,((57,(7,23)),(6,(54,(14,65))))))),(60,((50,49),(27,(43,62)))))))),(26,25)))))),(15,(67,32))),(24,(39,(44,(18,((13,(31,30)),(19,(52,(63,61))))))))))));
	TREE * inapplicable = [&R] (1,(41,(((9,(29,((34,(10,(21,(55,(11,36))))),(56,(38,(64,(48,(46,8)))))))),(3,68)),(((12,(66,((58,((33,(53,(40,((22,42),(28,35))))),(47,37))),((5,(4,20)),((26,25),((17,(16,45)),((60,((49,50),(27,(62,43)))),(51,(2,(59,((57,(7,23)),(6,(54,(65,14)))))))))))))),(15,(32,67))),((39,24),(44,(18,((13,(31,30)),(19,(52,(63,61)))))))))));
	TREE * inapplicable = [&R] (1,(41,(((9,(29,((34,(10,(21,(55,(11,36))))),(56,(38,(64,(8,(48,46)))))))),(68,3)),(((39,24),(44,(18,((13,(30,31)),(19,(52,(61,63))))))),((12,(66,((58,((47,37),(53,(33,(40,((22,42),(35,28))))))),((5,(4,20)),(((45,(16,17)),((51,(2,(59,((57,(7,23)),(6,(54,(14,65))))))),(60,((50,49),(27,(43,62)))))),(25,26)))))),(15,(32,67)))))));
	TREE * inapplicable = [&R] (1,(41,((9,(((34,(10,(21,(55,(36,11))))),((29,56),(38,(64,(8,(48,46)))))),(3,68))),(((15,(32,67)),(12,(66,((58,((33,(53,(40,((22,42),(28,35))))),(37,47))),((5,(4,20)),((25,26),((17,(45,16)),((60,((50,49),(27,(43,62)))),(51,(2,(59,((57,(23,7)),(6,(54,(14,65))))))))))))))),(24,(39,(44,(18,((13,(31,30)),(19,(52,(61,63))))))))))));
	TREE * inapplicable = [&R] (1,(41,(((9,(29,((56,(38,(64,(48,(8,46))))),(34,(10,(21,(55,(36,11)))))))),(3,68)),(((12,(66,((58,((37,47),(33,(53,(40,((42,22),(35,28))))))),((5,(4,20)),((26,25),(17,(16,(45,((51,(2,(59,((57,(23,7)),(6,(54,(14,65))))))),(60,(50,(49,(27,(43,62)))))))))))))),(32,(67,15))),(24,(39,(44,(18,((13,(30,31)),(19,(52,(63,61))))))))))));
	TREE * inapplicable = [&R] (1,(41,(((9,((34,(10,(21,(55,(36,11))))),((29,56),(38,(64,(48,(46,8))))))),(68,3)),(((12,(66,((58,((37,47),(33,(53,(40,((42,22),(28,35))))))),(((17,((16,45),((51,(2,(59,((57,(7,23)),(6,(54,(65,14))))))),(60,((49,50),(27,(62,43))))))),(26,25)),(5,(4,20)))))),(32,(15,67))),((24,39),(44,(18,((13,(31,30)),(19,(52,(61,63)))))))))));
	TREE * inapplicable = [&R] (1,(41,(((68,3),(9,(29,((34,(10,(21,(55,(11,36))))),(56,(38,(64,(48,(8,46))))))))),((24,(39,(44,(18,((19,(52,(61,63))),(13,(31,30))))))),((32,(15,67)),(12,(66,((58,((47,37),(33,(53,(40,((35,28),(22,42))))))),(((26,25),(17,((45,16),((60,(50,(49,(27,(62,43))))),(51,(2,(59,((6,(54,(65,14))),(57,(7,23)))))))))),(5,(20,4)))))))))));
	TREE * inapplicable = [&R] (1,(41,(((68,3),(9,(29,((34,(10,(21,(55,(36,11))))),(56,(38,(64,(48,(46,8))))))))),((24,(39,(44,(18,((13,(31,30)),(19,(52,(63,61)))))))),((32,(15,67)),(12,(66,((58,((37,47),(33,(53,(40,((22,42),(28,35))))))),((((17,(16,45)),((60,((50,49),(27,(43,62)))),(51,(2,(59,((57,(23,7)),(6,(54,(65,14))))))))),(26,25)),(5,(20,4)))))))))));
	TREE * inapplicable = [&R] (1,(41,(((3,68),(9,((34,((21,(55,(11,36))),(10,29))),(56,(38,(64,(8,(48,46)))))))),(((15,(32,67)),(12,(66,((58,((47,37),(33,(53,(40,((42,22),(35,28))))))),((5,(20,4)),((26,25),(17,((45,16),((60,((49,50),(27,(43,62)))),(51,(2,(59,((6,(54,(14,65))),(57,(23,7))))))))))))))),((24,39),(44,(18,((13,(30,31)),(19,(52,(63,61)))))))))));
	TREE * inapplicable = [&R] (1,(41,((((12,(66,((58,((47,37),(53,(33,(40,((42,22),(35,28))))))),(((17,((16,45),((60,((49,50),(27,(43,62)))),(51,(2,(59,((57,(7,23)),(6,(54,(65,14)))))))))),(25,26)),(5,(4,20)))))),(32,(15,67))),((24,39),(44,(18,((13,(30,31)),(19,(52,(61,63)))))))),((9,((34,((21,(55,(11,36))),(10,29))),(56,(38,(64,(48,(46,8))))))),(3,68)))));
	TREE * inapplicable = [&R] (1,(41,(((9,(29,((56,(38,(64,(48,(46,8))))),(34,(10,(21,(55,(11,36)))))))),(68,3)),((24,(39,(44,(18,((13,(30,31)),(19,(52,(63,61)))))))),((15,(67,32)),(12,(66,((58,((53,(33,(40,((22,42),(35,28))))),(47,37))),((((16,((51,(2,(59,((57,(7,23)),(6,(54,(14,65))))))),(60,(50,(49,(27,(43,62))))))),(17,45)),(26,25)),(5,(20,4)))))))))));
	TREE * inapplicable = [&R] (1,(41,(((9,((34,((21,(55,(36,11))),(29,10))),(56,(38,(64,(48,(46,8))))))),(3,68)),(((32,(67,15)),(12,(66,((58,((33,(53,(40,((42,22),(35,28))))),(37,47))),(((17,(16,(45,((51,(2,(59,((57,(23,7)),(6,(54,(65,14))))))),(60,((49,50),(27,(43,62)))))))),(25,26)),(5,(4,20))))))),((24,39),(44,(18,((13,(30,31)),(19,(52,(61,63)))))))))));
	TREE * inapplicable = [&R] (1,(41,(((9,((34,((21,(55,(11,36))),(10,29))),(56,(38,(64,(8,(46,48))))))),(68,3)),(((15,(67,32)),(12,(66,((58,((47,37),(53,(33,(40,((22,42),(28,35))))))),((5,(20,4)),((25,26),(16,((45,17),((51,(2,(59,((57,(23,7)),(6,(54,(65,14))))))),(60,((49,50),(27,(62,43))))))))))))),(24,(39,(44,(18,((13,(31,30)),(19,(52,(61,63))))))))))));
	TREE * inapplicable = [&R] (1,(41,(((24,(39,(44,(18,((19,(52,(61,63))),(13,(30,31))))))),((32,(67,15)),(12,(66,((58,((37,47),(53,(33,(40,((42,22),(35,28))))))),((((17,45),(16,((60,((49,50),(27,(43,62)))),(51,(2,(59,((6,(54,(65,14))),(57,(23,7))))))))),(25,26)),(5,(4,20)))))))),((9,(29,((34,(10,(21,(55,(36,11))))),(56,(38,(64,(48,(8,46)))))))),(3,68)))));
	TREE * inapplicable = [&R] (1,(41,((((12,(66,((58,((53,(33,(40,((42,22),(35,28))))),(47,37))),(((45,(17,(16,((60,(50,(49,(27,(62,43))))),(51,(2,(59,((57,(7,23)),(6,(54,(65,14))))))))))),(25,26)),(5,(4,20)))))),(32,(67,15))),(24,(39,(44,(18,((19,(52,(63,61))),(13,(30,31)))))))),((9,((34,((21,(55,(11,36))),(10,29))),(56,(38,(64,(48,(46,8))))))),(3,68)))));
	TREE * inapplicable = [&R] (1,(41,(((9,(29,((34,(10,(21,(55,(36,11))))),(56,(38,(64,(48,(8,46)))))))),(68,3)),(((12,(66,(((5,(20,4)),((17,((16,45),((60,(50,(49,(27,(43,62))))),(51,(2,(59,((57,(7,23)),(6,(54,(14,65)))))))))),(26,25))),(58,((47,37),(33,(53,(40,((35,28),(42,22)))))))))),(15,(67,32))),(24,(39,(44,(18,((13,(30,31)),(19,(52,(63,61))))))))))));
	TREE * inapplicable = [&R] (1,(41,(((9,((34,(10,(21,(55,(11,36))))),((56,29),(38,(64,(48,(46,8))))))),(68,3)),(((24,39),(44,(18,((19,(52,(61,63))),(13,(31,30)))))),((15,(67,32)),(12,(66,((58,((47,37),(33,(53,(40,((28,35),(22,42))))))),((5,(20,4)),(((45,(16,17)),((60,((50,49),(27,(43,62)))),(51,(2,(59,((57,(7,23)),(6,(54,(65,14))))))))),(26,25)))))))))));
	TREE * inapplicable = [&R] (1,(41,(((9,(29,((34,(10,(21,(55,(11,36))))),(56,(38,(64,(8,(46,48)))))))),(68,3)),(((15,(67,32)),(12,(66,((58,((33,(53,(40,((42,22),(35,28))))),(47,37))),((5,(20,4)),((26,25),(16,(17,(45,((60,(50,(49,(27,(62,43))))),(51,(2,(59,((57,(23,7)),(6,(54,(65,14))))))))))))))))),((24,39),(44,(18,((13,(30,31)),(19,(52,(63,61)))))))))));
	TREE * inapplicable = [&R] (1,(41,(((9,(29,((34,(10,(21,(55,(11,36))))),(56,(38,(64,(48,(46,8)))))))),(3,68)),(((12,(66,((58,((53,(33,(40,((42,22),(28,35))))),(47,37))),((5,(4,20)),((45,((16,17),((51,(2,(59,((57,(7,23)),(6,(54,(14,65))))))),(60,((49,50),(27,(62,43))))))),(26,25)))))),(32,(67,15))),(24,(39,(44,(18,((13,(31,30)),(19,(52,(63,61))))))))))));
	TREE * inapplicable = [&R] (1,(41,(((9,((34,((21,(55,(11,36))),(29,10))),(56,(38,(64,(48,(8,46))))))),(3,68)),(((24,39),(44,(18,((13,(30,31)),(19,(52,(63,61))))))),((12,(66,(((5,(4,20)),((26,25),(16,((45,17),((60,(50,(49,(27,(62,43))))),(51,(2,(59,((57,(23,7)),(6,(54,(65,14)))))))))))),(58,((47,37),(33,(53,(40,((42,22),(35,28)))))))))),(32,(15,67)))))));
	TREE * inapplicable = [&R] (1,(41,(((9,((34,(10,(21,(55,(11,36))))),((29,56),(38,(64,(48,(46,8))))))),(3,68)),(((32,(15,67)),(12,(66,((58,((37,47),(53,(33,(40,((22,42),(28,35))))))),((5,(4,20)),((45,((16,17),((60,(50,(49,(27,(62,43))))),(51,(2,(59,((57,(23,7)),(6,(54,(65,14)))))))))),(26,25))))))),((39,24),(44,(18,((19,(52,(61,63))),(13,(30,31))))))))));
	TREE * inapplicable = [&R] (1,(41,(((9,((34,((10,29),(21,(55,(11,36))))),(56,(38,(64,(8,(46,48))))))),(68,3)),((24,(39,(44,(18,((13,(30,31)),(19,(52,(63,61)))))))),((15,(32,67)),(12,(66,((58,((47,37),(53,(33,(40,((22,42),(35,28))))))),((5,(20,4)),((16,(45,(17,((51,(2,(59,((57,(7,23)),(6,(54,(65,14))))))),(60,((50,49),(27,(62,43)))))))),(25,26)))))))))));
	TREE * inapplicable = [&R] (1,(41,(((9,(29,((34,(10,(21,(55,(11,36))))),(56,(38,(64,(48,(46,8)))))))),(3,68)),((24,(39,(44,(18,((19,(52,(63,61))),(13,(30,31))))))),((12,(66,((58,((47,37),(53,(33,(40,((42,22),(35,28))))))),((5,(4,20)),(((17,45),(16,((51,(2,(59,((57,(7,23)),(6,(54,(65,14))))))),(60,((50,49),(27,(62,43))))))),(25,26)))))),(15,(67,32)))))));
	TREE * inapplicable = [&R] (1,(41,((9,(((34,(10,(21,(55,(36,11))))),((56,29),(38,(64,(48,(8,46)))))),(3,68))),((24,(39,(44,(18,((19,(52,(63,61))),(13,(30,31))))))),((15,(32,67)),(12,(66,((58,((37,47),(33,(53,(40,((28,35),(42,22))))))),((5,(4,20)),((16,((17,45),((60,(50,(49,(27,(43,62))))),(51,(2,(59,((57,(23,7)),(6,(54,(14,65)))))))))),(25,26)))))))))));
	TREE * inapplicable = [&R] (1,(41,(((9,((34,((29,10),(21,(55,(36,11))))),(56,(38,(64,(48,(46,8))))))),(3,68)),(((12,(66,((((16,(45,(17,((60,((50,49),(27,(43,62)))),(51,(2,(59,((57,(7,23)),(6,(54,(14,65))))))))))),(26,25)),(5,(20,4))),(58,((37,47),(53,(33,(40,((35,28),(42,22)))))))))),(15,(32,67))),((24,39),(44,(18,((13,(30,31)),(19,(52,(63,61)))))))))));
	TREE * inapplicable = [&R] (1,(41,(((9,(29,((34,(10,(21,(55,(11,36))))),(56,(38,(64,(48,(46,8)))))))),(3,68)),(((12,(66,((58,((37,47),(33,(53,(40,((22,42),(28,35))))))),(((25,26),((16,((60,(50,(49,(27,(62,43))))),(51,(2,(59,((57,(23,7)),(6,(54,(65,14))))))))),(17,45))),(5,(20,4)))))),(32,(67,15))),(24,(39,(44,(18,((13,(30,31)),(19,(52,(61,63))))))))))));
	TREE * inapplicable = [&R] (1,(41,(((9,(29,((56,(38,(64,(8,(46,48))))),(34,(10,(21,(55,(11,36)))))))),(68,3)),((24,(39,(44,(18,((19,(52,(63,61))),(13,(30,31))))))),((32,(15,67)),(12,(66,((58,((47,37),(33,(53,(40,((22,42),(35,28))))))),(((45,((16,17),((60,((49,50),(27,(43,62)))),(51,(2,(59,((57,(7,23)),(6,(54,(14,65)))))))))),(26,25)),(5,(20,4)))))))))));
	TREE * inapplicable = [&R] (1,(41,(((9,((34,((29,10),(21,(55,(36,11))))),(56,(38,(64,(48,(8,46))))))),(68,3)),((24,(39,(44,(18,((13,(30,31)),(19,(52,(61,63)))))))),((12,(66,((58,((53,(33,(40,((42,22),(35,28))))),(37,47))),(((25,26),(16,(17,(45,((60,(50,(49,(27,(43,62))))),(51,(2,(59,((57,(7,23)),(6,(54,(65,14)))))))))))),(5,(4,20)))))),(15,(32,67)))))));
	TREE * inapplicable = [&R] (1,(41,((9,((3,68),((34,(10,(21,(55,(11,36))))),((56,29),(38,(64,(8,(46,48)))))))),(((12,(66,((58,((53,(33,(40,((22,42),(28,35))))),(47,37))),(((26,25),((16,((60,((49,50),(27,(62,43)))),(51,(2,(59,((57,(23,7)),(6,(54,(65,14))))))))),(45,17))),(5,(20,4)))))),(15,(67,32))),((24,39),(44,(18,((13,(31,30)),(19,(52,(63,61)))))))))));
	TREE * inapplicable = [&R] (1,(41,(((9,((56,(38,(64,(8,(48,46))))),(34,((29,10),(21,(55,(36,11))))))),(68,3)),(((32,(15,67)),(12,(66,((58,((53,(33,(40,((42,22),(28,35))))),(37,47))),((5,(4,20)),((25,26),(16,(45,(17,((60,((50,49),(27,(62,43)))),(51,(2,(59,((57,(7,23)),(6,(54,(14,65))))))))))))))))),(24,(39,(44,(18,((13,(31,30)),(19,(52,(61,63))))))))))));
	TREE * inapplicable = [&R] (1,(41,(((9,((34,(10,(21,(55,(11,36))))),((29,56),(38,(64,(8,(48,46))))))),(68,3)),(((12,(66,(((5,(4,20)),(((17,(45,16)),((60,(50,(49,(27,(62,43))))),(51,(2,(59,((57,(7,23)),(6,(54,(14,65))))))))),(26,25))),(58,((33,(53,(40,((42,22),(35,28))))),(47,37)))))),(32,(67,15))),(24,(39,(44,(18,((19,(52,(63,61))),(13,(30,31)))))))))));
	TREE * inapplicable = [&R] (1,(41,(((3,68),(9,((34,(10,(21,(55,(11,36))))),((56,29),(38,(64,(8,(46,48)))))))),(((32,(67,15)),(12,(66,((58,((47,37),(33,(53,(40,((42,22),(35,28))))))),((5,(20,4)),((26,25),(17,(16,(45,((60,(50,(49,(27,(43,62))))),(51,(2,(59,((6,(54,(14,65))),(57,(23,7)))))))))))))))),(24,(39,(44,(18,((13,(30,31)),(19,(52,(63,61))))))))))));
	TREE * inapplicable = [&R] (1,(41,((9,(((34,((29,10),(21,(55,(36,11))))),(56,(38,(64,(48,(46,8)))))),(68,3))),(((39,24),(44,(18,((13,(30,31)),(19,(52,(61,63))))))),((15,(67,32)),(12,(66,((58,((37,47),(33,(53,(40,((22,42),(35,28))))))),(((45,((16,17),((51,(2,(59,((57,(7,23)),(6,(54,(14,65))))))),(60,(50,(49,(27,(62,43)))))))),(25,26)),(5,(20,4)))))))))));
	TREE * inapplicable = [&R] (1,(41,((((12,(66,((58,((37,47),(33,(53,(40,((22,42),(28,35))))))),(((45,(16,(17,((51,(2,(59,((57,(23,7)),(6,(54,(65,14))))))),(60,(50,(49,(27,(43,62))))))))),(26,25)),(5,(4,20)))))),(15,(32,67))),(24,(39,(44,(18,((13,(31,30)),(19,(52,(61,63))))))))),((9,(29,((34,(10,(21,(55,(36,11))))),(56,(38,(64,(48,(8,46)))))))),(3,68)))));
END;
