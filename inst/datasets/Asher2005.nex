#NEXUS
begin data;
  dimensions ntax=23 nchar=126;
  format datatype=standard gap=- missing=? Interleave=no SYMBOLS= "01234";
  matrix
    Blarina_brevicauda         00010100100011011010011100020000-000011000101000111011?1-110?11010??0010000000100400000-02301?10001010101001000000010111101010
    Canis_familiaris           111?10-0101011001110000120021101100101000100001-100-10000000011011302011000001--1000000-02210000010201-00010-10100011000000000
    Chrysochloris              100-01001?000-011110101021021110-00000000001-101010?11201001?10010310110211010112111100-?21000010?100000010110001010-011101110
    Crocidura_russula          00010100100010011111011100020000-000011000101?0?11101101-011?110?03300100000?0100400000-02301?10011000101001000000010111101010
    Didelphis                  111010-010000-00?000000120020000-00001000001-01-110210000000101011412000001110111000010-0121010101000000000100010000-0000000?0
    Echinops_telfairi          0001000100010-001010100120020010-10001001010110001111121-001011010212110211101--221110111-2001010100000000010?010010-010000010
    Elephantulus_rufescens     1001111110001000001000102012121?0001000101100001110110000101110111300110000001--1001000-?2200101010000100000-11-00011100001000
    Erinaceus_europaeus        100?000010?0110110101000200200??01001001010010011101102000001111103100100000000-0301000-02210101020000000010-1000000-011011001
    Erythrozootes              ?????????????????????????????????????????????0??0???11???100?????021011020110010???1101100???????????????????????????????????0
    Geogale                    0001001100101000001011102002001110?101001010100001101121-11011101021001021111010030110110020000001000000001101010000-011000??1
    Hemicentetes               001110-11010110010101?0120020001100001001000110001111121-201?1001131?000211110111100100-0120010101000000000100010110-011000010
    Limnogale                  ????????????????????1110000200?1101100001010100101100-21-10121101031011021111010210110110011000001000000000100010000-011001010
    Microgale_talazaci         000?000100101000101011102002001110?100001010100?01101121-10111101031?01021111010210110110011000101000000100100010000-011001010
    Micropotamogale            00010001101010101110101010110001101101001010100101100-21-1012110103101102011101021?1101101310000010201-1-011000100011011101010
    Orycteropus_afer           101011-??00011001?00000121020000-00001000000000101011000010010000-0--000-00-01-?0-00000-1-20010111000000000100000001110001001-
    Oryzorictes_talpoides      ????????????????????111020020011100000001010100001101?21-10111001131201021111010110110110011000101000000000100010000-011001010
    Parageogale                ?????????????????????????????????????????0?????????????1-110?????022?01021111010????1????????????????????????????????????????1
    Potamogale                 01000001101010101110101010110001101?01001010101-01100-01-1012100?031011010111010210100100?210000010201-1-010-00000011011011010
    Procavia_capensis          111010-1?000110?111001010002110110000011?120001-0111100000001002001101100000000-2211000-01210100111201-1-010-1000100-000000000
    Protenrec                  ????????????????????????????????????????????????????10?1-100???0?????01020111010??011011003???0???????????????????????????????
    Setifer                    00000001001111001110100120020011110001001010110001111121-?010110102121102110001112111011022001010100000000010?010010-01100001?
    Sorex_palustris            100?0?0??00011011010011100020000-000001000101000111?11?1-110???010310010000000100400000-02301010001010101001000000010111101010
    Tenrec_ecaudatus           101?10-10010110010101?0?20020001110001001000110001111121-101110011?12110211000111?1110110?20010101000000000101010110-011000010
  ;
END;

BEGIN TREES;
	TRANSLATE
		1	Blarina_brevicauda,
		2	Canis_familiaris,
		3	Chrysochloris,
		4	Crocidura_russula,
		5	Didelphis,
		6	Echinops_telfairi,
		7	Elephantulus_rufescens,
		8	Erinaceus_europaeus,
		9	Erythrozootes,
		10	Geogale,
		11	Hemicentetes,
		12	Limnogale,
		13	Microgale_talazaci,
		14	Micropotamogale,
		15	Orycteropus_afer,
		16	Oryzorictes_talpoides,
		17	Parageogale,
		18	Potamogale,
		19	Procavia_capensis,
		20	Protenrec,
		21	Setifer,
		22	Sorex_palustris,
		23	Tenrec_ecaudatus
	;
	TREE * ambiguous = [&R] (1,(22,(4,((15,(5,(2,19))),((3,(((6,21),(11,23)),(((9,20),(10,17)),(16,(13,(12,(14,18))))))),(7,8))))));
	TREE * ambiguous = [&R] (1,(22,(4,((15,(5,(2,19))),((3,(((6,21),(11,23)),(16,(13,(12,((9,(20,(10,17))),(14,18))))))),(7,8))))));
	TREE * ambiguous = [&R] (1,(22,(4,((15,(5,(2,19))),((3,(((6,21),(11,23)),(16,(13,(((9,20),(10,17)),(12,(14,18))))))),(7,8))))));
	TREE * extraState = [&R] (1,(22,(4,(((7,(8,(2,19))),(5,15)),(3,(((6,21),(11,23)),(((9,20),(10,17)),(16,(13,(12,(14,18)))))))))));
	TREE * extraState = [&R] (1,(22,(4,(((15,(5,(2,19))),(7,8)),(3,(((6,21),(11,23)),((((9,20),(10,17)),(12,(14,18))),(13,16))))))));
	TREE * extraState = [&R] (1,(22,(4,(((15,(5,(2,19))),(7,8)),(3,(((6,21),(11,23)),(((9,20),(10,17)),(16,(13,(12,(14,18)))))))))));
	TREE * extraState = [&R] (1,(22,(4,(((15,(5,(2,19))),(7,8)),(3,(((6,21),(11,23)),(((9,(20,(10,17))),(12,(14,18))),(13,16))))))));
	TREE * extraState = [&R] (1,(22,(4,(((15,(5,(2,19))),(7,8)),(3,(((6,21),(11,23)),((((9,20),(10,17)),(13,16)),(12,(14,18)))))))));
	TREE * extraState = [&R] (1,(22,(4,((3,(8,(7,((2,19),(5,15))))),(((6,21),(11,23)),(((9,20),(10,17)),(16,(13,(12,(14,18))))))))));
	TREE * extraState = [&R] (1,(22,(4,(((15,(5,(2,19))),(7,8)),(3,(((6,21),(11,23)),((9,(20,(10,17))),((12,(14,18)),(13,16)))))))));
	TREE * inapplicable = [&R] (1,(4,(22,((8,(3,((((12,(14,18)),((9,20),(10,17))),(16,13)),((11,23),(6,21))))),(7,(15,(5,(2,19))))))));
	TREE * inapplicable = [&R] (1,(4,(22,((8,(3,((16,(13,((12,(18,14)),((20,9),(17,10))))),((23,11),(21,6))))),(7,(15,(5,(19,2))))))));
	TREE * inapplicable = [&R] (1,(4,(22,((8,(3,(((16,(13,(12,(14,18)))),((9,20),(10,17))),((11,23),(6,21))))),(7,(15,(5,(2,19))))))));
	TREE * inapplicable = [&R] (1,(22,(4,(((3,(((12,((14,18),(9,(20,(17,10))))),(13,16)),((23,11),(21,6)))),(8,7)),(15,(5,(19,2)))))));
	TREE * inapplicable = [&R] (1,(22,(4,(((3,(((13,16),((9,(20,(17,10))),(12,(14,18)))),((23,11),(21,6)))),(8,7)),(15,(5,(19,2)))))));
	TREE * inapplicable = [&R] (1,(22,(4,((7,(15,(5,(19,2)))),(8,(3,((((12,(14,18)),(13,16)),(9,(20,(17,10)))),((23,11),(21,6)))))))));
	TREE * inapplicable = [&R] (1,(22,(4,((7,(15,(5,(19,2)))),(8,(3,((16,(13,(12,((9,(20,(17,10))),(14,18))))),((23,11),(21,6)))))))));
	TREE * inapplicable = [&R] (1,(22,(4,((8,(3,(((11,23),(6,21)),(((12,(18,14)),(9,(20,(17,10)))),(13,16))))),(7,(15,(5,(2,19))))))));
	TREE * inapplicable = [&R] (1,(22,(4,((8,(3,(((11,23),(6,21)),(((16,13),(12,(18,14))),((20,9),(17,10)))))),(7,(15,(5,(2,19))))))));
	TREE * inapplicable = [&R] (1,(4,(22,((8,(3,(((11,23),(6,21)),(((12,(18,14)),(16,13)),(9,(20,(17,10))))))),(7,(15,(5,(2,19))))))));
	TREE * inapplicable = [&R] (1,(4,(22,((7,(15,(5,(19,2)))),(8,(3,(((6,21),(23,11)),(((13,16),(12,(14,18))),((9,20),(10,17))))))))));
	TREE * inapplicable = [&R] (1,(4,(22,((8,(3,(((23,11),(21,6)),((13,(16,(12,(14,18)))),((20,9),(17,10)))))),(7,(15,(5,(2,19))))))));
	TREE * inapplicable = [&R] (1,(22,(4,(((3,((16,(13,(((20,9),(17,10)),(12,(14,18))))),((23,11),(21,6)))),(7,8)),(15,(5,(2,19)))))));
	TREE * inapplicable = [&R] (1,(22,(4,(((3,((((16,13),(12,(14,18))),((20,9),(17,10))),((23,11),(21,6)))),(8,7)),(15,(5,(2,19)))))));
	TREE * inapplicable = [&R] (1,(22,(4,((8,(3,(((13,(16,(12,(14,18)))),((9,20),(17,10))),((11,23),(21,6))))),(7,(15,(5,(2,19))))))));
	TREE * inapplicable = [&R] (1,(22,(4,((8,(3,((((12,(14,18)),((20,9),(17,10))),(16,13)),((6,21),(11,23))))),(7,(15,(5,(2,19))))))));
	TREE * inapplicable = [&R] (1,(4,(22,((8,(3,(((6,21),(23,11)),(((13,16),((20,9),(17,10))),(12,(14,18)))))),(7,(15,(5,(2,19))))))));
	TREE * inapplicable = [&R] (1,(22,(4,((8,(3,(((23,11),(21,6)),((((20,9),(17,10)),(16,13)),(12,(14,18)))))),(7,(15,(5,(2,19))))))));
	TREE * inapplicable = [&R] (1,(4,(22,((8,(3,(((11,23),(6,21)),((13,16),(12,((18,14),(9,(20,(10,17))))))))),(7,(15,(5,(19,2))))))));
	TREE * inapplicable = [&R] (1,(22,(4,((8,(3,(((23,11),(21,6)),((16,13),(12,((14,18),(9,(20,(10,17))))))))),(7,(15,(5,(2,19))))))));
	TREE * inapplicable = [&R] (1,(4,(22,((8,(3,((16,(13,(12,((9,(20,(17,10))),(18,14))))),((21,6),(11,23))))),(7,(15,(5,(19,2))))))));
	TREE * inapplicable = [&R] (1,(22,(4,((3,(((21,6),(11,23)),(((9,20),(10,17)),(16,(13,(12,(18,14))))))),((7,(8,(2,19))),(5,15))))));
	TREE * inapplicable = [&R] (1,(22,(4,((8,(3,(((6,21),(23,11)),((16,(13,(12,(14,18)))),((20,9),(17,10)))))),(7,(15,(5,(19,2))))))));
	TREE * inapplicable = [&R] (1,(4,(22,((7,(15,(5,(19,2)))),(8,(3,(((11,23),(21,6)),((13,16),((9,(20,(17,10))),(12,(18,14)))))))))));
	TREE * inapplicable = [&R] (1,(22,(4,(((3,(((11,23),(6,21)),((13,(16,(12,(14,18)))),((9,20),(17,10))))),(7,8)),(15,(5,(2,19)))))));
	TREE * inapplicable = [&R] (1,(22,(4,((15,(5,(19,2))),((8,7),(3,(((6,21),(23,11)),((((20,9),(17,10)),(13,16)),(12,(18,14))))))))));
	TREE * inapplicable = [&R] (1,(22,(4,((8,(3,((16,(13,((12,(14,18)),((9,20),(10,17))))),((23,11),(21,6))))),(7,(15,(5,(2,19))))))));
	TREE * inapplicable = [&R] (1,(22,(4,(((7,8),(3,(((16,13),((12,(14,18)),((9,20),(10,17)))),((21,6),(23,11))))),(15,(5,(2,19)))))));
	TREE * inapplicable = [&R] (1,(22,(4,(((3,((((12,(18,14)),(13,16)),(9,(20,(17,10)))),((23,11),(21,6)))),(7,8)),(15,(5,(2,19)))))));
	TREE * inapplicable = [&R] (1,(22,(4,(((3,(((16,(13,(12,(18,14)))),((9,20),(17,10))),((23,11),(21,6)))),(8,7)),(15,(5,(2,19)))))));
END;
