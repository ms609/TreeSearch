# Address Sanitizer: Replicate CRAN's gcc-ASAN 'Additional Test'
on:
  push:
    branches:
      - main
      - master
    paths:
      - '.github/workflows/gcc-ASAN.yml'
      - 'src/**'
      - 'inst/include/**'
      - 'memcheck/**'
      - 'tests/testthat/**.R'
      - 'vignettes/**.Rmd'
  pull_request:
    branches:
      - main
      - master
    paths:
      - '.github/workflows/gcc-ASAN.yml'
      - 'src/**'
      - 'inst/include/**'
      - 'memcheck/**'
      - 'tests/testthat/**.R'
      - 'vignettes/**.Rmd'

name: gcc-ASAN

jobs:
  mem-check:
    runs-on: ubuntu-20.04

    name: ASAN ${{ matrix.config.test }}

    strategy:
      fail-fast: false
      matrix:
        config:
          - {test: 'tests'}
          - {test: 'examples'}
          - {test: 'vignettes'}

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      _R_CHECK_FORCE_SUGGESTS_: false
      RSPM: https://packagemanager.rstudio.com/cran/__linux__/focal/latest
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-r@v1
        with:
          r-version: release # CRAN uses devel, but takes ages to load deps.

      - name: Setup pandoc
        if: ${{ matrix.config.test }} == 'vignettes'
        uses: r-lib/actions/setup-pandoc@master

      - name: Query dependencies
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = c('soft', 'Config/Needs/memcheck')), ".github/depends.Rds", version = 2)
          writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
        shell: Rscript {0}

      - name: Cache R packages
        uses: actions/cache@v2
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-

      - name: Install system dependencies
        run: |
          while read -r cmd
          do
            eval sudo $cmd
          done < <(Rscript -e 'writeLines(remotes::system_requirements("ubuntu", "20.04"))')

      - name: Create Makevars
        run: |
          echo "CC = gcc -fsanitize=address -fno-omit-frame-pointer" > src/Makevars
          echo "CXX = g++ -std=gnu++14 -fsanitize=address -fno-omit-frame-pointer" > src/Makevars
          echo "PKG_CFLAGS = -fsanitize=address  -fno-omit-frame-pointer" >> src/Makevars
          echo "PKG_CXXFLAGS = -fsanitize=address -fno-omit-frame-pointer" >> src/Makevars
          
          
          mkdir ~/.R
          echo "CC = gcc -fsanitize=address -fno-omit-frame-pointer" > ~/.R/Makevars
          echo "CXX = g++ -std=gnu++14 -fsanitize=address -fno-omit-frame-pointer" > ~/.R/Makevars
          echo "CXX14 = g++ -std=gnu++14 -fsanitize=address -fno-omit-frame-pointer" > ~/.R/Makevars
          echo "LDFLAGS = -fsanitize=address -fno-omit-frame-pointer" >> ~/.R/Makevars

      - name: Install dependencies
        run: |
          remotes::install_deps(dependencies = c('soft', 'Config/Needs/memcheck'))
        shell: Rscript {0}

      - name: Install package
        run: |
          cd ..
          R CMD build --no-build-vignettes --no-manual --no-resave-data TreeSearch
          R CMD INSTALL TreeSearch*.tar.gz
          cd TreeSearch

      - name: ASAN - memcheck ${{ matrix.config.test }}
        run: |
          Rscript memcheck/${{ matrix.config.test }}.R
