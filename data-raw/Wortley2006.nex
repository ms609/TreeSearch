#NEXUS
begin data;
  dimensions NTAX=37 NCHAR=105;
	format DATATYPE=Standard SYMBOLS= "0123456789" MISSING=? GAP= -;
  matrix
    Angelonia                   00000?????--?00010001????1211100121-00011100-41111110??001???1????????1000?110???00???1?00-00?11000?2???1
    Barleria                    0200111?30?043001100??3?00-10000001011111100-31101000?1101000131010010103101102??000?10000-11?11011?11???
    Bartsia                     02010?????--??0000011????0-11111100000000110-11101000?1101000150011???10100110???0???????1????1??0??010?0
    Borago                      000100???1-1??1-100011???0-10111101100010000-41110010?11104000?1010111?2?002221101??1?1???????1--0???0-??
    Calceolaria                 40101??0-?-1-30010000????0-110001001?0001000-412110000?002?000???1????100??11????0????????????1110??2???3
    Callicarpa                  020000???0???20000000??1?1011110100100001100-31000001?0101400010010???201??21???0151??????????0--0??????4
    Catalpa                     020000??10010?00110000???10101001010??01???????101?00???0???????????00????1??1???0??001110-10?1010?1110??
    Ceratotheca                 020100??30?04?0111001?0??0-11110100-?1010000-411011000000101?120010111?2101221??100?00100??11?1110??01???
    Elytraria                   0?00-1???0-04?2-10001?3?0131110010001?11??????01?1?000??022310???1?11010?0010????021011001011111011?2????
    Gentiana                    0?10011?-1-1??00000210??10-00000101000001000-210000003010040002011011????011000??0012010110??01010??2111?
    Halleria                    0200?0???2?04?00000000???0-10110121210012000-11101101?1101000150210??????00??02??????????1????0??0???????
    Hemimeris                   40011?0???--??0010001????0-11000120?00010000-41010000?1012200021000??????10??0???????????1???????0???1???
    Jacaranda                   020100??0010??00111000??10-1111?001001011100-10101100?100101?131100?00?0110111???001000110-1010100??010?4
    Jovellana                   0?001????????10010000????1111100100?00000000-41201001?1002300030010??????101100??0????????????1??0??????2
    Kigelia                     020000??0011??00101010???0-10100101000011001030101100?1201?1?1?0210?00?0111111???0??001100-10?0000???10??
    Lamium                      000110???0-04?0010010??0?0-101001001??012100-11101000?100100015011011??2?01212??0?510??????111?000???1??4
    Ligustrum                   0200000?32200?00100000???0-000000010?0001000-310200002??02???0?0010110???00110??0101??????????00000??1112
    Lindenbergia                02000?????--??0010000????1111111100000011100-11101000?0001000130210???10000110???0???????1?????100?1210?3
    Martynia                    020000?030?043001001110??0-1111010000?010000-20101000??002?2?0?1?10??013-01000???0010000?111??0000???100?
    Mimulus                     02001????????000000001???0-1111??21000011100-01101000?0001000150110???00010000???04??????0-???1100??????1
    Nematanthus                 5?0??0?1?1?14?0?1?0?1?11???111??0??????1?????????????0?????????????110????1??????00?0?12???11?0??0???????
    Nicotiana                   0000001??1-0??1-0000?1???0-11100001000011000-11100000?11004000700101?????01110?0?0?12010??????1?10???0-1?
    Paulownia                   02000??11?0???0010010????101111??0100001000??11101000?0001?001?0110???10???110???0???????1111?1100???10?7
    Petrea                      320100??20???50011001??1?0-11100001000010100-41120000000010111?0010110?0111110?112000??1?0-11??000???10??
    Proboscidea                 001000?0?0-044001001010??0-111101010??012100-20101?00??001???1?1110??113-??00?2???01?000?11???0??0???10??
    Retzia                      0??0000?32?04?2-0002??0????1110??2101????????0010000?4??004000??01????1000111????0???????10????1100?210??
    Schlegelia                  32000?0???10??011100?0???0-1011012101?011?010?11?1001?1?01?11???01????10410110???00??????11???0000002???7
    Scrophularia                02010?0???--?50010000????1211100120011011000-11101001?1001010130100??????01??0???0???????1?11??010??010??
    Sesamum                     000100??30-044001100010??0-11100100-01010100-111011000000101113001111112111221??100?001001111?1100?001?0?
    Stachytarpheta              020010???0???2001000???0?0-110001000001?1100-011010000100232?0?00101112?100110??1?000??1?0-11?1??0???1???
    Streptocarpus               0?00-0?0-1-14?001000001??0-10111021010010000-411010000?002???0?1???1101??01??????00?0?12?0-11?1100???????
    Synapsis                    0200??????????0?1100???????00000?200??011????1?1?????0?001?1?1???1?????????11????0???????????????????????
    Thomandersia_hensii         020000??301???01110000?1?1110100101011?1201111112110151101010150010???1111011010?11?????0????01101??3????
    Thomandersia_laurifolia     02000?????????01110000???11111001010110111111111011015110101?160010???11110110???01?????0?????1101??2????
    Thunbergia                  1200111?30105?0010010?3?10-10110101-10020100-2?1010001100101?1?00110101?20111??1?100?110?0-01??1001?210?4
    Verbena                     000110???0-1?300000001?1?0-1111012011?110100-01101000010010??1????0110200??22???11000??1?0-11?1000???11?5
    Veronica                    0?001?????--?10000030????0?1000000100?000100-11010000?0102300040210?????101110???0????????????1100??41??2
  ;
end;

begin comment;
  [Note: states reduced to 9 by coding autapomorphies in quantitative characters as '?', which can be done without loss of phylogenetic information]
end;

BEGIN TAXA;
	DIMENSIONS NTAX = 37;
	TAXLABELS
		Angelonia
		Barleria
		Bartsia
		Borago
		Calceolaria
		Callicarpa
		Catalpa
		Ceratotheca
		Elytraria
		Gentiana
		Halleria
		Hemimeris
		Jacaranda
		Jovellana
		Kigelia
		Lamium
		Ligustrum
		Lindenbergia
		Martynia
		Mimulus
		Nematanthus
		Nicotiana
		Paulownia
		Petrea
		Proboscidea
		Retzia
		Schlegelia
		Scrophularia
		Sesamum
		Stachytarpheta
		Streptocarpus
		Synapsis
		Thomandersia_hensii
		Thomandersia_laurifolia
		Thunbergia
		Verbena
		Veronica
	;
END;
BEGIN TREES;
	TRANSLATE
		1	Angelonia,
		2	Barleria,
		3	Bartsia,
		4	Borago,
		5	Calceolaria,
		6	Callicarpa,
		7	Catalpa,
		8	Ceratotheca,
		9	Elytraria,
		10	Gentiana,
		11	Halleria,
		12	Hemimeris,
		13	Jacaranda,
		14	Jovellana,
		15	Kigelia,
		16	Lamium,
		17	Ligustrum,
		18	Lindenbergia,
		19	Martynia,
		20	Mimulus,
		21	Nematanthus,
		22	Nicotiana,
		23	Paulownia,
		24	Petrea,
		25	Proboscidea,
		26	Retzia,
		27	Schlegelia,
		28	Scrophularia,
		29	Sesamum,
		30	Stachytarpheta,
		31	Streptocarpus,
		32	Synapsis,
		33	Thomandersia_hensii,
		34	Thomandersia_laurifolia,
		35	Thunbergia,
		36	Verbena,
		37	Veronica
	;
	TREE * ambiguous = [&R] (1,(20,(23,((18,((9,((2,35),(30,36))),(((31,(21,(4,12))),((37,(10,17)),(22,26))),(5,14)))),(6,((3,((16,((24,(13,(7,15))),((8,29),(28,32)))),(19,25))),(11,(27,(33,34)))))))));
	TREE * ambiguous = [&R] (1,(20,(((35,(2,9)),(((36,(4,12)),(21,31)),(30,(5,14)))),(18,(((3,(6,((37,(10,17)),(22,26)))),((11,(27,(33,34))),(23,(19,25)))),(32,((24,(13,(7,15))),((8,29),(16,28)))))))));
	TREE * ambiguous = [&R] (1,(20,(18,(23,(((((9,((2,35),(30,36))),(32,((24,(13,(7,15))),((8,29),(28,(16,(19,25))))))),(3,6)),(11,(27,(33,34)))),((4,((14,(5,12)),(21,31))),((37,(10,17)),(22,26))))))));
	TREE * ambiguous = [&R] (1,(20,(18,(23,(((((9,((2,35),(30,36))),(32,((24,(13,(7,15))),((8,29),(28,(16,(19,25))))))),(3,6)),(11,(27,(33,34)))),((31,(21,((4,12),(5,14)))),((37,(10,17)),(22,26))))))));
	TREE * ambiguous = [&R] (1,(20,(18,(23,(((((9,((2,35),(30,36))),(32,((24,(13,(7,15))),((8,29),(28,(16,(19,25))))))),(3,6)),(11,(27,(33,34)))),((31,(21,(4,(14,(5,12))))),((37,(10,17)),(22,26))))))));
	TREE * ambiguous = [&R] (1,(20,(((9,(2,35)),(30,(((36,(4,12)),(21,31)),(5,14)))),(18,(((3,(6,((37,(10,17)),(22,26)))),((11,(27,(33,34))),(23,(19,25)))),(32,((24,(13,(7,15))),((8,29),(16,28)))))))));
	TREE * ambiguous = [&R] (1,(20,(23,((18,(((9,((2,35),(30,36))),(((31,(21,(4,12))),((37,(10,17)),(22,26))),(5,14))),(((24,(13,(7,15))),((8,29),(28,(32,(11,(27,(33,34))))))),(16,(19,25))))),(3,6)))));
	TREE * ambiguous = [&R] (1,(20,(((30,(9,(2,35))),(((36,(4,12)),(21,31)),(5,14))),(18,(((3,(6,((37,(10,17)),(22,26)))),((11,(27,(33,34))),(23,(19,25)))),(32,((24,(13,(7,15))),((8,29),(16,28)))))))));
	TREE * ambiguous = [&R] (1,(20,((2,35),(((((3,(6,((37,(10,17)),(22,26)))),((11,(27,(33,34))),(23,(19,25)))),(32,((24,(13,(7,15))),((8,29),(16,28))))),(9,18)),(30,(((36,(4,12)),(21,31)),(5,14)))))));
	TREE * ambiguous = [&R] (1,(20,(18,((((((9,((2,35),(30,36))),(32,((24,(13,(7,15))),((8,29),(16,28))))),(3,6)),(11,(27,(33,34)))),((31,(21,(4,(14,(5,12))))),((37,(10,17)),(22,26)))),(23,(19,25))))));
	TREE * ambiguous = [&R] (1,(20,((35,(2,9)),((18,(((3,(6,((37,(10,17)),(22,26)))),((11,(27,(33,34))),(23,(19,25)))),(32,((24,(13,(7,15))),((8,29),(16,28)))))),(((36,(4,12)),(21,31)),(30,(5,14)))))));
	TREE * ambiguous = [&R] (1,(20,(18,((((((9,((2,35),(30,36))),(32,((24,(13,(7,15))),((8,29),(16,28))))),(3,6)),(11,(27,(33,34)))),((((4,12),(5,14)),(21,31)),((37,(10,17)),(22,26)))),(23,(19,25))))));
	TREE * ambiguous = [&R] (1,(20,((35,(2,9)),((18,(((3,(6,((37,(10,17)),(22,26)))),((11,(27,(33,34))),(23,(19,25)))),(32,((24,(13,(7,15))),((8,29),(16,28)))))),(30,(((36,(4,12)),(21,31)),(5,14)))))));
	TREE * ambiguous = [&R] (1,(20,(((2,35),(30,(((36,(4,12)),(21,31)),(5,14)))),((((3,(6,((37,(10,17)),(22,26)))),((11,(27,(33,34))),(23,(19,25)))),(32,((24,(13,(7,15))),((8,29),(16,28))))),(9,18)))));
	TREE * ambiguous = [&R] (1,(20,(18,((((((9,((2,35),(30,36))),(32,((24,(13,(7,15))),((8,29),(16,28))))),(3,6)),(11,(27,(33,34)))),((31,(21,(4,(12,(5,14))))),((37,(10,17)),(22,26)))),(23,(19,25))))));
	TREE * ambiguous = [&R] (1,(20,(18,((((((9,((2,35),(30,36))),(32,((24,(13,(7,15))),((8,29),(16,28))))),(3,6)),(11,(27,(33,34)))),((4,((14,(5,12)),(21,31))),((37,(10,17)),(22,26)))),(23,(19,25))))));
	TREE * ambiguous = [&R] (1,(20,(18,((((((9,((2,35),(30,36))),(32,((24,(13,(7,15))),((8,29),(16,28))))),(3,6)),(11,(27,(33,34)))),(((4,(21,31)),(14,(5,12))),((37,(10,17)),(22,26)))),(23,(19,25))))));
	TREE * ambiguous = [&R] (1,(20,(18,(23,(((((9,((2,35),(30,36))),(32,((24,(13,(7,15))),((8,29),(28,(16,(19,25))))))),(3,6)),(11,(27,(33,34)))),(((4,(21,31)),(14,(5,12))),((37,(10,17)),(22,26))))))));
	TREE * ambiguous = [&R] (1,(20,(18,(23,(((((9,((2,35),(30,36))),(32,((24,(13,(7,15))),((8,29),(28,(16,(19,25))))))),(3,6)),(11,(27,(33,34)))),((((4,12),(21,31)),(5,14)),((37,(10,17)),(22,26))))))));
	TREE * ambiguous = [&R] (1,(20,((35,(2,9)),((18,(((3,(6,((37,(10,17)),(22,26)))),((11,(27,(33,34))),(23,(19,25)))),(32,((24,(13,(7,15))),((8,29),(16,28)))))),(((36,(4,12)),(21,31)),(14,(5,30)))))));
	TREE * ambiguous = [&R] (1,(20,(18,(23,(((((30,((2,9),(35,36))),(32,((24,(13,(7,15))),((8,29),(28,(16,(19,25))))))),(3,6)),(11,(27,(33,34)))),((((4,12),(21,31)),(5,14)),((37,(10,17)),(22,26))))))));
	TREE * ambiguous = [&R] (1,(20,(((35,(2,9)),(((36,(4,12)),(21,31)),(14,(5,30)))),(18,(((3,(6,((37,(10,17)),(22,26)))),((11,(27,(33,34))),(23,(19,25)))),(32,((24,(13,(7,15))),((8,29),(16,28)))))))));
	TREE * ambiguous = [&R] (1,(20,(18,(23,(((((30,((2,9),(35,36))),(32,((24,(13,(7,15))),((8,29),(28,(16,(19,25))))))),(3,6)),(11,(27,(33,34)))),((31,(21,(4,(12,(5,14))))),((37,(10,17)),(22,26))))))));
	TREE * ambiguous = [&R] (1,(20,(18,(23,(((((9,((2,35),(30,36))),(32,((24,(13,(7,15))),((8,29),(28,(16,(19,25))))))),(3,6)),(11,(27,(33,34)))),((31,(21,(4,(12,(5,14))))),((37,(10,17)),(22,26))))))));
	TREE * ambiguous = [&R] (1,(20,(18,(23,(((((30,((2,9),(35,36))),(32,((24,(13,(7,15))),((8,29),(28,(16,(19,25))))))),(3,6)),(11,(27,(33,34)))),((((4,12),(5,14)),(21,31)),((37,(10,17)),(22,26))))))));
	TREE * ambiguous = [&R] (1,(20,((((((2,35),(30,(((36,(4,12)),(21,31)),(5,14)))),(9,18)),(32,((24,(13,(7,15))),((8,29),(16,28))))),(3,(6,((37,(10,17)),(22,26))))),((11,(27,(33,34))),(23,(19,25))))));
	TREE * ambiguous = [&R] (1,(20,(18,(23,(((((30,((2,9),(35,36))),(32,((24,(13,(7,15))),((8,29),(28,(16,(19,25))))))),(3,6)),(11,(27,(33,34)))),(((4,(14,(5,12))),(21,31)),((37,(10,17)),(22,26))))))));
	TREE * ambiguous = [&R] (1,(20,(18,(23,(((((30,((2,9),(35,36))),(32,((24,(13,(7,15))),((8,29),(28,(16,(19,25))))))),(3,6)),(11,(27,(33,34)))),((4,((14,(5,12)),(21,31))),((37,(10,17)),(22,26))))))));
	TREE * ambiguous = [&R] (1,(20,(((35,(2,9)),(30,(((36,(4,12)),(21,31)),(5,14)))),(18,(((3,(6,((37,(10,17)),(22,26)))),((11,(27,(33,34))),(23,(19,25)))),(32,((24,(13,(7,15))),((8,29),(16,28)))))))));
	TREE * ambiguous = [&R] (1,(20,(((((((2,35),(30,(((36,(4,12)),(21,31)),(5,14)))),(9,18)),(32,((24,(13,(7,15))),((8,29),(16,28))))),(3,(6,((37,(10,17)),(22,26))))),(11,(27,(33,34)))),(23,(19,25)))));
	TREE * ambiguous = [&R] (1,(20,(18,(23,(((((30,((2,9),(35,36))),(32,((24,(13,(7,15))),((8,29),(28,(16,(19,25))))))),(3,6)),(11,(27,(33,34)))),(((4,(21,31)),(14,(5,12))),((37,(10,17)),(22,26))))))));
	TREE * extraState = [&R] (1,(20,(((((35,(2,9)),(((3,(11,(27,(33,34)))),((6,(37,(10,17))),(22,26))),((8,29),(28,(16,(19,25)))))),(24,((7,32),(13,15)))),(30,(((36,(4,12)),(21,31)),(5,14)))),(18,23))));
	TREE * extraState = [&R] (1,(20,((18,(6,((9,((2,35),(30,36))),(14,((5,(4,12)),(((37,(10,17)),(22,26)),(21,31))))))),(23,(3,((16,((24,(13,(7,15))),((8,29),(28,(32,(11,(27,(33,34)))))))),(19,25)))))));
	TREE * extraState = [&R] (1,(20,(23,((18,(((9,((2,35),(30,36))),((24,(13,(7,15))),(((8,29),(16,(19,25))),(28,(32,(11,(27,(33,34)))))))),(((4,(21,31)),(14,(5,12))),((37,(10,17)),(22,26))))),(3,6)))));
	TREE * extraState = [&R] (1,(20,((18,(6,((9,((2,35),(30,36))),(((31,(21,(4,12))),((37,(10,17)),(22,26))),(5,14))))),(23,(3,((16,((24,(13,(7,15))),((8,29),(28,(32,(11,(27,(33,34)))))))),(19,25)))))));
	TREE * extraState = [&R] (1,(20,(23,((18,(((9,(30,(36,(2,35)))),(((4,(21,31)),(14,(5,12))),((37,(10,17)),(22,26)))),((24,(13,(7,15))),(((8,29),(16,(19,25))),(28,(32,(11,(27,(33,34))))))))),(3,6)))));
	TREE * extraState = [&R] (1,(20,(23,((18,(((9,((2,35),(30,36))),((24,(13,(7,15))),(((8,29),(16,(19,25))),(28,(32,(11,(27,(33,34)))))))),(((31,(21,(4,12))),((37,(10,17)),(22,26))),(5,14)))),(3,6)))));
	TREE * extraState = [&R] (1,(20,((18,(6,(((9,(2,35)),(30,36)),(((31,(21,(4,12))),((37,(10,17)),(22,26))),(5,14))))),(23,(3,((16,((24,(13,(7,15))),((8,29),(28,(32,(11,(27,(33,34)))))))),(19,25)))))));
	TREE * extraState = [&R] (1,(20,(((((35,(2,9)),(((3,(11,(27,(32,(33,34))))),((6,(37,(10,17))),(22,26))),((8,29),(28,(16,(19,25)))))),(24,(7,(13,15)))),(30,(((36,(4,12)),(21,31)),(5,14)))),(18,23))));
	TREE * extraState = [&R] (1,(20,(23,((18,(((9,(30,(36,(2,35)))),(((31,(21,(4,12))),((37,(10,17)),(22,26))),(5,14))),((24,(13,(7,15))),(((8,29),(16,(19,25))),(28,(32,(11,(27,(33,34))))))))),(3,6)))));
	TREE * extraState = [&R] (1,(20,(23,((18,(((30,((2,9),(35,36))),((24,(13,(7,15))),(((8,29),(16,(19,25))),(28,(32,(11,(27,(33,34)))))))),(((31,(21,(4,12))),((37,(10,17)),(22,26))),(5,14)))),(3,6)))));
	TREE * inapplicable = [&R] (1,(20,(23,(18,(((6,(5,(14,(((31,21),((37,(17,10)),(22,26))),(12,4))))),(9,((36,30),(35,2)))),((28,((32,(((27,11),(34,33)),(7,(15,13)))),(24,(8,29)))),(16,(3,(25,19)))))))));
	TREE * inapplicable = [&R] (1,(20,(23,(18,(((16,(3,(25,19))),(28,((32,((7,(13,15)),((11,27),(34,33)))),(24,(8,29))))),((6,((5,14),(((21,31),((37,(17,10)),(22,26))),(4,12)))),(9,((30,36),(35,2)))))))));
	TREE * inapplicable = [&R] (1,(20,(23,(18,(((9,((36,30),(2,35))),(6,((5,14),(((22,26),(37,(17,10))),(31,(21,(4,12))))))),((16,(3,(19,25))),(28,((32,(((33,34),(11,27)),(7,(13,15)))),(24,(29,8))))))))));
	TREE * inapplicable = [&R] (1,(20,(23,(18,(((28,((32,(((33,34),(11,27)),(7,(13,15)))),(24,(29,8)))),(16,(3,(19,25)))),((6,(((22,26),(31,(21,(4,(12,(5,14)))))),(37,(10,17)))),(9,((36,30),(2,35)))))))));
	TREE * inapplicable = [&R] (1,(20,(23,(6,(18,(((9,(30,(36,(2,35)))),(14,((5,(4,12)),((21,31),((26,22),(37,(17,10))))))),((((28,(32,(11,(27,(34,33))))),(24,(13,(7,15)))),(29,8)),(16,(3,(25,19))))))))));
	TREE * inapplicable = [&R] (1,(20,(23,(6,(18,(((9,(30,(36,(35,2)))),(14,((5,(4,12)),((21,31),((26,22),(37,(17,10))))))),((3,(16,(25,19))),(((24,(13,(15,7))),(28,(32,(11,(27,(34,33)))))),(29,8)))))))));
END;
