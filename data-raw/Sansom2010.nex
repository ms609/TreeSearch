#NEXUS
begin data;
  dimensions ntax=23 nchar=109;
  format datatype=standard gap=- missing=? Interleave=no;
  matrix 
    Tunicata            101000000-000-0--0?0-000-0010??00000001000000?0000000?0000-000000000000000000000--000-00-00000001011--0---0--
    Cephalochordata     0010000000000-0--0?0-000-00000001001100010000?000000010000-000000000000000000000--000-00-00000000011--0---0--
    Myxinoidea          100101001101111000110001001?000010001100101101000000111110-1?1110000000100010000--000-00-0000000110-00000-?--
    Myxinikela          ????????????1?10??1???????101?0???00????????010?0000?0???0-?????0?????01000?0000--000-00-00000??????0????-?--
    Petromyzontida      10111110101110111111001110101100110111110010110100011011111111110110011000010000--000-00-0000011111101111-0--
    Mesomyzon           ??????????????????1???????101?0??101?????????10?000110???11?????0?????10000?0000--000-00-00000???????????-?--
    Priscomyzon         ??????????????????0???????101?0???011???????000?000?????1101????0????110000?0000--000-00-00000???????????-?--
    Mayomyzon           ?????????????0????0???????101?0???011???????010?000?0??????1?1??0????100000?0000--000-00-00000???????????-?--
    Haikouichthys       ??????????????????1????????01000??00????????00010000?1??00-?10000?????00000?0000--000-00-00000???????????-0--
    Heterostraci        ?11???1?????????1?0110?111111000?100???????101000003111??0-?1??00?????00100?110110111001011000?????0?1???-?11
    Astraspis           ??1??????????????????0?100101100???????????1?1??000???1?????????0???????100?11011210101??11??0?????0?????-?10
    Arandaspida         ??1????????????????????110100100??00????????010?000??01??0-?????0?????001???1101?2111111011?1??????0?????-?11
    Anaspida            ??1?????????1?11???????110100100??00????????01111001101??0-?????0?????00100?1100--001101010000?????10??????10
    Jamoytius           ????????????1?10???????????0010???10????????????100??01???-?????0????1001???1??0--00?100-00000??????0????0??-
    Euphanerops         ??????????????????????????10010??110?????????11110011?1?????1???0????100?0?10000--?00?00-00000???????????01--
    Osteostraci         ?011?11?????1011?10111?111101-11?110?11?01?1110101022011?0-?1??00?1110001110101100101001010111?????101?1?-?11
    Galeaspida          ?11??11?????11111?0111?111101-10?110?????1?1?1??000??011?0-?1??00?11100010101100--001001010100?????101???-?01
    Loganellia          ???????????????????????111?01101??00????????11101003101??0-????00?????00100?110100001000110000???????????1?00
    Turinia             ??????????????????????????1011?1??00?????????1?010??1?1?????????0?????0010??1101100010001100?0???????????1?00
    Jawed_vertebrates   1111111101111-0-111111111100100101000111111011110112201000-0100011111000111010111110100011001111000012111-110
    Euconodonta         ?????????????????1?????????????????0????????01010001101?00-????10????00?000?1001?1001?00100000???????????-?1-
    Cornovichthys       ??????????????????1?????????010?????????????0-0??00111??????????0???????000-0?00--??0-0?-000?0?????????????--
    Achanarella         ????????????????????????????0?0?????????????111??00?????????????0???????000-0?00--??0-0?-000???????????????--
  ;
end;

BEGIN TAXA;
	DIMENSIONS NTAX = 23;
	TAXLABELS
		Tunicata
		Cephalochordata
		Myxinoidea
		Myxinikela
		Petromyzontida
		Mesomyzon
		Priscomyzon
		Mayomyzon
		Haikouichthys
		Heterostraci
		Astraspis
		Arandaspida
		Anaspida
		Jamoytius
		Euphanerops
		Osteostraci
		Galeaspida
		Loganellia
		Turinia
		Jawed_vertebrates
		Euconodonta
		Cornovichthys
		Achanarella
	;
END;
BEGIN TREES;
	TRANSLATE
		1	Tunicata,
		2	Cephalochordata,
		3	Myxinoidea,
		4	Myxinikela,
		5	Petromyzontida,
		6	Mesomyzon,
		7	Priscomyzon,
		8	Mayomyzon,
		9	Haikouichthys,
		10	Heterostraci,
		11	Astraspis,
		12	Arandaspida,
		13	Anaspida,
		14	Jamoytius,
		15	Euphanerops,
		16	Osteostraci,
		17	Galeaspida,
		18	Loganellia,
		19	Turinia,
		20	Jawed_vertebrates,
		21	Euconodonta,
		22	Cornovichthys,
		23	Achanarella
	;
	TREE * ambiguous = [&R] (1,(2,((3,4),(9,(22,((21,(8,(7,(5,6)))),(23,((13,(((10,(11,12)),(17,(16,20))),(18,19))),(14,15)))))))));
	TREE * ambiguous = [&R] (1,(2,(3,((4,9),(22,((21,(8,(7,(5,6)))),(23,((13,(((10,(11,12)),(17,(16,20))),(18,19))),(14,15)))))))));
	TREE * extraState = [&R] (1,(2,(3,((4,9),(((8,(7,(5,6))),(21,((13,(17,((10,(11,12)),((16,20),(18,19))))),(14,15)))),(22,23))))));
	TREE * extraState = [&R] (1,(2,((3,(((8,(7,(5,6))),((21,(13,(17,((10,(11,12)),((16,20),(18,19)))))),(14,15))),(22,23))),(4,9))));
	TREE * extraState = [&R] (1,(2,(3,((4,9),(22,((8,(7,(5,6))),(23,((21,(13,(17,((10,(11,12)),((16,20),(18,19)))))),(14,15)))))))));
	TREE * extraState = [&R] (1,(2,((3,4),(9,(22,((21,(8,(7,(5,6)))),(23,((13,(17,((10,(11,12)),((16,20),(18,19))))),(14,15)))))))));
	TREE * extraState = [&R] (1,(2,(9,((3,4),(((8,(7,(5,6))),(21,((13,(((10,(11,12)),(17,(16,20))),(18,19))),(14,15)))),(22,23))))));
	TREE * extraState = [&R] (1,(2,((3,4),(9,(((8,(7,(5,6))),(21,((13,(((10,(11,12)),(17,(16,20))),(18,19))),(14,15)))),(22,23))))));
	TREE * extraState = [&R] (1,(2,((3,(22,((8,(7,(5,6))),(23,((21,(13,(17,((10,(11,12)),((16,20),(18,19)))))),(14,15)))))),(4,9))));
	TREE * extraState = [&R] (1,(2,(3,((4,9),(22,((21,(8,(7,(5,6)))),(23,((13,(17,((10,(11,12)),((16,20),(18,19))))),(14,15)))))))));
	TREE * extraState = [&R] (1,(2,((3,4),(9,(22,((8,(7,(5,6))),(23,((21,(13,(17,((10,(11,12)),((16,20),(18,19)))))),(14,15)))))))));
	TREE * extraState = [&R] (1,(2,((3,4),(9,(((8,(7,(5,6))),((21,(13,(17,((10,(11,12)),((16,20),(18,19)))))),(14,15))),(22,23))))));
	TREE * extraState = [&R] (1,(2,(3,((4,9),(((8,(7,(5,6))),(21,((13,(((10,(11,12)),(17,(16,20))),(18,19))),(14,15)))),(22,23))))));
	TREE * extraState = [&R] (1,(2,(3,((4,9),(((8,(7,(5,6))),((21,(13,(17,((10,(11,12)),((16,20),(18,19)))))),(14,15))),(22,23))))));
	TREE * extraState = [&R] (1,(2,((3,(((8,(7,(5,6))),(21,((13,(((10,(11,12)),(17,(16,20))),(18,19))),(14,15)))),(22,23))),(4,9))));
	TREE * extraState = [&R] (1,(2,(9,((3,4),(((8,(7,(5,6))),((21,(13,(17,((10,(11,12)),((16,20),(18,19)))))),(14,15))),(22,23))))));
	TREE * extraState = [&R] (1,(2,((3,4),(9,(22,((21,(8,(7,(5,6)))),(23,((13,(((10,(11,12)),(17,(16,20))),(18,19))),(14,15)))))))));
	TREE * extraState = [&R] (1,(2,(3,((4,9),(((21,(8,(7,(5,6)))),((13,(((10,(11,12)),(17,(16,20))),(18,19))),(14,15))),(22,23))))));
	TREE * extraState = [&R] (1,(2,((3,4),(9,(((8,(7,(5,6))),(21,((13,(17,((10,(11,12)),((16,20),(18,19))))),(14,15)))),(22,23))))));
	TREE * extraState = [&R] (1,(2,(9,((3,4),(22,((8,(7,(5,6))),(23,((21,(13,(17,((10,(11,12)),((16,20),(18,19)))))),(14,15)))))))));
	TREE * extraState = [&R] (1,(2,((3,4),(9,(((21,(8,(7,(5,6)))),((13,(17,((10,(11,12)),((16,20),(18,19))))),(14,15))),(22,23))))));
	TREE * extraState = [&R] (1,(2,((3,4),(9,(((21,(8,(7,(5,6)))),((13,(((10,(11,12)),(17,(16,20))),(18,19))),(14,15))),(22,23))))));
	TREE * extraState = [&R] (1,(2,((3,(((8,(7,(5,6))),(21,((13,(17,((10,(11,12)),((16,20),(18,19))))),(14,15)))),(22,23))),(4,9))));
	TREE * extraState = [&R] (1,(2,(3,((4,9),(((21,(8,(7,(5,6)))),((13,(17,((10,(11,12)),((16,20),(18,19))))),(14,15))),(22,23))))));
	TREE * extraState = [&R] (1,(2,(3,((4,9),(22,((21,(8,(7,(5,6)))),(23,((13,(((10,(11,12)),(17,(16,20))),(18,19))),(14,15)))))))));
	TREE * extraState = [&R] (1,(2,(9,((3,4),(((8,(7,(5,6))),(21,((13,(17,((10,(11,12)),((16,20),(18,19))))),(14,15)))),(22,23))))));
	TREE * inapplicable = [&R] (1,(2,(9,((22,((23,(21,((13,((18,19),((10,(12,11)),(17,(16,20))))),(14,15)))),(8,(7,(6,5))))),(3,4)))));
	TREE * inapplicable = [&R] (1,(23,(2,((3,(22,((21,((13,((19,18),((17,(16,20)),(10,(11,12))))),(15,14))),(8,(7,(5,6)))))),(4,9)))));
	TREE * inapplicable = [&R] (1,(2,((23,(9,4)),(3,(22,((21,((14,15),(13,((18,19),((17,(20,16)),(10,(12,11))))))),(8,(7,(6,5)))))))));
	TREE * inapplicable = [&R] (1,(2,((9,(22,((21,((13,((19,18),((17,(20,16)),(10,(12,11))))),(15,14))),(8,(7,(6,5)))))),(23,(4,3)))));
	TREE * inapplicable = [&R] (1,(2,((9,(22,((21,((13,(((17,(16,20)),(10,(12,11))),(19,18))),(15,14))),(8,(7,(6,(5,23))))))),(4,3))));
	TREE * inapplicable = [&R] (1,(2,(3,((23,(4,9)),(22,((8,(7,(6,5))),(21,((13,((19,18),((17,(20,16)),(10,(12,11))))),(14,15)))))))));
	TREE * inapplicable = [&R] (1,(2,(23,(3,((22,((8,(7,(5,6))),(21,((15,14),(13,(((10,(11,12)),(17,(20,16))),(19,18))))))),(4,9))))));
	TREE * inapplicable = [&R] (1,(2,((9,(22,((21,((13,((18,19),((10,(11,12)),(17,(16,20))))),(15,14))),(8,(7,(6,5)))))),(4,(3,23)))));
	TREE * inapplicable = [&R] (1,(2,((3,(22,((21,((14,15),(13,(((10,(11,12)),(17,(20,16))),(19,18))))),(8,(7,(23,(6,5))))))),(4,9))));
	TREE * inapplicable = [&R] (1,(2,((3,(23,(22,((8,(7,(5,6))),(21,((13,(((17,(20,16)),(10,(12,11))),(18,19))),(14,15))))))),(4,9))));
	TREE * inapplicable = [&R] (1,(2,(9,((22,((21,((13,(((10,(11,12)),(17,(20,16))),(19,18))),(15,14))),(8,(7,(6,(5,23)))))),(3,4)))));
	TREE * inapplicable = [&R] (1,(2,((3,(22,((8,(7,(6,(5,23)))),(21,((15,14),(13,((19,18),((17,(20,16)),(10,(12,11)))))))))),(9,4))));
	TREE * inapplicable = [&R] (1,(2,(23,((4,9),(3,(22,((21,((15,14),(13,(((10,(11,12)),(17,(20,16))),(19,18))))),(8,(7,(5,6))))))))));
	TREE * inapplicable = [&R] (1,((2,23),((9,(22,((8,(7,(6,5))),(21,((13,(((10,(12,11)),(17,(16,20))),(18,19))),(15,14)))))),(3,4))));
	TREE * inapplicable = [&R] (1,(2,(3,((22,((21,((14,(15,23)),(13,(((17,(16,20)),(10,(11,12))),(18,19))))),(8,(7,(6,5))))),(4,9)))));
	TREE * inapplicable = [&R] (1,(2,((3,(22,((23,(21,((14,15),(13,(((10,(12,11)),(17,(16,20))),(18,19)))))),(8,(7,(5,6)))))),(4,9))));
	TREE * inapplicable = [&R] (1,(2,((9,(22,((23,(21,((14,15),(13,(((10,(11,12)),(17,(20,16))),(19,18)))))),(8,(7,(6,5)))))),(4,3))));
	TREE * inapplicable = [&R] (1,(2,((9,((23,22),((8,(7,(6,5))),(21,((14,15),(13,(((17,(16,20)),(10,(12,11))),(18,19)))))))),(3,4))));
	TREE * inapplicable = [&R] (1,(2,(9,(23,((22,((8,(7,(6,5))),(21,((13,((19,18),((10,(12,11)),(17,(20,16))))),(15,14))))),(4,3))))));
	TREE * inapplicable = [&R] (1,(2,(9,(((22,23),((21,((14,15),(13,((19,18),((17,(20,16)),(10,(12,11))))))),(8,(7,(6,5))))),(3,4)))));
	TREE * inapplicable = [&R] (1,(2,((3,((22,23),((8,(7,(6,5))),(21,((14,15),(13,(((17,(16,20)),(10,(11,12))),(18,19)))))))),(4,9))));
	TREE * inapplicable = [&R] (1,(2,(9,((22,((8,(7,(5,(6,23)))),(21,((14,15),(13,(((10,(12,11)),(17,(20,16))),(19,18))))))),(4,3)))));
	TREE * inapplicable = [&R] (1,(2,(3,((22,((21,((13,(((17,(20,16)),(10,(12,11))),(19,18))),(14,15))),(8,(7,(5,(6,23)))))),(9,4)))));
	TREE * inapplicable = [&R] (1,(2,(3,((22,(23,((21,((13,(((17,(20,16)),(10,(11,12))),(19,18))),(15,14))),(8,(7,(6,5)))))),(9,4)))));
	TREE * inapplicable = [&R] (1,(2,((3,(22,((8,(7,(5,(23,6)))),(21,((13,(((17,(16,20)),(10,(11,12))),(18,19))),(14,15)))))),(4,9))));
	TREE * inapplicable = [&R] (1,(2,((9,(22,((21,((13,(((17,(16,20)),(10,(12,11))),(18,19))),(14,15))),(8,(7,(23,(6,5))))))),(4,3))));
	TREE * inapplicable = [&R] (1,(23,(2,(3,((22,((21,((13,(((17,(20,16)),(10,(11,12))),(18,19))),(15,14))),(8,(7,(6,5))))),(9,4))))));
	TREE * inapplicable = [&R] (1,(23,(2,((4,3),(9,(22,((8,(7,(5,6))),(21,((13,(((10,(11,12)),(17,(16,20))),(18,19))),(15,14))))))))));
	TREE * inapplicable = [&R] (1,((23,2),(3,((22,((21,((14,15),(13,(((17,(16,20)),(10,(12,11))),(18,19))))),(8,(7,(5,6))))),(4,9)))));
	TREE * inapplicable = [&R] (1,(2,(9,((22,(23,((21,((13,(((17,(20,16)),(10,(11,12))),(19,18))),(15,14))),(8,(7,(5,6)))))),(4,3)))));
	TREE * inapplicable = [&R] (1,(2,(3,((22,((23,((14,15),(13,(((17,(20,16)),(10,(12,11))),(18,19))))),(21,(8,(7,(5,6)))))),(4,9)))));
	TREE * inapplicable = [&R] (1,(2,(23,((9,(22,((8,(7,(6,5))),(21,((13,(((17,(16,20)),(10,(11,12))),(19,18))),(14,15)))))),(4,3)))));
	TREE * inapplicable = [&R] (1,(2,((9,(22,((8,(7,(5,6))),(21,((13,(((17,(20,16)),(10,(11,12))),(19,18))),(14,(23,15))))))),(3,4))));
	TREE * inapplicable = [&R] (1,(2,((3,23),((22,((21,((13,(((17,(20,16)),(10,(12,11))),(19,18))),(14,15))),(8,(7,(5,6))))),(4,9)))));
	TREE * inapplicable = [&R] (1,(2,(3,((23,(22,((8,(7,(5,6))),(21,((14,15),(13,(((17,(20,16)),(10,(12,11))),(19,18)))))))),(9,4)))));
	TREE * inapplicable = [&R] (1,(23,(2,(9,((4,3),(22,((21,((13,((18,19),((17,(20,16)),(10,(12,11))))),(15,14))),(8,(7,(5,6))))))))));
	TREE * inapplicable = [&R] (1,(2,((9,(23,(22,((21,((13,(((17,(16,20)),(10,(12,11))),(19,18))),(15,14))),(8,(7,(5,6))))))),(3,4))));
	TREE * inapplicable = [&R] (1,(2,(9,((22,((8,(7,(5,6))),(21,((14,(23,15)),(13,(((10,(12,11)),(17,(20,16))),(19,18))))))),(3,4)))));
	TREE * inapplicable = [&R] (1,(2,((3,(22,((21,((14,(15,23)),(13,(((10,(11,12)),(17,(16,20))),(18,19))))),(8,(7,(6,5)))))),(4,9))));
	TREE * inapplicable = [&R] (1,(2,((9,(22,((23,(8,(7,(5,6)))),(21,((13,((19,18),((10,(12,11)),(17,(20,16))))),(15,14)))))),(4,3))));
	TREE * inapplicable = [&R] (1,(2,((3,(22,(23,((21,((13,(((17,(16,20)),(10,(12,11))),(18,19))),(15,14))),(8,(7,(5,6))))))),(9,4))));
	TREE * inapplicable = [&R] (1,((2,23),((3,(22,((8,(7,(6,5))),(21,((14,15),(13,((19,18),((17,(20,16)),(10,(12,11)))))))))),(4,9))));
	TREE * inapplicable = [&R] (1,(2,(3,(((22,23),((21,((14,15),(13,(((10,(11,12)),(17,(16,20))),(18,19))))),(8,(7,(6,5))))),(4,9)))));
	TREE * inapplicable = [&R] (1,(2,(3,((22,((21,((13,((19,18),((10,(11,12)),(17,(20,16))))),(15,14))),(8,(7,(23,(5,6)))))),(4,9)))));
	TREE * inapplicable = [&R] (1,(2,(3,(23,((4,9),(22,((8,(7,(6,5))),(21,((13,(((17,(20,16)),(10,(12,11))),(19,18))),(15,14))))))))));
	TREE * inapplicable = [&R] (1,(2,(9,((22,((8,(7,(5,6))),(21,((13,(((17,(16,20)),(10,(12,11))),(19,18))),(14,15))))),(4,(23,3))))));
	TREE * inapplicable = [&R] (1,(2,((23,(9,(22,((21,((13,((18,19),((17,(16,20)),(10,(11,12))))),(15,14))),(8,(7,(6,5))))))),(4,3))));
	TREE * inapplicable = [&R] (1,(2,(9,((22,((21,((14,15),(13,((19,18),((17,(20,16)),(10,(11,12))))))),(8,(7,(6,5))))),(3,(4,23))))));
	TREE * inapplicable = [&R] (1,((2,23),(9,((22,((8,(7,(5,6))),(21,((13,(((10,(11,12)),(17,(20,16))),(19,18))),(15,14))))),(4,3)))));
	TREE * inapplicable = [&R] (1,(2,(23,(9,((4,3),(22,((8,(7,(6,5))),(21,((15,14),(13,(((17,(20,16)),(10,(11,12))),(19,18))))))))))));
END;
