#NEXUS
BEGIN data;
  DIMENSIONS NTAX=64 NCHAR=363;
	FORMAT DATATYPE=Standard SYMBOLS= "012345679" MISSING=? GAP= -;
  MATRIX
    Acontias_sp                    001000000?0102?0000000?0000101110000100010000011000101000000100-11100100100??0101?01?00010001??010?110001001110012101211101?100000000000200000100010?0001001001121000?000010101-010122200-0010010010?0000000?011010000000000000000??012001021-??0??1011?00020000?0?????????????-??4-??--?--?0-1--2-00000?2011110111?0000000?1020102?0??????????????????????000?????????????
    Adriosaurus_suessi             1?00??-??01???0????????????110??0???00??????00???00???0?21??????????11001?010?00??00?001100??10???0?0????????????????????????????0??0???????????0?????????????1???????????????????????????????1?????????????1?1???????0?1??0??0000???12001221-??03??11?011021200??????????2???????0?200?0002?11000?0???????????????????????????????????????????????????????????????????????
    Agama_agama                    100001----110200000000300110000101000000100100011001111021000-0-000001001000220000100001011--00100000000000010000010021110100001000000010100000000100100000?00112000000000-02001010101321001---10010-00000000000200101100000-0-00000012000001-00000101000002000010000101002000011000000-100110000011?100?10000???0?0????0?0???????????????????????????????0????????????????
    Aigialosaurus_dalmaticus       2100?1?000??1?000??????????110??101?0-?01???01110001011?200????????1110010010?00000000??100011021001??????????????????????????0??0??0?????????1???1???????????11?01010?10??100??110001?20-10011?1101??01000010010112020010001??000???12001221-??0?11010?110201000?????????????????00?00-1001101000?????????????????????????????????????????????????????????????????????????
    Amphisbaena_fuliginosa         ?0?010-0001212?00000113000000010?00010-030001--0-0---1000000110-1100010-11?03002???-101-0-1?-01--?110000?0001000101-02111013-1?101?2210-0-01-?20-11?-0101111?1311200010000-0?01--101?1301001---10000?0000000000101000000000001100001-12201021-??01210111001002110002-0012031001-0----------2--1-20-00?01?2010?0100000-00?10040101?000010?0?--?0?00?10???1?00???0???????????
    Anelytropsis_papillosus        001010-0001200000000113000010012100000-030001--0-0---1000000100-1110010-10013?11???-10001?0?101--1-00000?0011100121-1211100211010002200?0-0100001210-0101110003102??010000-0001--10122-00-021-010000?00001000001010000000000?00000???12200021-??0-2?????00100011??????????????????????????????????????00?201111000000-00101????????????????--??????????????????????????????
    Anilius_scytale                001011-0001?020?000001200000100100001--030001--0-0---10000003-1001-0030-11003-0?-10-10?10-0--01-11-00010100111001?2-0?1100000000-002211-1-0111101?1202-0100000211210011?00110000-1000132002011200100--100?00000100100300000010?0001101200?221-??0?21011100?2-201?002-00-20-1002-0----------2??1-01-00000?201?01000000-000110411?1?0?0??????--?0000?00???1-20??01???????????
    Anniella_pulchra               100000-00011000000000110010000110000100010000010001001001000110-010001001?000?00-00-100110011000111110001001100111101210001001000002100-2-0100201110000010000021210000000120001-011000201100100100100??000001011021200000000101000?1012001121-020?2101100??00200?000100-10-1002-0-4--------2201--1-00000?211111000000-00000?211011?10?????0--0?000000000100????????????????
    Anolis_carolinensis            101?000111130000000000300101100101000000100000001100111021010-0-1000010010100?0100000001010110010000?00?0011100000101101110000000000000?0101?0000010000000000011?000?00000-0010101012032100010011010100??100001020040000000000000000012000000-100?010100000?00001??01110001000000000000-100010000001?0?01100000000000-00000?1?0?0??????????????????????????????????????????
    Aspidoscelis_tigris            ?0000001111102000000013001000000010000001?0000??0001?11021000-??000011001002300000?0?000100??00?1000?000?001100010110?1110110??00000000021000?100?1000000000?0102000000010-00000000002020-000?011011?000001100000004000?0000000000100120012?1-100031010000100000100111100?10?001010020000000100000010?00?201000000000-0000004?2000100?????011000110210001?201100000?01?0100
    Bipes_canaliculatus            101010-00012120000001130000001100000-0-030001--0-0---100000?110-1100--0-10003002???-101-0?1?-01--0110000?0001000101-02010013-1?10112210-0-01-?00-111-0101111?031120001000??1001--10121301201---10010?0000100000101000000000001100001112201021-??0121011100100211?00000011031000-0200200-1002--1-01-00101?201010000000-00010040101?000?????????0?00?10???1?0????????????????
    Boa_constrictor                10?011-0001?02?100000?30000?100100000--030001--0-0---10?00003-1101-00?0-11?03-?2-?0-1001000??01??1-0001010121??0102-0?1100000010-002211-?-011110101202-0100010211200011100100000-00001?21?20?1200100?-0000000001000003?0000?10?000110120?1221-??0?210111?0?2-201?002-00-20-1002-0----------2??1-01-00000???1?01000000-000110411?1?0?0??????--?0000?00???1-2???01???????????
    Celestus_enneagrammus          1000001000110100100000300000001100000000100000000000010000000-0-1110010010020000???0?100100??10?10011000?001100010100211001000000000000020000?1001100010100??011?000010001203001-0-00001110000011010??0??00010110200000000101010?111012001121-11002101000000010010001110001010000100100-100020000001?000?2111010101000000002211001?10?????0??0?0??????????0????????????????
    Chamaleo_sp                    000000201111?20000001130011000010100010030-100000100011000000-0-0000110010003?02-0000100001--0010000010-010010000010011110100000000201000100?0000-10?00??100?0412000010000-020??-10101320-01---11000-000?0000001200401000000-000001101210??01-0001010100100200000102-0010031000-0-00100-10000010003??010?2?0000000000-00000100001?00?????????000???????????????????????????
    Clidastes                      310??1-0001211100?????-?0001100010100-?0100001010001011120100-0-000011001000000001100000100011021001?01??01110011?101110001?0??000000???2001?01???110000?00???11?010?01101110000110001320-1001101101??110000100?011002001000100000???12000221-1000110110110201000?0??10?100???????2120320102211?10?0???????????????????????????????????????????????????????????????????????
    Cordylus_mossambicus           10000001111100000000013001000001000000?0?00000000?0?01?021000-0-?100?1001?02??110?010100100010021001?0001001110011100?110000000000000000200000100?10000000000011200000000010?1010000?23?0-00000100100100000010?111?0000000?0000000?00120011?1-??0?01010000?00000?00?110000?0000001000000000020?000?101000201?0101111000?000010?000200?????00?000000100001?0???00???????????
    Delma_borea                    100000-0001102000000113010-00000100010-030001--0-0---1100100110-1110000000013?010001011-0000101--011000110011000101002110001010000110010200000110010-2-0001??031?100000000-0011--10120020-0010011010000001001101010000000000000000???????????????????????????????????????????????????????????????????0???201101000000-00010?10??1???0??????????????????????????????????????
    Dibamus_novaeguinae            101010-00012020000001130000101121000-0-030001--0-0---1000000100-1110030-11013?11100-101-0-1--01--1-0000010011100121-12110002010000022?000-0100001210-010111000310200010000-0201--10122-00-021-010010-00001000011010000000000?0000011112200021-??0-21010100100011?002-00-?031001-0----1-----?0-1-02-02000?201111000000-00101000101??0???????--?0000??0???1??10?0?01?????????
    Dinilysia_patagonica           ??1011-000??0??10000012000?01001000?0--030001--0-0---100100?0-??01-0020-11103-00-?0-10011010100011-000?01?0110101020111100000100-0022?1?1-01?00??11202-01??0??21?21001?100??????-10001?210201120?100-?00000000010000030?00001??000???12010221-????210?1????2??010??2-00-20-1002?0----------??????1?????????????????????????????????????????????????????????????????????????
    Elgaria_multicarinata          1000001??011000000001130??00001100000010100000000000011020000-0-01100100100100?0010001011000100110011000100111001010001110000000000000002000001001100000100?00112000000001201000010000110-00000110100?001000101102000000001010000110012001121-100021010000?00200?0?011000?1010000?000000?000201000?1?000?2110011101000010002211001?10??????????0?0??????1?0????????????????
    Enyalioides_laticeps           0000002011110000000010?00000000101000000400100110000111021010-0-0000010010002000000000010101100100000000100010000010111100100000000000010101001000100000000000112000000000-00000010000020-0010011010000000000000200400000000000000???12000001-100001010000010000110011000?1000001200000-10012000000100000100000000000-00000?100000?00?0?0??01??????????????????????????????
    Eosaniwa_koehni                301??01111??0??000000??????1???0100??0??10??000100?1??0?21000-0-???0?1??????????????????????????????1????01?0011110?111?????0?00??0????????????0???0?00??00????0?000?1000??100??-10000?2??001?0111?1?000?000101?0212000000002??000???12102??1-??0?1101??????1?????????????????????00?0?????????????????0?10???1?10???001???????????????????????????????????????????????????
    Eublepharis_macularius         100000-00011000000000030110000010001001030000020-0-001102100110-1000010012003201100-011-1000101--011000010011110101-121000010000001100122010000?00100010001100310000000000-0311-01002232120010011010-000?00001100023000000000000000010100-011-????01000000010000?011111100????????00000-1001201000311?00?10?000000000-00000?10100?1?0??????0??1100000???0??????????????????
    Eupodophis_descouensis         10001?-0001???010?0??????0-210?1000?0--???????????????0000????1???????????????????????01001?-00001-0?????0121100102?1?1100????1??????????????1????????????????21?20001110?????00-?0?01?????0???10100?-0000??00010000030?0000?????????120??221-??0?210??????????????????????????????????????????????????????????????????????????????????????????????????????????????????????
    Feylinia_polylepis             1010000000110000000100?0000100121000?01020001--0-0---1000100100-1100010-10022010102101011000101--001100011011101121-12111000010000000000200000210-1000000001001120000100001100??-10122?10-021-000010?10000001011110000000000100000??012001021-??00?1010000?????00001000-2031000-0----------??-?--1-00000?2011110111?0000000?1020002?0?????????????????????00011101011110000
    Gekko_gecko                    101000-00011000000000030011000000000001030000020-0-001102100110-1100010000003210101-011-1000101--0110001110110000010021100010000001100102000001100100010000100311000010000-1001--1002232120010010010-000010001110000000000000000000010100-001-??01010000000100001?11111?001010000100000-1000100000?11?00?101000010000000010?1010001?3??????00?1100000???0?0????????????????
    Gonatodes_albogularis          101000-00011020000000030110000000000001030000020-0-001102100110-1110010010003210100-011-1000101--0110001110110000010021100010000001100121000001100100000001100310000000000-0311-010122320-0010011010-000010001110000000000000000000010100-001-120?010000000100001001111?001010010?00000-1000200000311?00?101?00000000-00010?1???0???1??????00?0????????????????????????????
    Haasiophis_terrasanctus        200011-0001?020100000?200002100?000?1--030001--0-0---100000?3-??01-0030-11103-02-?0-1001001--00011-000?010121000102-011100000010-0022?1?0-0??11???12?2-?1?????21?20001110??00?00-000011200201121?101??00?0000001000003000010102000???12010221-??0?21?11100?2-201?002-00-20-1002-0?---------2-01000?0????????????00000-00?????????????????????????????????-?????????????????
    Heloderma_horridum             101-001111110100000001300100000010001010100000000101-1000000110-0100010010013000110-01010000101--0110000101110111011121000020100100000002101001001100000100000102000000001100000000001120-0011000111?0010000100101120200110120100010012101121-000011010000020100000010010010010-020000000001101000010000?1010000101012000002311101010001?00111?000?10101110????????????????
    Heloderma_suspectum            101-001111110100000?00300100000010001010100000000101-1000000110-0100010010013000110-01010000101--01100001011101110111?1000020100100000002101001001100000100000102000000001100000000001120-001100011100010000100101120200110120100010012101121-000011010000020100000010010010010-020000000001101000010000?1010000101012000002311101010001?00111?000?101011100??0????????????
    Helodermoides_tuberculatus     1000?011111?0?000000?130?0000??0000000?010?000110101?1001000100-01000100100101??1000010?100?2001100????000011000100?001???100000000000?0?00000?001100010100???1??0?000000??0110001000011100001010010000010001011020600000000101000???12?011?1-????????0????001?????????????010????00000??????????0?1???0?1010?1110100221???????????????????????????????????????????????????
    Huehuecuetzpalli_mixteca       2100?1-000012?00010010???00100??100000-02000001100000110200?0-0-00?001?010012?0000100000000100000000????1?????????????1??????????????0????????????????????????11?000?001?????????00001?20-001??1?1?1011??000??????2000000?00?00000????1000101-0200010000000000000000010?0010?0000?00000?000110?000??????????0???10?0???0???????????????????????????????????????????????????
    Lacerta_viridis                100000000011000000000010??000000000000?0?0000000000?01?021000-??110011001201??010??1?100100???0?10011000?000100011100?1000?000?00000000021000?20011000000000?0102000010010-00000-00002020-000001001000000010000000030000000000?000000120011?1-??00?10?0000100000?001110100?0000???0000000001200000010?00?20100?000000000000030200010001??00?0000110210001?0?110000000000100
    Lanthanotus_borneensis         101-01-0001101000001012001?11?1110001-0010100011000101001000100-010001001?013000001-00011000101--0111000100111111010111000010100000000002001100001101010100000112100000001?01000000001120-001101011100010000100101120200110020100011012012121-0102?1010000021100000011?100302000020000000001101000210000?1010000101001010002411101?10001?11101?000120011?1?0??00???????????
    Lepidophyma_flavimaculatum     100000-000110000000000200110000000000000200000101000010010000-0-1110110002023111??210101000?210-0001000011011000101002100013-10000010000100000210-100000000?00112000010000-00100-10122110-0011011010?10001100000000400000000000000000120010?1-0100110?0000?00?00?00111000?10000???000000000020100001010002010100000000000101102000200??????????01??21??????????????????????
    Leptotyphlops_sp               001010-0001102010001004000-0100--000---030--1--0-0---10000003-0-0110020010003-02-00-101-0-1--01--1-0000010011010101-021100011-00-012211-0-011000?112-2-01010?031?20001100010001---0001320-20-1210100-00000000001000002000000?0210011012211221-020?210?110002-2010002-00-20-1002-0----------2--1-20-0?000?201111000000-00111?????1???0??????????????????????????????????????
    Lialis_burtonis                001000-00011010000001130?0-000001000000030000020-0---1100100110-1100010-00003?010001011-1000101--0110000100110111110021100010000001100102000002100100000001100311000000000-030??010122020-0010011010-000000011010100000000000000000??12001021-??00010010000100101010100-0031000-0-4--------1--1001-01100?201101000000-00010?10?000000??????-00210001000000?0???1???????????
    Liotyphlops_albirostris        001010-00010-2010001010000-3--0--0000-0030--0011001--10010003-0-0110030000003-02-00-101-0-000????1-00010100110211010021300010-00-012211-0-011000?112-2-01010?031?20001100011001---0001320-20-1-10110-00000000001000002000000?0200011012211221-020?210?110002-2110002-00-20-1002-0----------2--1-20-0?000?201101000000-00111?????1???0??????--??????????????????????????????
    Macrocephalosaurus             1000?00111110?000000004000-00000010000?0100000101000110000000-0-1000?10010022?0000010000100210031001?0?0000010101010020101120000001000001000001?01100000001???10?000?1001??1001--10002020-0001010010000??0110001000400100000000000???12000221-010?110100002000000?01011?01?0100???000000000021000001???????????????????????????????????????????????????????????????????????
    Ophisaurus_apodus              1000000000110100100001?00000001100000010100000110000010010000-0-0100?10011010000111101001000000110011000100100001000101000100100000000002001001001100000100000112100000001202000010000111100000010101?0000001011020?0000001010000111012011021-1100210110002202010000110110-000010-4--------0-01001-00000?2110011101000010002211001010?????0??0?000020000100?????00?????????
    Oplurus_cyclurus               001?000111110000000010300110000101000000100000010101?11021010-0-000001011000200001100001001--0010????0?110001000102011111010010100000001000000100010000000100011?000?0000??03001010100020-0011011010000??0000000200400100000000000???120000?1-00??01???????1??????????0???10???0?????????????????????000110100??????????0?0?????????0?0????11??????????????????????????????
    Pachyrhachis_problematicus     1?1?1?-0001???0?0???????00???0??000??--030??1--0-0---100000?????0???030??1?03??2??0-100?001--00001-000?0????????102-01????000??0-002?????-0???1???12?2-???????21?200?11100????00-?0001?20-2?112??101????0000?0?10?00030?00001??000???12000221-??0?211111?0?2-201??02-00-20-1002-0?---------2??1000?0????????????00000-00?????????????????????????????????-?????????????????
    Pholidobolus_sp                1?10000?1?11000000000030010000?1000000?0??0000000001011021001?0-?10011001202300000?00?0010000?02100100001?01100011100?1110?00000000?00002000002?00100000000100102000010010-000??-100??020-001?01101?1000001100000?0300000000?00000?10120012?1-??0001010000100000?001111000?00?0?1?0020000000201000?10?00?201?100000000000000402000?00?????011000110110001?20110000010?00100
    Platecarpus                    310??1-0001211000?????-?0001100010101-?0200001000001011010100-0-00011-0011100000?1000000100010021001101??01110011?101110001000?00?000???2001101?00110001?00???11?0111011011???00110001320-100110?101??0100001001011002011000100000???12000221-?00?110?10010201000?0??10?00?0??????3220310012211110?0??????????????????????0????????????????????????????????????????????????
    Plotosaurus                    310??1-000121200000011-?00021000001?1-0010000001000101111000????1??1220010002?00???0?000000??10?1001?010?011100110101111101100?00000000020010?1?01110000000???11?011?0110???????110001?20-10?110?101?01??0001001011002001010100000???12100021-010?110110110201000??0100?10?0??????22202??10??????0?????????????????????????????????????????????????????????????????????????
    Polyglyphanodon_sternbergi     1000000011110?000000103000000000010000001?0000100000110000000-??0000?1?-1?0?2?000000001-000020011001????100010101010021111110000??0????????????????0?10???????1??10000001??00000010002020-00010100?0000??0110001000714000000000000????????????????????????2??????????11??1?????????????????????????????????????????????????????????????????????????????????????????????????
    Pontosaurus                    2100?1-000120?0000001130?11110??000?0-10????001100010110210?????0??1?1011?1?0?00???0?00?100??00?1001????????????????12???????????????00???????????11?00???????1??011?0110??10000110001020-1001111101??110000101?011202001000???000???12001?21-??03111100110211000?0??10?10?0??????00200??002???000?0???0?10?001???00?-00???????????????????????????????????????????????????
    Rhineura_floridana             10101011111102?00000?130000100100000101030000011000101000000110-1100020-11003002???-101-0-0?-01--0110000?0001000101002010013-1010112210-0-01-000-112-0101111013112000?0000-0?01-0101213210001001?000?0000100000101000?0000000110000?-12201021-0?0121011100120210?002-00-20-1002-0----------2--1-20-00001?201010000000-00110040101?000010?0?--?0?00?10???1?00???0???????????
    Saniwa                         1100?10001110?000001?130?1?110?100000??01111001100?1?1002000????0??0010010010?00010000011000110?100110?-10111001002011100001010?????000020????10???0?0??1?????1???00?0?0011?????000001????00???1?011??01000010110112020011002??000???12012021-0112110?0?000211001000111?002???0?0200000-1001??000000???0????0?0?00000-0????????????????????????????????????????????????????
    Scincus_scincus                1000000101?10?0000000130010000?10000?01020000000??00?1102100100-1100110-12020?1000210100100020?010011000110111001?10021110?000000000000020000010011000?00001001120000100?0100001-10112010-0000000000010000001011110000000000100000?1012001021-11001101000000000010011100011010010000200-100?201000?10000?20110101111000000001020002?0??????00?????????????010100010?1?00??0
    Shinisaurus_crocodilurus       10110001111101000000011000-00001010001?1100000000?01011020000-0-0100110011010000011000011000110110011000100110001010110020100100000000002101?01001100000100000112100000001200000000001?1100001011010000000000001010200001000101000110120010?1-11001101000000000000001100001010000100000100001010002100002101000010000001000221100???0?????00?0?0000100?0100????????????????
    Sineoamphisbaena               1010100011110?00000000200??00010110010-02?0?001000001100100?11??0110?10-00?23?01???1001-100?1?001001?00??00010001010020?0??3-0000?1????-????00?0??1000000?????10?000000?????????01010??20-0????1?0?0??0??0??000?000104000000?00000???120002?1-??001??1????????00?????1?????0??????0020?????????????????????????????????????????????????????????????????????????????????????
    Sphenodon_punctatus            100000-000010200000001?00000?00000000000?0000000?000101000000-0-0000100-11000-000000000?000?100200000000?000000000000001010000?00000000000000000001000000000?0001100010000-0001--0010?300-01---00000?-0000000000000?0?0000?000000000001000?01-020?000100000000?01000000000?000000-00000000010000000100000100000000000-00000?000000000-0000?00?0000?00???0?000100?0000000100
    Strophurus_ciliaris            100-00-000?1020000000130100000010000000030000020-0-00110210011??110001000100311?00?-?11-100??01?-0110000??01100011100211000100?00011001220100?00001000100011?0311000000000-00001010022320-0000011010?000010011110110000000000000000010?001001-1101010000000100001011110101?0100?0100200-1001101000311?00?101?00000000-00010?101000100?????0000?100000000000????????????????
    Trogonophis_wiegmanni          101010-0001112100000112000000110000010-030001--0-0---1000000110-1100010-11003002???-101-0-0?-01--1-00000?0001000101-02110013-1?101022?0-0-01-??0-111-0001101?1311200010000-0201--10121300-01---10000?01001000001010001000000-1000001-12201021-020121011100120201?002-0012031000-0----------2--1-20-00?01?2010?0?00000-00110040101?000010?0?--?0?00?10???1?0????????????????
    Tylosaurus                     310??1-000121120000011-?0001100010101-?0100001000001011010000-0-000111001100000001000000100011021001101??011100110101111101000?000000???2001101000110000100???11?111?01101110000110001320-1001100101??0100001001011002001000100000???1210?221-1000110110010201000?0??0011000??0???12202?0002211110?0???0????0?1??00??-00??0????????????????????????????????????????????????
    Typhlops_jamaicensis           001010-0001102010000001000-3--0--000---030--1--0-0---10001003-0-0110010010003-11-00-101-0-1--01--1-0001010011021101-021000010-00-012211-0-011000?112-2-01010?031120001100010011---0001320-20-1-10100-00000000001000002000000?0201011012211221-020?210?110002-2110002-00-20-1002-0----------22-1-20-0?000?201101000000-00111?????1???0??????????????????????????????????????
    Uromastyx_sp                   000001----120200000010301110000101000110300000?11000111021000-0-000001101000220000000100001--00200100000010010000010020211001001000000010000001000100100000?0011200000000??00000010001321001---11010000000000000100101100000-0-00000012011001-10010101000002000010000110000010011200000-100110000011?100?10100???0?0????0?0?????????0?0???????????????????0????????????????
    Varanus_acanthurus             110001-000120000100001300111001010000-?0111100110012-1002000110-010011011101000000000201100011021001100-10111001001012100001010?000000002?0??0?00?10101010000011?100000001101000000001120-0011011011000100001001011202001100201000???120?2021-???2?10100?0021100?00011??0020000??200000-100???0000??0000?101000??0?00?0?000?????0??????????????????????????????????????????
    Varanus_exanthematicus         1100010001120000000111300101101010000-00111100110011-1002000110-010011011101000000?00001100011011001100-101110110010121000010101000000002001101000101010100000112000000001101000000001120-000101101100010000100101150200110020100011012022021-021221010000021100100011100020000?0200000-1001100000010000?101000??0?00?0?000?????0??????????????????????????????????????????
    Varanus_salvator               3110010001120000100101300111101010000-00111100110?12-1002100110-010011001101000000000001100011021001100-101111110010121000010100000000002101100000101010100000112100000001101000000001120-0011011011000100001001011202001100201000????????????????????????????????????????????????00000-100????000???????1010000??????????0????????????????????????????????????????????????
    Wonambi_naracoortensis         ????1?-0?0?????10?????3000021??10?????????????????????000000????0??0???-01103-02???-?0???0???????????????????00?112???1110?0?110-0022?1-1-01010?101222-01?-??????????111001?????-10001?21120??2???????1001000001000003?0000010?000???120002?1-?????101110002?101???????????????????????????????????????????????????????????????????????????????????????????????????????????
    Xenopeltis_unicolor            101011-0001202?1000001300002100100000--030001--0-0---10?00003-1101-0030-11003-02-?0-1001001--01-11-0001010111100102-011100000000-002211-0-011110101202-01000?0211210011100101100-0000132002011200100?-000000000100100300000010000011012000221-??0?21011100?2-201?002-00-20-1002-0------?---2?-1--1-00000?201?01000000-000110411?1?0?0??????--??0?0??????1-20??01???????????
    Xenosaurus_grandis             1000000111110100000011300000000100000010100000001100111021000-0-01000100100101010?100100100-11001000100010011000101012110000010000000000200100100?100000100000112000010001103001-100001110000001201000000000100101030000000010000011012001121-?00021010000020000000011000010000?010000000000201000?100000101000010000010000221100101??????0000?00001010110000?100??????????
  ;
END;
begin comment;
[Used by Weins 2010, but data is from Conrad 2008]
end;

BEGIN TAXA;
	DIMENSIONS NTAX = 64;
	TAXLABELS
		Acontias_sp
		Adriosaurus_suessi
		Agama_agama
		Aigialosaurus_dalmaticus
		Amphisbaena_fuliginosa
		Anelytropsis_papillosus
		Anilius_scytale
		Anniella_pulchra
		Anolis_carolinensis
		Aspidoscelis_tigris
		Bipes_canaliculatus
		Boa_constrictor
		Celestus_enneagrammus
		Chamaleo_sp
		Clidastes
		Cordylus_mossambicus
		Delma_borea
		Dibamus_novaeguinae
		Dinilysia_patagonica
		Elgaria_multicarinata
		Enyalioides_laticeps
		Eosaniwa_koehni
		Eublepharis_macularius
		Eupodophis_descouensis
		Feylinia_polylepis
		Gekko_gecko
		Gonatodes_albogularis
		Haasiophis_terrasanctus
		Heloderma_horridum
		Heloderma_suspectum
		Helodermoides_tuberculatus
		Huehuecuetzpalli_mixteca
		Lacerta_viridis
		Lanthanotus_borneensis
		Lepidophyma_flavimaculatum
		Leptotyphlops_sp
		Lialis_burtonis
		Liotyphlops_albirostris
		Macrocephalosaurus
		Ophisaurus_apodus
		Oplurus_cyclurus
		Pachyrhachis_problematicus
		Pholidobolus_sp
		Platecarpus
		Plotosaurus
		Polyglyphanodon_sternbergi
		Pontosaurus
		Rhineura_floridana
		Saniwa
		Scincus_scincus
		Shinisaurus_crocodilurus
		Sineoamphisbaena
		Sphenodon_punctatus
		Strophurus_ciliaris
		Trogonophis_wiegmanni
		Tylosaurus
		Typhlops_jamaicensis
		Uromastyx_sp
		Varanus_acanthurus
		Varanus_exanthematicus
		Varanus_salvator
		Wonambi_naracoortensis
		Xenopeltis_unicolor
		Xenosaurus_grandis
	;
END;
BEGIN TREES;
	TRANSLATE
		1	Acontias_sp,
		2	Adriosaurus_suessi,
		3	Agama_agama,
		4	Aigialosaurus_dalmaticus,
		5	Amphisbaena_fuliginosa,
		6	Anelytropsis_papillosus,
		7	Anilius_scytale,
		8	Anniella_pulchra,
		9	Anolis_carolinensis,
		10	Aspidoscelis_tigris,
		11	Bipes_canaliculatus,
		12	Boa_constrictor,
		13	Celestus_enneagrammus,
		14	Chamaleo_sp,
		15	Clidastes,
		16	Cordylus_mossambicus,
		17	Delma_borea,
		18	Dibamus_novaeguinae,
		19	Dinilysia_patagonica,
		20	Elgaria_multicarinata,
		21	Enyalioides_laticeps,
		22	Eosaniwa_koehni,
		23	Eublepharis_macularius,
		24	Eupodophis_descouensis,
		25	Feylinia_polylepis,
		26	Gekko_gecko,
		27	Gonatodes_albogularis,
		28	Haasiophis_terrasanctus,
		29	Heloderma_horridum,
		30	Heloderma_suspectum,
		31	Helodermoides_tuberculatus,
		32	Huehuecuetzpalli_mixteca,
		33	Lacerta_viridis,
		34	Lanthanotus_borneensis,
		35	Lepidophyma_flavimaculatum,
		36	Leptotyphlops_sp,
		37	Lialis_burtonis,
		38	Liotyphlops_albirostris,
		39	Macrocephalosaurus,
		40	Ophisaurus_apodus,
		41	Oplurus_cyclurus,
		42	Pachyrhachis_problematicus,
		43	Pholidobolus_sp,
		44	Platecarpus,
		45	Plotosaurus,
		46	Polyglyphanodon_sternbergi,
		47	Pontosaurus,
		48	Rhineura_floridana,
		49	Saniwa,
		50	Scincus_scincus,
		51	Shinisaurus_crocodilurus,
		52	Sineoamphisbaena,
		53	Sphenodon_punctatus,
		54	Strophurus_ciliaris,
		55	Trogonophis_wiegmanni,
		56	Tylosaurus,
		57	Typhlops_jamaicensis,
		58	Uromastyx_sp,
		59	Varanus_acanthurus,
		60	Varanus_exanthematicus,
		61	Varanus_salvator,
		62	Wonambi_naracoortensis,
		63	Xenopeltis_unicolor,
		64	Xenosaurus_grandis
	;
	TREE * ambiguous = [&R] (1,((25,(50,(16,((64,((51,(((4,((2,47),(45,(15,(44,56))))),(34,(49,(60,(59,61))))),(22,(29,30)))),((8,40),(31,(13,20))))),(((14,((3,58),(41,(9,21)))),(32,53)),((43,(10,(46,(39,52)))),(33,35))))))),((((55,(48,(5,11))),(36,((19,(62,(7,(63,(12,(24,(28,42))))))),(38,57)))),(6,18)),((17,37),(54,(23,(26,27)))))));
	TREE * ambiguous = [&R] (1,((25,(50,(16,((64,((51,((((2,47),(4,(15,(44,(45,56))))),(34,(49,(60,(59,61))))),(22,(29,30)))),((8,40),(31,(13,20))))),(((14,((3,58),(41,(9,21)))),(32,53)),((43,(10,(46,(39,52)))),(33,35))))))),((((55,(48,(5,11))),(36,((19,(62,(7,(63,(12,(42,(24,28))))))),(38,57)))),(6,18)),((17,37),(54,(23,(26,27)))))));
	TREE * ambiguous = [&R] (1,((25,(50,(16,((64,((51,((((2,47),(4,(15,(44,(45,56))))),(34,(49,(60,(59,61))))),(22,(29,30)))),((8,40),(31,(13,20))))),(((14,((3,58),(41,(9,21)))),(32,53)),((43,(10,(46,(39,52)))),(33,35))))))),((((55,(48,(5,11))),(36,((19,(62,(7,(63,(12,(28,(24,42))))))),(38,57)))),(6,18)),((17,37),(54,(23,(26,27)))))));
	TREE * ambiguous = [&R] (1,((25,(50,(16,((64,((51,((22,(((2,47),(4,(15,(44,(45,56))))),(34,(49,(60,(59,61)))))),(29,30))),((8,40),(31,(13,20))))),(((14,((3,58),(41,(9,21)))),(32,53)),((43,(10,(46,(39,52)))),(33,35))))))),((((55,(48,(5,11))),(36,((19,(62,(7,(63,(12,(24,(28,42))))))),(38,57)))),(6,18)),((17,37),(54,(23,(26,27)))))));
	TREE * ambiguous = [&R] (1,((25,(50,(16,((64,((51,(((4,((2,47),(45,(15,(44,56))))),(34,(49,(60,(59,61))))),(22,(29,30)))),((8,40),(31,(13,20))))),(((14,((3,58),(41,(9,21)))),(32,53)),((43,(10,(46,(39,52)))),(33,35))))))),((((55,(48,(5,11))),(36,((19,(62,(7,(63,(12,(42,(24,28))))))),(38,57)))),(6,18)),((17,37),(54,(23,(26,27)))))));
	TREE * ambiguous = [&R] (1,((25,(50,(16,((64,((51,((((2,47),(4,(15,(44,(45,56))))),(34,(49,(60,(59,61))))),(22,(29,30)))),((8,40),(31,(13,20))))),(((14,((3,58),(41,(9,21)))),(32,53)),((43,(10,(46,(39,52)))),(33,35))))))),((((55,(48,(5,11))),(36,((19,(62,(7,(63,(12,(24,(28,42))))))),(38,57)))),(6,18)),((17,37),(54,(23,(26,27)))))));
	TREE * ambiguous = [&R] (1,((25,(50,(16,((64,((51,((22,(((2,47),(4,(15,(44,(45,56))))),(34,(49,(60,(59,61)))))),(29,30))),((8,40),(31,(13,20))))),(((14,((3,58),(41,(9,21)))),(32,53)),((43,(10,(46,(39,52)))),(33,35))))))),((((55,(48,(5,11))),(36,((19,(62,(7,(63,(12,(28,(24,42))))))),(38,57)))),(6,18)),((17,37),(54,(23,(26,27)))))));
	TREE * ambiguous = [&R] (1,((25,(50,(16,((64,((51,(((4,((2,47),(45,(15,(44,56))))),(34,(49,(60,(59,61))))),(22,(29,30)))),((8,40),(31,(13,20))))),(((14,((3,58),(41,(9,21)))),(32,53)),((43,(10,(46,(39,52)))),(33,35))))))),((((55,(48,(5,11))),(36,((19,(62,(7,(63,(12,(28,(24,42))))))),(38,57)))),(6,18)),((17,37),(54,(23,(26,27)))))));
	TREE * ambiguous = [&R] (1,((25,(50,(16,((64,((51,((22,(((2,47),(4,(15,(44,(45,56))))),(34,(49,(60,(59,61)))))),(29,30))),((8,40),(31,(13,20))))),(((14,((3,58),(41,(9,21)))),(32,53)),((43,(10,(46,(39,52)))),(33,35))))))),((((55,(48,(5,11))),(36,((19,(62,(7,(63,(12,(42,(24,28))))))),(38,57)))),(6,18)),((17,37),(54,(23,(26,27)))))));
	TREE * extraState = [&R] (1,((8,(40,(((51,((32,((2,47),(4,(15,(45,(44,56)))))),(22,((29,30),(34,(49,(60,(59,61)))))))),(64,(((33,(35,((9,(21,(41,((3,58),(14,53))))),((17,37),(54,(23,(26,27))))))),(43,(10,(39,(46,52))))),(16,50)))),(31,(13,20))))),(25,(6,(18,((55,(5,(11,48))),((19,(62,(7,(63,(12,(24,(28,42))))))),(36,(38,57)))))))));
	TREE * extraState = [&R] (1,((8,(40,(((51,(31,((32,((2,47),(4,(15,(45,(44,56)))))),(22,((29,30),(34,(49,(60,(59,61))))))))),(64,(((35,((9,(21,(41,((3,58),(14,53))))),((17,37),(54,(23,(26,27)))))),(33,(43,(10,(39,(46,52)))))),(16,50)))),(13,20)))),(25,(6,(18,((55,(48,(5,11))),((7,(19,(62,(63,(12,(24,(28,42))))))),(36,(38,57)))))))));
	TREE * extraState = [&R] (1,((8,(40,(((31,(22,((32,((2,47),(4,(15,(45,(44,56)))))),((29,30),(34,(49,(60,(59,61)))))))),(51,(64,(((33,(35,((9,(21,(41,((3,58),(14,53))))),((17,37),(54,(23,(26,27))))))),(43,(10,(39,(46,52))))),(16,50))))),(13,20)))),(25,(6,(18,((55,(48,(5,11))),((19,(62,(7,(63,(12,(28,(24,42))))))),(36,(38,57)))))))));
	TREE * extraState = [&R] (1,((8,(40,(((51,((32,((2,47),(4,(15,(45,(44,56)))))),((22,(29,30)),(34,(49,(60,(59,61))))))),(64,(((35,((9,(21,(41,((3,58),(14,53))))),((17,37),(54,(23,(26,27)))))),(33,(43,(10,(46,(39,52)))))),(16,50)))),(31,(13,20))))),(25,(6,(18,((55,(48,(5,11))),(((7,(63,(12,(42,(24,28))))),(19,62)),(36,(38,57)))))))));
	TREE * extraState = [&R] (1,((8,(40,(((31,(22,((32,((2,47),(4,(15,(45,(44,56)))))),((29,30),(34,(49,(60,(59,61)))))))),(51,(64,(((35,((9,(21,(41,((3,58),(14,53))))),((17,37),(54,(23,(26,27)))))),(33,(43,(10,(46,(39,52)))))),(16,50))))),(13,20)))),(25,(6,(18,((55,(5,(11,48))),(((7,(63,(12,(24,(28,42))))),(19,62)),(36,(38,57)))))))));
	TREE * extraState = [&R] (1,((8,(40,(20,(13,(31,((51,((32,(4,((2,47),(45,(15,(44,56)))))),(22,((29,30),(34,(49,(60,(59,61)))))))),(64,(((33,(35,((9,(21,(41,((3,58),(14,53))))),((17,37),(54,(23,(26,27))))))),(43,(10,(39,(46,52))))),(16,50))))))))),(25,(6,(18,((55,(48,(5,11))),((19,(62,(7,(63,(12,(42,(24,28))))))),(36,(38,57)))))))));
	TREE * extraState = [&R] (1,((8,(40,(((51,(31,(22,(((32,((2,47),(4,(15,(45,(44,56)))))),(34,(49,(60,(59,61))))),(29,30))))),(64,(((35,((9,(21,(41,((3,58),(14,53))))),((17,37),(54,(23,(26,27)))))),(33,(43,(10,(46,(39,52)))))),(16,50)))),(13,20)))),(25,(6,(18,((55,(48,(5,11))),((7,(19,(62,(63,(12,(24,(28,42))))))),(36,(38,57)))))))));
	TREE * extraState = [&R] (1,((8,(40,(((51,(31,(22,((32,((2,47),(4,(15,(45,(44,56)))))),((29,30),(34,(49,(60,(59,61))))))))),(64,(((33,(35,((9,(21,(41,((3,58),(14,53))))),((17,37),(54,(23,(26,27))))))),(43,(10,(39,(46,52))))),(16,50)))),(13,20)))),(25,(6,(18,((55,(48,(5,11))),((7,(19,(62,(63,(12,(24,(28,42))))))),(36,(38,57)))))))));
	TREE * extraState = [&R] (1,((8,(40,(((51,(31,(22,(((32,(4,((2,47),(45,(15,(44,56)))))),(34,(49,(60,(59,61))))),(29,30))))),(64,(((35,((9,(21,(41,((3,58),(14,53))))),((17,37),(54,(23,(26,27)))))),(33,(43,(10,(39,(46,52)))))),(16,50)))),(13,20)))),(25,(6,(18,((55,(48,(5,11))),((7,(19,(62,(63,(12,(42,(24,28))))))),(36,(38,57)))))))));
	TREE * extraState = [&R] (1,((8,(40,(20,(13,(31,((51,((32,(4,((2,47),(45,(15,(44,56)))))),(22,((29,30),(34,(49,(60,(59,61)))))))),(64,(((33,(35,((9,(21,(41,((3,58),(14,53))))),((17,37),(54,(23,(26,27))))))),(43,(10,(39,(46,52))))),(16,50))))))))),(25,(6,(18,((55,(48,(5,11))),(((7,(63,(12,(42,(24,28))))),(19,62)),(36,(38,57)))))))));
	TREE * extraState = [&R] (1,((8,(40,(((51,((32,((2,47),(4,(15,(45,(44,56)))))),(22,((29,30),(34,(49,(60,(59,61)))))))),(64,(((35,((9,(21,(41,((3,58),(14,53))))),((17,37),(54,(23,(26,27)))))),(33,(43,(10,(46,(39,52)))))),(16,50)))),(20,(13,31))))),(25,(6,(18,((55,(5,(11,48))),(((7,(63,(12,(24,(28,42))))),(19,62)),(36,(38,57)))))))));
	TREE * extraState = [&R] (1,((8,(40,(((51,(31,(22,((32,(4,((2,47),(45,(15,(44,56)))))),((29,30),(34,(49,(60,(59,61))))))))),(64,(((35,((9,(21,(41,((3,58),(14,53))))),((17,37),(54,(23,(26,27)))))),(33,(43,(10,(39,(46,52)))))),(16,50)))),(13,20)))),(25,(6,(18,((55,(48,(5,11))),(((7,(63,(12,(24,(28,42))))),(19,62)),(36,(38,57)))))))));
	TREE * extraState = [&R] (1,((8,(40,(((51,((32,((2,47),(4,(15,(45,(44,56)))))),(22,((29,30),(34,(49,(60,(59,61)))))))),(64,(((33,(35,((9,(21,(41,((3,58),(14,53))))),((17,37),(54,(23,(26,27))))))),(43,(10,(39,(46,52))))),(16,50)))),(31,(13,20))))),(25,(6,(18,((55,(48,(5,11))),(((7,(63,(12,(24,(28,42))))),(19,62)),(36,(38,57)))))))));
	TREE * extraState = [&R] (1,((8,(40,(20,(13,(31,((51,((32,(4,((2,47),(45,(15,(44,56)))))),(22,((29,30),(34,(49,(60,(59,61)))))))),(64,(((35,((9,(21,(41,((3,58),(14,53))))),((17,37),(54,(23,(26,27)))))),(33,(43,(10,(39,(46,52)))))),(16,50))))))))),(25,(6,(18,((55,(48,(5,11))),((19,(62,(7,(63,(12,(24,(28,42))))))),(36,(38,57)))))))));
	TREE * extraState = [&R] (1,((8,(40,(((51,(31,((32,(4,((2,47),(45,(15,(44,56)))))),(22,((29,30),(34,(49,(60,(59,61))))))))),(64,(((35,((9,(21,(41,((3,58),(14,53))))),((17,37),(54,(23,(26,27)))))),(33,(43,(10,(39,(46,52)))))),(16,50)))),(13,20)))),(25,(6,(18,((55,(5,(11,48))),(((7,(63,(12,(28,(24,42))))),(19,62)),(36,(38,57)))))))));
	TREE * extraState = [&R] (1,((8,(40,(((51,(31,(22,((32,((2,47),(4,(15,(45,(44,56)))))),((29,30),(34,(49,(60,(59,61))))))))),(64,(((35,((9,(21,(41,((3,58),(14,53))))),((17,37),(54,(23,(26,27)))))),(33,(43,(10,(46,(39,52)))))),(16,50)))),(13,20)))),(25,(6,(18,((55,(5,(11,48))),(((7,(63,(12,(42,(24,28))))),(19,62)),(36,(38,57)))))))));
	TREE * extraState = [&R] (1,((8,(40,(((51,(31,(22,((32,(4,((2,47),(45,(15,(44,56)))))),((29,30),(34,(49,(60,(59,61))))))))),(64,(((33,(35,((9,(21,(41,((3,58),(14,53))))),((17,37),(54,(23,(26,27))))))),(43,(10,(39,(46,52))))),(16,50)))),(13,20)))),(25,(6,(18,((55,(48,(5,11))),((19,(62,(7,(63,(12,(28,(24,42))))))),(36,(38,57)))))))));
	TREE * extraState = [&R] (1,((8,(40,(((51,((32,(4,((2,47),(45,(15,(44,56)))))),(22,((29,30),(34,(49,(60,(59,61)))))))),(64,(((33,(35,((9,(21,(41,((3,58),(14,53))))),((17,37),(54,(23,(26,27))))))),(43,(10,(39,(46,52))))),(16,50)))),(20,(13,31))))),(25,(6,(18,((55,(5,(11,48))),((7,(19,(62,(63,(12,(42,(24,28))))))),(36,(38,57)))))))));
	TREE * extraState = [&R] (1,((8,(40,(((51,((32,(4,((2,47),(45,(15,(44,56)))))),(22,((29,30),(34,(49,(60,(59,61)))))))),(64,(((35,((9,(21,(41,((3,58),(14,53))))),((17,37),(54,(23,(26,27)))))),(33,(43,(10,(46,(39,52)))))),(16,50)))),(20,(13,31))))),(25,(6,(18,((55,(48,(5,11))),((19,(62,(7,(63,(12,(42,(24,28))))))),(36,(38,57)))))))));
	TREE * extraState = [&R] (1,((8,(40,(((51,((32,((2,47),(4,(15,(45,(44,56)))))),((22,(29,30)),(34,(49,(60,(59,61))))))),(64,(((35,((9,(21,(41,((3,58),(14,53))))),((17,37),(54,(23,(26,27)))))),(33,(43,(10,(46,(39,52)))))),(16,50)))),(20,(13,31))))),(25,(6,(18,((55,(48,(5,11))),((7,(19,(62,(63,(12,(42,(24,28))))))),(36,(38,57)))))))));
	TREE * extraState = [&R] (1,((8,(40,(((51,((32,(4,((2,47),(45,(15,(44,56)))))),(22,((29,30),(34,(49,(60,(59,61)))))))),(64,(((35,((9,(21,(41,((3,58),(14,53))))),((17,37),(54,(23,(26,27)))))),(33,(43,(10,(46,(39,52)))))),(16,50)))),(31,(13,20))))),(25,(6,(18,((55,(48,(5,11))),((19,(62,(7,(63,(12,(24,(28,42))))))),(36,(38,57)))))))));
	TREE * extraState = [&R] (1,((8,(40,(((51,(31,((32,(4,((2,47),(45,(15,(44,56)))))),(22,((29,30),(34,(49,(60,(59,61))))))))),(64,(((35,((9,(21,(41,((3,58),(14,53))))),((17,37),(54,(23,(26,27)))))),(33,(43,(10,(46,(39,52)))))),(16,50)))),(13,20)))),(25,(6,(18,((55,(5,(11,48))),((19,(62,(7,(63,(12,(24,(28,42))))))),(36,(38,57)))))))));
	TREE * extraState = [&R] (1,((8,(40,(((31,(22,((32,((2,47),(4,(15,(45,(44,56)))))),((29,30),(34,(49,(60,(59,61)))))))),(51,(64,(((35,((9,(21,(41,((3,58),(14,53))))),((17,37),(54,(23,(26,27)))))),(33,(43,(10,(46,(39,52)))))),(16,50))))),(13,20)))),(25,(6,(18,((55,(5,(11,48))),((7,(19,(62,(63,(12,(24,(28,42))))))),(36,(38,57)))))))));
	TREE * extraState = [&R] (1,((8,(40,(((51,(31,(22,(((32,((2,47),(4,(15,(44,(45,56)))))),(34,(49,(60,(59,61))))),(29,30))))),(64,(((35,((9,(21,(41,((3,58),(14,53))))),((17,37),(54,(23,(26,27)))))),(33,(43,(10,(39,(46,52)))))),(16,50)))),(13,20)))),(25,(6,(18,((55,(48,(5,11))),((7,(19,(62,(63,(12,(24,(28,42))))))),(36,(38,57)))))))));
	TREE * extraState = [&R] (1,((8,(40,(((51,((32,(4,((2,47),(45,(15,(44,56)))))),(22,((29,30),(34,(49,(60,(59,61)))))))),(64,(((35,((9,(21,(41,((3,58),(14,53))))),((17,37),(54,(23,(26,27)))))),(33,(43,(10,(46,(39,52)))))),(16,50)))),(20,(13,31))))),(25,(6,(18,((55,(5,(11,48))),((19,(62,(7,(63,(12,(42,(24,28))))))),(36,(38,57)))))))));
	TREE * extraState = [&R] (1,((8,(40,(((51,(31,((32,((2,47),(4,(15,(45,(44,56)))))),(22,((29,30),(34,(49,(60,(59,61))))))))),(64,(((35,((9,(21,(41,((3,58),(14,53))))),((17,37),(54,(23,(26,27)))))),(33,(43,(10,(39,(46,52)))))),(16,50)))),(13,20)))),(25,(6,(18,((55,(5,(11,48))),(((7,(63,(12,(42,(24,28))))),(19,62)),(36,(38,57)))))))));
	TREE * extraState = [&R] (1,((8,(40,(20,(13,(31,((51,((32,(4,((2,47),(45,(15,(44,56)))))),(22,((29,30),(34,(49,(60,(59,61)))))))),(64,(((35,((9,(21,(41,((3,58),(14,53))))),((17,37),(54,(23,(26,27)))))),(33,(43,(10,(46,(39,52)))))),(16,50))))))))),(25,(6,(18,((55,(5,(11,48))),((7,(19,(62,(63,(12,(42,(24,28))))))),(36,(38,57)))))))));
	TREE * extraState = [&R] (1,((8,(40,(((51,((32,((2,47),(4,(15,(45,(44,56)))))),(22,((29,30),(34,(49,(60,(59,61)))))))),(64,(((33,(35,((9,(21,(41,((3,58),(14,53))))),((17,37),(54,(23,(26,27))))))),(43,(10,(39,(46,52))))),(16,50)))),(20,(13,31))))),(25,(6,(18,((55,(48,(5,11))),((7,(19,(62,(63,(12,(42,(24,28))))))),(36,(38,57)))))))));
	TREE * extraState = [&R] (1,((8,(40,(20,(13,(31,((51,((32,((2,47),(4,(15,(45,(44,56)))))),(22,((29,30),(34,(49,(60,(59,61)))))))),(64,(((35,((9,(21,(41,((3,58),(14,53))))),((17,37),(54,(23,(26,27)))))),(33,(43,(10,(39,(46,52)))))),(16,50))))))))),(25,(6,(18,((55,(48,(5,11))),((19,(62,(7,(63,(12,(42,(24,28))))))),(36,(38,57)))))))));
	TREE * extraState = [&R] (1,((8,(40,(20,(13,(31,((51,((32,((2,47),(4,(15,(45,(44,56)))))),(22,((29,30),(34,(49,(60,(59,61)))))))),(64,(((35,((9,(21,(41,((3,58),(14,53))))),((17,37),(54,(23,(26,27)))))),(33,(43,(10,(46,(39,52)))))),(16,50))))))))),(25,(6,(18,((55,(5,(11,48))),((7,(19,(62,(63,(12,(24,(28,42))))))),(36,(38,57)))))))));
	TREE * extraState = [&R] (1,((8,(40,(((51,((32,(4,((2,47),(45,(15,(44,56)))))),((22,(29,30)),(34,(49,(60,(59,61))))))),(64,(((35,((9,(21,(41,((3,58),(14,53))))),((17,37),(54,(23,(26,27)))))),(33,(43,(10,(46,(39,52)))))),(16,50)))),(31,(13,20))))),(25,(6,(18,((55,(48,(5,11))),((7,(19,(62,(63,(12,(28,(24,42))))))),(36,(38,57)))))))));
	TREE * extraState = [&R] (1,((8,(40,(20,(13,(31,((51,((32,((2,47),(4,(15,(45,(44,56)))))),(22,((29,30),(34,(49,(60,(59,61)))))))),(64,(((35,((9,(21,(41,((3,58),(14,53))))),((17,37),(54,(23,(26,27)))))),(33,(43,(10,(46,(39,52)))))),(16,50))))))))),(25,(6,(18,((55,(5,(11,48))),((19,(62,(7,(63,(12,(42,(24,28))))))),(36,(38,57)))))))));
	TREE * extraState = [&R] (1,((8,(40,(((51,(31,(22,(((32,((2,47),(4,(15,(45,(44,56)))))),(34,(49,(60,(59,61))))),(29,30))))),(64,(((35,((9,(21,(41,((3,58),(14,53))))),((17,37),(54,(23,(26,27)))))),(33,(43,(10,(39,(46,52)))))),(16,50)))),(13,20)))),(25,(6,(18,((55,(5,(11,48))),(((7,(63,(12,(24,(28,42))))),(19,62)),(36,(38,57)))))))));
	TREE * extraState = [&R] (1,((8,(40,(((51,(31,(22,((32,(4,((2,47),(45,(15,(44,56)))))),((29,30),(34,(49,(60,(59,61))))))))),(64,(((35,((9,(21,(41,((3,58),(14,53))))),((17,37),(54,(23,(26,27)))))),(33,(43,(10,(39,(46,52)))))),(16,50)))),(13,20)))),(25,(6,(18,((55,(48,(5,11))),((7,(19,(62,(63,(12,(24,(28,42))))))),(36,(38,57)))))))));
	TREE * extraState = [&R] (1,((8,(40,(((51,(31,((32,(4,((2,47),(45,(15,(44,56)))))),(22,((29,30),(34,(49,(60,(59,61))))))))),(64,(((33,(35,((9,(21,(41,((3,58),(14,53))))),((17,37),(54,(23,(26,27))))))),(43,(10,(39,(46,52))))),(16,50)))),(13,20)))),(25,(6,(18,((55,(5,(11,48))),(((7,(63,(12,(24,(28,42))))),(19,62)),(36,(38,57)))))))));
	TREE * extraState = [&R] (1,((8,(40,(((51,(31,((32,(4,((2,47),(45,(15,(44,56)))))),(22,((29,30),(34,(49,(60,(59,61))))))))),(64,(((33,(35,((9,(21,(41,((3,58),(14,53))))),((17,37),(54,(23,(26,27))))))),(43,(10,(39,(46,52))))),(16,50)))),(13,20)))),(25,(6,(18,((55,(48,(5,11))),(((7,(63,(12,(42,(24,28))))),(19,62)),(36,(38,57)))))))));
	TREE * extraState = [&R] (1,((8,(40,(((51,((32,(4,((2,47),(45,(15,(44,56)))))),(22,((29,30),(34,(49,(60,(59,61)))))))),(64,(((35,((9,(21,(41,((3,58),(14,53))))),((17,37),(54,(23,(26,27)))))),(33,(43,(10,(46,(39,52)))))),(16,50)))),(31,(13,20))))),(25,(6,(18,((55,(48,(5,11))),((19,(62,(7,(63,(12,(28,(24,42))))))),(36,(38,57)))))))));
	TREE * extraState = [&R] (1,((8,(40,(((51,((32,(4,((2,47),(45,(15,(44,56)))))),(22,((29,30),(34,(49,(60,(59,61)))))))),(64,(((35,((9,(21,(41,((3,58),(14,53))))),((17,37),(54,(23,(26,27)))))),(33,(43,(10,(46,(39,52)))))),(16,50)))),(31,(13,20))))),(25,(6,(18,((55,(48,(5,11))),(((7,(63,(12,(28,(24,42))))),(19,62)),(36,(38,57)))))))));
	TREE * extraState = [&R] (1,((8,(40,(((51,((32,((2,47),(4,(15,(45,(44,56)))))),((22,(29,30)),(34,(49,(60,(59,61))))))),(64,(((35,((9,(21,(41,((3,58),(14,53))))),((17,37),(54,(23,(26,27)))))),(33,(43,(10,(46,(39,52)))))),(16,50)))),(20,(13,31))))),(25,(6,(18,((55,(48,(5,11))),((19,(62,(7,(63,(12,(24,(28,42))))))),(36,(38,57)))))))));
	TREE * extraState = [&R] (1,((8,(40,(((31,(22,((32,((2,47),(4,(15,(45,(44,56)))))),((29,30),(34,(49,(60,(59,61)))))))),(51,(64,(((33,(35,((9,(21,(41,((3,58),(14,53))))),((17,37),(54,(23,(26,27))))))),(43,(10,(39,(46,52))))),(16,50))))),(13,20)))),(25,(6,(18,((55,(48,(5,11))),(((7,(63,(12,(42,(24,28))))),(19,62)),(36,(38,57)))))))));
	TREE * extraState = [&R] (1,((8,(40,(((31,(22,((32,((2,47),(4,(15,(45,(44,56)))))),((29,30),(34,(49,(60,(59,61)))))))),(51,(64,(((35,((9,(21,(41,((3,58),(14,53))))),((17,37),(54,(23,(26,27)))))),(33,(43,(10,(39,(46,52)))))),(16,50))))),(13,20)))),(25,(6,(18,((55,(5,(11,48))),((19,(62,(7,(63,(12,(28,(24,42))))))),(36,(38,57)))))))));
	TREE * extraState = [&R] (1,((8,(40,(((51,((32,((2,47),(4,(15,(45,(44,56)))))),(22,((29,30),(34,(49,(60,(59,61)))))))),(64,(((33,(35,((9,(21,(41,((3,58),(14,53))))),((17,37),(54,(23,(26,27))))))),(43,(10,(39,(46,52))))),(16,50)))),(20,(13,31))))),(25,(6,(18,((55,(5,(11,48))),(((7,(63,(12,(28,(24,42))))),(19,62)),(36,(38,57)))))))));
	TREE * extraState = [&R] (1,((8,(40,(((31,(22,((32,((2,47),(4,(15,(45,(44,56)))))),((29,30),(34,(49,(60,(59,61)))))))),(51,(64,(((33,(35,((9,(21,(41,((3,58),(14,53))))),((17,37),(54,(23,(26,27))))))),(43,(10,(39,(46,52))))),(16,50))))),(13,20)))),(25,(6,(18,((55,(48,(5,11))),((19,(62,(7,(63,(12,(42,(24,28))))))),(36,(38,57)))))))));
	TREE * extraState = [&R] (1,((8,(40,(20,(13,(31,((51,((32,((2,47),(4,(15,(45,(44,56)))))),(22,((29,30),(34,(49,(60,(59,61)))))))),(64,(((35,((9,(21,(41,((3,58),(14,53))))),((17,37),(54,(23,(26,27)))))),(33,(43,(10,(46,(39,52)))))),(16,50))))))))),(25,(6,(18,((55,(48,(5,11))),((19,(62,(7,(63,(12,(24,(28,42))))))),(36,(38,57)))))))));
	TREE * extraState = [&R] (1,((8,(40,(((31,(22,((32,((2,47),(4,(15,(45,(44,56)))))),((29,30),(34,(49,(60,(59,61)))))))),(51,(64,(((35,((9,(21,(41,((3,58),(14,53))))),((17,37),(54,(23,(26,27)))))),(33,(43,(10,(39,(46,52)))))),(16,50))))),(13,20)))),(25,(6,(18,((55,(48,(5,11))),((7,(19,(62,(63,(12,(24,(28,42))))))),(36,(38,57)))))))));
	TREE * extraState = [&R] (1,((8,(40,(((51,(31,(22,(((32,(4,((2,47),(45,(15,(44,56)))))),(34,(49,(60,(59,61))))),(29,30))))),(64,(((33,(35,((9,(21,(41,((3,58),(14,53))))),((17,37),(54,(23,(26,27))))))),(43,(10,(39,(46,52))))),(16,50)))),(13,20)))),(25,(6,(18,((55,(5,(11,48))),((7,(19,(62,(63,(12,(28,(24,42))))))),(36,(38,57)))))))));
	TREE * extraState = [&R] (1,((8,(40,(((51,((32,((2,47),(4,(15,(45,(44,56)))))),(22,((29,30),(34,(49,(60,(59,61)))))))),(64,(((35,((9,(21,(41,((3,58),(14,53))))),((17,37),(54,(23,(26,27)))))),(33,(43,(10,(39,(46,52)))))),(16,50)))),(31,(13,20))))),(25,(6,(18,((55,(5,(11,48))),((19,(62,(7,(63,(12,(24,(28,42))))))),(36,(38,57)))))))));
	TREE * extraState = [&R] (1,((8,(40,(((51,((32,(4,((2,47),(45,(15,(44,56)))))),((22,(29,30)),(34,(49,(60,(59,61))))))),(64,(((35,((9,(21,(41,((3,58),(14,53))))),((17,37),(54,(23,(26,27)))))),(33,(43,(10,(46,(39,52)))))),(16,50)))),(31,(13,20))))),(25,(6,(18,((55,(48,(5,11))),(((7,(63,(12,(24,(28,42))))),(19,62)),(36,(38,57)))))))));
	TREE * extraState = [&R] (1,((8,(40,(((51,(31,(22,((32,((2,47),(4,(15,(45,(44,56)))))),((29,30),(34,(49,(60,(59,61))))))))),(64,(((35,((9,(21,(41,((3,58),(14,53))))),((17,37),(54,(23,(26,27)))))),(33,(43,(10,(39,(46,52)))))),(16,50)))),(13,20)))),(25,(6,(18,((55,(48,(5,11))),(((7,(63,(12,(24,(28,42))))),(19,62)),(36,(38,57)))))))));
	TREE * extraState = [&R] (1,((8,(40,(((51,((32,((2,47),(4,(15,(45,(44,56)))))),((22,(29,30)),(34,(49,(60,(59,61))))))),(64,(((35,((9,(21,(41,((3,58),(14,53))))),((17,37),(54,(23,(26,27)))))),(33,(43,(10,(39,(46,52)))))),(16,50)))),(31,(13,20))))),(25,(6,(18,((55,(5,(11,48))),((19,(62,(7,(63,(12,(42,(24,28))))))),(36,(38,57)))))))));
	TREE * inapplicable = [&R] (1,(25,((8,(40,(((64,((((53,32),((21,(9,41)),(14,(3,58)))),((54,(23,(26,27))),(37,17))),((35,(33,(43,(10,(46,(39,52)))))),(16,50)))),(51,(((34,(49,(60,(61,59)))),(22,(30,29))),((4,(15,(44,(56,45)))),(47,2))))),(20,(13,31))))),(((18,6),((19,(62,((63,7),(12,(42,(24,28)))))),(38,(57,36)))),(48,(55,(11,5)))))));
	TREE * inapplicable = [&R] (1,(25,((8,(40,((64,(51,(((22,(34,(49,(60,(59,61))))),(30,29)),((2,47),(4,((15,45),(44,56))))))),(((50,16),((33,(43,(10,(46,(52,39))))),((35,((17,37),(54,(23,(27,26))))),((53,32),((21,(41,9)),(14,(58,3))))))),(31,(13,20)))))),(((18,6),((38,(36,57)),(19,(62,(12,((42,(28,24)),(7,63))))))),(48,(55,(5,11)))))));
	TREE * inapplicable = [&R] (1,(25,((8,(40,(((31,(20,13)),((16,50),((33,(43,(10,(46,(39,52))))),((35,((54,(23,(27,26))),(37,17))),((32,53),((21,(9,41)),(14,(58,3)))))))),(64,(51,(((22,(34,(49,(60,(59,61))))),(29,30)),((2,47),(4,(15,(44,(56,45))))))))))),(((6,18),(((62,19),((7,63),(12,(28,(24,42))))),(38,(57,36)))),(48,(55,(11,5)))))));
	TREE * inapplicable = [&R] (1,(25,((8,(40,(((51,(((22,(30,29)),(34,(49,(60,(61,59))))),((4,(15,(44,(56,45)))),(2,47)))),(64,(((((32,53),(21,(41,(9,(14,(3,58)))))),((33,35),(43,(10,(46,(39,52)))))),((17,37),(54,(23,(26,27))))),(16,50)))),(31,(20,13))))),((((38,(36,57)),(19,(62,(7,(63,(12,(28,(24,42)))))))),(18,6)),(48,(55,(5,11)))))));
	TREE * inapplicable = [&R] (1,(25,((8,(40,((20,(31,13)),((64,(((35,(33,(43,(10,(46,(39,52)))))),(16,50)),((53,(32,((21,(9,41)),(14,(3,58))))),((54,(23,(26,27))),(37,17))))),(51,(((4,(15,(44,(45,56)))),(2,47)),((22,(30,29)),(34,(49,(60,(59,61))))))))))),(((18,6),((38,(57,36)),(19,(62,(12,((63,7),(24,(42,28)))))))),(48,(55,(5,11)))))));
	TREE * inapplicable = [&R] (1,(25,((8,(40,((31,(20,13)),((64,(((((53,32),(21,(41,(9,(14,(3,58)))))),(33,(35,(43,(10,(46,(39,52))))))),((54,(23,(27,26))),(17,37))),(16,50))),(51,(((22,(29,30)),(34,(49,(60,(59,61))))),((4,(15,(45,(56,44)))),(2,47)))))))),((((38,(36,57)),((19,62),(7,(63,(12,(42,(28,24))))))),(6,18)),(48,(55,(11,5)))))));
	TREE * inapplicable = [&R] (1,(25,((8,(40,(((31,(20,13)),((16,50),(((35,((54,(23,(26,27))),(37,17))),(((14,(3,58)),(21,(41,9))),(53,32))),(33,(43,(10,(46,(39,52)))))))),(64,(51,(((22,(34,(49,(60,(59,61))))),(29,30)),((4,(15,(44,(56,45)))),(2,47)))))))),((((38,(36,57)),((19,62),(7,(63,(12,(28,(24,42))))))),(6,18)),(48,(55,(11,5)))))));
	TREE * inapplicable = [&R] (1,(25,((8,(40,((31,(13,20)),((64,((((54,(23,(26,27))),(17,37)),(((21,(41,(9,(14,(3,58))))),(32,53)),((33,35),(43,(10,(46,(39,52))))))),(16,50))),(51,(((22,(30,29)),(34,(49,(60,(61,59))))),((4,((15,45),(44,56))),(47,2)))))))),((((19,(62,((7,63),(12,(28,(24,42)))))),(38,(57,36))),(18,6)),(48,(55,(11,5)))))));
	TREE * inapplicable = [&R] (1,(25,((8,(40,((20,(13,31)),((64,((((54,(23,(26,27))),(37,17)),((32,53),(21,(41,(9,(14,(58,3))))))),((35,(33,(43,(10,(46,(52,39)))))),(16,50)))),(51,(((22,(30,29)),(34,(49,(60,(61,59))))),((47,2),(4,(15,(45,(56,44))))))))))),(((18,6),(((19,62),(7,(63,(12,(42,(24,28)))))),(38,(57,36)))),(48,(55,(11,5)))))));
	TREE * inapplicable = [&R] (1,(25,((8,(40,((20,(31,13)),((64,((((54,(23,(27,26))),(17,37)),(((32,53),(21,(41,(9,(14,(3,58)))))),(33,(35,(43,(10,(46,(52,39)))))))),(16,50))),(51,(((34,(49,(60,(59,61)))),(22,(29,30))),((4,(15,(45,(44,56)))),(2,47)))))))),((((19,(24,(62,((12,(7,63)),(42,28))))),(38,(36,57))),(6,18)),(48,(55,(5,11)))))));
	TREE * inapplicable = [&R] (1,(25,((8,(40,((64,(51,(((22,(29,30)),(34,(49,(60,(61,59))))),((47,2),(4,(15,(45,(44,56)))))))),((31,(13,20)),(((((32,53),((21,(9,41)),(14,(58,3)))),(35,((37,17),(54,(23,(26,27)))))),(33,(43,(10,(46,(52,39)))))),(50,16)))))),(((6,18),((38,(36,57)),(19,(62,(28,((12,(63,7)),(42,24))))))),(48,(55,(11,5)))))));
	TREE * inapplicable = [&R] (1,(25,((8,(40,(((31,(20,13)),((16,50),((33,(43,(10,(46,(39,52))))),((35,((54,(23,(27,26))),(37,17))),((32,53),((21,(9,41)),(14,(58,3)))))))),(64,(51,(((22,(34,(49,(60,(59,61))))),(29,30)),((2,47),(4,(15,(45,(56,44))))))))))),(((6,18),(((62,19),(7,(63,(12,(42,(28,24)))))),(38,(57,36)))),(48,(55,(11,5)))))));
	TREE * inapplicable = [&R] (1,(25,((8,(40,((((16,50),((33,(43,(10,(46,(39,52))))),((35,((54,(23,(26,27))),(37,17))),(((21,(9,41)),(14,(58,3))),(32,53))))),(31,(20,13))),(64,(51,(((22,(34,(49,(60,(59,61))))),(29,30)),((4,(15,(44,(56,45)))),(2,47)))))))),(((6,18),((19,(62,(12,((7,63),(42,(24,28)))))),(38,(36,57)))),(48,(55,(11,5)))))));
	TREE * inapplicable = [&R] (1,(25,((8,(40,((20,(31,13)),((64,((((54,(23,(27,26))),(37,17)),(((32,53),(21,(41,(9,(14,(3,58)))))),(35,(33,(43,(10,(46,(39,52)))))))),(16,50))),(51,(((22,(29,30)),(34,(49,(60,(59,61))))),((4,(15,(44,(56,45)))),(47,2)))))))),((((38,(36,57)),(19,(62,(7,(63,(12,(24,(28,42)))))))),(6,18)),(48,(55,(5,11)))))));
	TREE * inapplicable = [&R] (1,(25,((8,(40,((31,(20,13)),((64,(((((32,53),(21,(41,(9,(14,(58,3)))))),(35,(33,(43,(10,(46,(39,52))))))),((54,(23,(26,27))),(37,17))),(50,16))),(51,(((22,(29,30)),(34,(49,(60,(59,61))))),((4,(15,(44,(45,56)))),(2,47)))))))),((((38,(36,57)),(19,(62,(12,((28,(24,42)),(63,7)))))),(6,18)),(48,(55,(5,11)))))));
	TREE * inapplicable = [&R] (1,(25,((8,(40,((13,20),((31,(64,(51,(((22,((4,(15,(44,(56,45)))),(47,2))),(34,(49,(60,(61,59))))),(30,29))))),((16,50),((33,(43,(10,(46,(39,52))))),((35,((37,17),(54,(23,(26,27))))),((32,53),((21,(9,41)),(14,(58,3))))))))))),((((38,(57,36)),(19,(62,(7,(63,(12,(42,(28,24)))))))),(18,6)),(48,(55,(11,5)))))));
	TREE * inapplicable = [&R] (1,(25,((8,(40,((20,(13,31)),((64,(((35,(33,(43,(10,(46,(39,52)))))),(16,50)),((53,(32,((21,(9,41)),(14,(3,58))))),((17,37),(54,(23,(26,27))))))),(51,(((4,(15,(45,(44,56)))),(2,47)),((22,(30,29)),(34,(49,(60,(61,59))))))))))),((((19,(62,(12,((24,(42,28)),(63,7))))),(38,(36,57))),(18,6)),(48,(55,(5,11)))))));
	TREE * inapplicable = [&R] (1,(25,((8,(40,(((((((53,32),((21,(41,9)),(14,(58,3)))),(35,((17,37),(54,(23,(27,26)))))),(33,(43,(10,(46,(39,52)))))),(16,50)),(31,(13,20))),(64,(51,(((22,(34,(49,(60,(59,61))))),(30,29)),((2,47),(4,(15,(45,(56,44))))))))))),(((18,6),((38,(57,36)),(19,(62,(7,(63,(12,(24,(28,42))))))))),(48,(55,(5,11)))))));
	TREE * inapplicable = [&R] (1,(25,((8,(40,((20,(31,13)),((64,(((((35,33),(43,(10,(46,(39,52))))),((21,(41,(9,(14,(3,58))))),(53,32))),((54,(23,(26,27))),(37,17))),(16,50))),(51,(((22,(30,29)),(34,(49,(60,(59,61))))),((4,((15,45),(56,44))),(2,47)))))))),(((18,6),((19,(62,(7,(63,(12,(28,(24,42))))))),(38,(57,36)))),(48,(55,(5,11)))))));
	TREE * inapplicable = [&R] (1,(25,((8,(40,((((((35,((54,(23,(26,27))),(37,17))),((32,53),((21,(41,9)),(14,(58,3))))),(33,(43,(10,(46,(52,39)))))),(50,16)),(31,(20,13))),(64,(51,((22,((34,(49,(60,(59,61)))),(29,30))),((47,2),(4,(15,(45,(56,44))))))))))),((((38,(36,57)),(19,(62,((63,7),(12,(28,(42,24))))))),(6,18)),(48,(55,(11,5)))))));
	TREE * inapplicable = [&R] (1,(25,((8,(40,((31,(20,13)),((64,(((35,(33,(43,(10,(46,(39,52)))))),(16,50)),((53,(32,((21,(9,41)),(14,(58,3))))),((54,(23,(27,26))),(37,17))))),(51,(((22,(29,30)),(34,(49,(60,(59,61))))),((47,2),(4,(15,(44,(56,45))))))))))),((((38,(36,57)),(19,(62,(28,((12,(7,63)),(42,24)))))),(6,18)),(48,(55,(5,11)))))));
	TREE * inapplicable = [&R] (1,(25,((8,(40,(((31,(13,20)),((16,50),(((35,((54,(23,(27,26))),(37,17))),(((14,(58,3)),(21,(41,9))),(32,53))),(33,(43,(10,(46,(39,52)))))))),(64,(51,(((22,((4,(15,(44,(45,56)))),(47,2))),(34,(49,(60,(59,61))))),(29,30))))))),((((38,(36,57)),((62,19),(7,(63,(12,(24,(28,42))))))),(6,18)),(48,(55,(11,5)))))));
	TREE * inapplicable = [&R] (1,(25,((8,(40,(((31,(13,20)),(((33,(43,(10,(46,(39,52))))),((35,((54,(23,(27,26))),(17,37))),((53,32),((14,(3,58)),(21,(41,9)))))),(16,50))),(64,(51,(((4,((45,15),(44,56))),(2,47)),((22,(30,29)),(34,(49,(60,(61,59))))))))))),((((38,(57,36)),((19,62),((7,63),(12,(42,(24,28)))))),(18,6)),(48,(55,(5,11)))))));
	TREE * inapplicable = [&R] (1,(25,((8,(40,(((51,(((22,(30,29)),(34,(49,(60,(61,59))))),((4,(15,(45,(44,56)))),(2,47)))),(64,(((50,16),(35,(33,(43,(10,(46,(52,39))))))),((53,(32,((21,(9,41)),(14,(58,3))))),((54,(23,(27,26))),(17,37)))))),(31,(20,13))))),((((38,(57,36)),((62,19),((7,63),(12,(42,(28,24)))))),(18,6)),(48,(55,(5,11)))))));
	TREE * inapplicable = [&R] (1,(25,((8,(40,(((31,(64,(51,(((22,((4,(15,(44,(45,56)))),(47,2))),(34,(49,(60,(61,59))))),(30,29))))),((16,50),((33,(43,(10,(46,(52,39))))),((35,((37,17),(54,(23,(26,27))))),(((21,(41,9)),(14,(3,58))),(53,32)))))),(13,20)))),((((38,(57,36)),(19,(62,((63,7),(12,(28,(24,42))))))),(18,6)),(48,(55,(11,5)))))));
	TREE * inapplicable = [&R] (1,(25,((8,(40,((((((35,((54,(23,(27,26))),(17,37))),((53,32),((21,(9,41)),(14,(3,58))))),(33,(43,(10,(46,(39,52)))))),(16,50)),(31,(13,20))),(64,(51,(((22,(34,(49,(60,(59,61))))),(30,29)),((4,(15,(45,(56,44)))),(2,47)))))))),(((18,6),((38,(57,36)),((62,19),((12,(28,(42,24))),(63,7))))),(48,(55,(11,5)))))));
	TREE * inapplicable = [&R] (1,(25,((8,(40,((31,(13,20)),((64,((16,50),(((33,(35,(43,(10,(46,(52,39)))))),((32,53),(21,(41,(9,(14,(3,58))))))),((54,(23,(27,26))),(37,17))))),(51,(((22,(30,29)),(34,(49,(60,(59,61))))),((4,(15,(45,(56,44)))),(47,2)))))))),((((38,(57,36)),((19,62),(7,(63,(12,(28,(42,24))))))),(18,6)),(48,(55,(11,5)))))));
	TREE * inapplicable = [&R] (1,(25,((8,(40,(((31,(20,13)),(((33,(43,(10,(46,(52,39))))),((35,((17,37),(54,(23,(27,26))))),(((21,(9,41)),(14,(3,58))),(32,53)))),(50,16))),(64,(51,((22,((34,(49,(60,(59,61)))),(30,29))),((4,((15,45),(56,44))),(2,47)))))))),(((18,6),((38,(57,36)),(19,(24,(62,((12,(63,7)),(28,42))))))),(48,(55,(11,5)))))));
	TREE * inapplicable = [&R] (1,(25,((8,(40,((20,(31,13)),((64,(((35,(33,(43,(10,(46,(39,52)))))),(16,50)),(((53,32),((21,(41,9)),(14,(3,58)))),((54,(23,(26,27))),(37,17))))),(51,(((22,(30,29)),(34,(49,(60,(61,59))))),((2,47),(4,(15,(45,(56,44))))))))))),((((38,(57,36)),(19,(62,((7,63),(12,(42,(28,24))))))),(18,6)),(48,(55,(11,5)))))));
	TREE * inapplicable = [&R] (1,(25,((8,(40,(((31,(13,20)),((((35,((17,37),(54,(23,(27,26))))),((53,32),((21,(9,41)),(14,(3,58))))),(33,(43,(10,(46,(39,52)))))),(16,50))),(64,(51,(((22,(30,29)),(34,(49,(60,(59,61))))),((4,(15,(45,(44,56)))),(2,47)))))))),(((18,6),(((62,19),((63,7),(12,(24,(28,42))))),(38,(57,36)))),(48,(55,(5,11)))))));
	TREE * inapplicable = [&R] (1,(25,((8,(40,((31,(13,20)),((64,(((53,(32,((21,(41,9)),(14,(3,58))))),((54,(23,(27,26))),(17,37))),((35,(33,(43,(10,(46,(39,52)))))),(16,50)))),(51,(((22,(30,29)),(34,(49,(60,(61,59))))),((4,(15,(45,(56,44)))),(47,2)))))))),((((38,(57,36)),(19,(24,(62,((12,(63,7)),(28,42)))))),(18,6)),(48,(55,(11,5)))))));
	TREE * inapplicable = [&R] (1,(25,((8,(40,(((31,(13,20)),(((33,(43,(10,(46,(52,39))))),((35,((54,(23,(26,27))),(17,37))),((53,32),((21,(41,9)),(14,(58,3)))))),(16,50))),(64,(51,(((22,(29,30)),(34,(49,(60,(59,61))))),((4,(15,(45,(56,44)))),(47,2)))))))),((((19,(62,((7,63),(12,(42,(28,24)))))),(38,(36,57))),(6,18)),(48,(55,(5,11)))))));
	TREE * inapplicable = [&R] (1,(25,((8,(40,(((31,(13,20)),((((35,((17,37),(54,(23,(27,26))))),((53,32),((21,(9,41)),(14,(3,58))))),(33,(43,(10,(46,(39,52)))))),(16,50))),(64,(51,(((22,(30,29)),(34,(49,(60,(59,61))))),((4,((15,45),(56,44))),(2,47)))))))),(((18,6),((38,(57,36)),(19,(62,(7,(63,(12,(28,(24,42))))))))),(48,(55,(5,11)))))));
	TREE * inapplicable = [&R] (1,(25,((8,(40,(((31,(20,13)),((16,50),((33,(43,(10,(46,(39,52))))),((35,((54,(23,(27,26))),(37,17))),(((14,(58,3)),(21,(9,41))),(32,53)))))),(64,(51,((22,((34,(49,(60,(59,61)))),(29,30))),((2,47),(4,(15,(44,(45,56))))))))))),(((6,18),((19,(62,((12,(28,(24,42))),(7,63)))),(38,(57,36)))),(48,(55,(11,5)))))));
	TREE * inapplicable = [&R] (1,(25,((8,(40,(((31,(13,20)),(((33,(43,(10,(46,(39,52))))),((35,((54,(23,(26,27))),(37,17))),((32,53),((21,(41,9)),(14,(58,3)))))),(50,16))),(64,(51,(((22,(30,29)),(34,(49,(60,(61,59))))),((2,47),(4,(15,(45,(44,56))))))))))),((((19,(62,(24,((12,(63,7)),(42,28))))),(38,(57,36))),(18,6)),(48,(55,(11,5)))))));
	TREE * inapplicable = [&R] (1,(25,((8,(40,(((31,(13,20)),((((35,((17,37),(54,(23,(27,26))))),((53,32),((21,(9,41)),(14,(3,58))))),(33,(43,(10,(46,(39,52)))))),(16,50))),(64,(51,((22,((30,29),(34,(49,(60,(59,61)))))),((4,((44,56),(15,45))),(2,47)))))))),(((18,6),((19,(62,(12,((63,7),(28,(42,24)))))),(38,(57,36)))),(48,(55,(5,11)))))));
	TREE * inapplicable = [&R] (1,(25,((8,(40,(((((((53,32),((21,(9,41)),(14,(58,3)))),(35,((54,(23,(27,26))),(17,37)))),(33,(43,(10,(46,(39,52)))))),(16,50)),(31,(20,13))),(64,(51,(((22,(30,29)),(34,(49,(60,(59,61))))),((4,(15,(44,(56,45)))),(47,2)))))))),(((18,6),((38,(57,36)),((19,62),((7,63),(12,(42,(24,28))))))),(48,(55,(11,5)))))));
	TREE * inapplicable = [&R] (1,(25,((8,(40,(((64,(((((53,32),(21,(41,(9,(14,(58,3)))))),(33,(35,(43,(10,(46,(39,52))))))),((54,(23,(26,27))),(37,17))),(50,16))),(51,(((22,(29,30)),(34,(49,(60,(59,61))))),((4,(15,(45,(56,44)))),(2,47))))),(31,(20,13))))),((((38,(36,57)),((19,62),((63,7),(12,(28,(24,42)))))),(6,18)),(48,(55,(5,11)))))));
	TREE * inapplicable = [&R] (1,(25,((8,(40,(((64,((16,50),(((33,(35,(43,(10,(46,(39,52)))))),((53,32),(21,(41,(9,(14,(58,3))))))),((54,(23,(26,27))),(37,17))))),(51,(((22,(30,29)),(34,(49,(60,(59,61))))),((2,47),(4,(15,(44,(56,45)))))))),(20,(13,31))))),((((38,(57,36)),(19,(62,(7,(63,(12,(28,(24,42)))))))),(18,6)),(48,(55,(11,5)))))));
	TREE * inapplicable = [&R] (1,(25,((8,(40,((31,(20,13)),((64,((16,50),(((33,(35,(43,(10,(46,(39,52)))))),((53,32),(21,(41,(9,(14,(58,3))))))),((54,(23,(27,26))),(37,17))))),(51,(((22,(30,29)),(34,(49,(60,(61,59))))),((4,((15,45),(44,56))),(47,2)))))))),((((19,(24,(62,((28,42),(12,(63,7)))))),(38,(57,36))),(18,6)),(48,(55,(11,5)))))));
	TREE * inapplicable = [&R] (1,(25,((8,(40,((((50,16),((33,(43,(10,(46,(39,52))))),((35,((17,37),(54,(23,(27,26))))),((32,53),((21,(9,41)),(14,(3,58))))))),(31,(20,13))),(64,(51,(((22,(34,(49,(60,(61,59))))),(30,29)),((2,47),(4,(15,(44,(45,56))))))))))),((((38,(57,36)),(19,(62,(24,((12,(63,7)),(28,42)))))),(18,6)),(48,(55,(5,11)))))));
	TREE * inapplicable = [&R] (1,(25,((8,(40,((20,(31,13)),((64,(((50,16),(35,(33,(43,(10,(46,(39,52))))))),((53,(32,((14,(3,58)),(21,(41,9))))),((54,(23,(26,27))),(17,37))))),(51,(((22,(29,30)),(34,(49,(60,(61,59))))),((4,(15,(44,(45,56)))),(2,47)))))))),((((38,(36,57)),(19,(62,((12,(28,(24,42))),(7,63))))),(6,18)),(48,(55,(11,5)))))));
	TREE * inapplicable = [&R] (1,(25,((8,(40,((20,(13,31)),((64,((16,50),(((35,(33,(43,(10,(46,(52,39)))))),((32,53),(21,(41,(9,(14,(58,3))))))),((54,(23,(26,27))),(17,37))))),(51,(((22,(30,29)),(34,(49,(60,(61,59))))),((4,(15,(44,(56,45)))),(47,2)))))))),((((38,(57,36)),(19,(62,((12,(28,(42,24))),(63,7))))),(18,6)),(48,(55,(11,5)))))));
	TREE * inapplicable = [&R] (1,(25,((8,(40,(((31,(20,13)),((50,16),(((35,((54,(23,(26,27))),(17,37))),(((14,(3,58)),(21,(9,41))),(53,32))),(33,(43,(10,(46,(52,39)))))))),(64,(51,(((22,((47,2),(4,(15,(44,(56,45)))))),(34,(49,(60,(61,59))))),(30,29))))))),(((18,6),((38,(57,36)),((19,62),((7,63),(12,(28,(24,42))))))),(48,(55,(5,11)))))));
	TREE * inapplicable = [&R] (1,(25,((8,(40,((31,(13,20)),((64,(((35,(33,(43,(10,(46,(39,52)))))),(16,50)),(((54,(23,(26,27))),(37,17)),((32,53),((21,(41,9)),(14,(3,58))))))),(51,(((34,(49,(60,(59,61)))),(22,(30,29))),((2,47),(4,(15,(45,(44,56))))))))))),(((18,6),((19,(62,(12,((7,63),(24,(28,42)))))),(38,(57,36)))),(48,(55,(5,11)))))));
	TREE * inapplicable = [&R] (1,(25,((8,(40,((31,(13,20)),((64,(((35,(33,(43,(10,(46,(39,52)))))),(16,50)),((53,(32,((21,(9,41)),(14,(3,58))))),((17,37),(54,(23,(27,26))))))),(51,(((4,((15,45),(44,56))),(2,47)),((22,(30,29)),(34,(49,(60,(61,59))))))))))),((((38,(36,57)),(19,(62,(12,((63,7),(42,(24,28))))))),(18,6)),(48,(55,(5,11)))))));
	TREE * inapplicable = [&R] (1,(25,((8,(40,((20,(13,31)),((64,(((35,(33,(43,(10,(46,(39,52)))))),(16,50)),((53,(32,((21,(9,41)),(14,(3,58))))),((54,(23,(27,26))),(37,17))))),(51,(((34,(49,(60,(61,59)))),(22,(30,29))),((4,((15,45),(44,56))),(47,2)))))))),((((38,(57,36)),(19,(62,(7,(63,(12,(28,(42,24)))))))),(18,6)),(48,(55,(11,5)))))));
	TREE * inapplicable = [&R] (1,(25,((8,(40,((((50,16),((33,(43,(10,(46,(39,52))))),((35,((54,(23,(27,26))),(37,17))),((53,32),((21,(41,9)),(14,(58,3))))))),(31,(13,20))),(64,(51,(((4,(15,(44,(56,45)))),(2,47)),((22,(30,29)),(34,(49,(60,(61,59))))))))))),((((38,(57,36)),(19,(62,(7,(63,(12,(24,(42,28)))))))),(18,6)),(48,(55,(5,11)))))));
	TREE * inapplicable = [&R] (1,(25,((8,(40,(((51,(((22,(30,29)),(34,(49,(60,(61,59))))),((4,(15,(45,(44,56)))),(47,2)))),(64,(((35,(33,(43,(10,(46,(52,39)))))),(16,50)),(((32,53),((21,(9,41)),(14,(58,3)))),((54,(23,(26,27))),(17,37)))))),(20,(13,31))))),((((38,(57,36)),((19,62),(7,(63,(12,(42,(24,28))))))),(18,6)),(48,(55,(11,5)))))));
	TREE * inapplicable = [&R] (1,(25,((8,(40,((20,(31,13)),((64,(((35,(33,(43,(10,(46,(52,39)))))),(50,16)),(((54,(23,(26,27))),(37,17)),((32,53),(21,(41,(9,(14,(3,58))))))))),(51,(((22,(29,30)),(34,(49,(60,(61,59))))),((4,(15,(44,(45,56)))),(2,47)))))))),((((38,(36,57)),(19,(62,((12,(42,(24,28))),(7,63))))),(6,18)),(48,(55,(11,5)))))));
END;
