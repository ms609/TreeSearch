#NEXUS
begin data;
  dimensions ntax=40 nchar=150;
  format datatype=standard gap=- missing=? Interleave=no;
  matrix
    Didelphis        000001100000000000000???001001?10--0100000001000100000???00?00010?1000000000?0?01000000000011000000??0000100000000000111001000000000000000000003000000
    Asioryctes       ????01100000000000000???00?00??10--0??10????00001000101?00000101111011101100??0000000000000010000100000????????????0???????00???000000000000000???????
    Leptictis        000000000200000000000???0000000011000100000100001000001000011001100111111100?0000000000000011000010000000???1001010?011??11000??00010?01000??00???????
    Arctocyon        000000000?0?????????????00?000010--100100001000?10000010000010000001000011000?000000000000000000010000000???00000000?000000000100??00000000??01???????
    Hyopsodus        01001000??0?????????????00?000?110?0000000?10000??00001000001000000100111000000110000000000100000100000001100000111?00000?000100000000?00??0010???????
    Phenacodus       ???00110??01????????0?0000?001?11100100000010000110000100001100000?100111000000110101010000100000101000??110?0001111011001000?00000100010001011???????
    Meniscotherium   01000000????????????????00?00??11101100100?1000?11000010000?100?011100111000000010101010000000111100000001100001111?011001000000000000010001011???????
    Heptodon         ???0111?1300000000000???00?001?1110??00100?1?0001100001000011001100100110000001110101010000101111100000??????1101111011001110010000110011001111???????
    Hyracotherium    ?100111???1?????????0???10?001?1110110010001000011000011000110010001001110010001101010100001011111000000011111101111011001110000000110011001111???????
    Equus            0100011000110?1100001011000101?3100????011?1?00011000010?001100??11100??100100011010101000010111110000000111111112210110011100000001100111111111000000
    Diacodexis       0???1000?3010?00????10?0000000010--00100??10?00???0000100000100000000011100000000000000000000000010010000100?1101211?1?101111111110110011000010???????
    Archaeotherium   1000101103?1000000011?1110?111?00--0110011000000001000101010100?001100111000000000000000000100000100100001001111121?100001111111110110011111110???????
    Elomeryx         110011110301000000011011100101?00--0010110010000111000111000100100110011000000011000000000010000010010000???111112111????1?11?10110110010000012???????
    Hippopotamus     1100?1110311000011111011100?01?30--0??01101000001010001010001001000100001000111000000000000100000?001000011111111111111101111111110110011000012111?11?
    Hexaprotodon     110????1031100001111??1110?101?2???0??0000100000101000100000100000010000100011011000000000010000020010000111111112111101111111111101000??000012111?1??
    Sus              000011110011001100001011100111?20--0110000010000110000111001100100110011100001101000000000010000010010000110111112111101111111111101100110000120001001
    Agriochoerus     0000?000011100100001101110000??10--0010000?10000100000??0001100110?10000000??01010000000000000000100100?????1010121??00111111110110110011000010???????
    Poebrotherium    000011100?01001100011?1000?00??00--001011010000011000011100010011111000010000000100000000000000000001020010011101211110111111110110110011111110???????
    Camelus          000011100211001000011110000001?00--00101101000001101?0000001100001110000100000001000000000000000000010200111111012211001111111111101101111111112111001
    Ovis             10001010?211001011101011000001?10--00101100110001101?000000010011111000010010011100000000000000001001000011011101211?101111111111101111111111121111001
    Tragulus         0??010000311001?00011?10000001?00--00000100010001101?000100?1000011100001001001000000000000000000100100001101110121111?11111111011011111110111?111?00?
    Andrewsarchus    ????????????????????????10?1????1?0???10?????00????0001000?01?0000001000000???0????????????????00?00??????????????????????????????????????????????????
    Eoconodon        ????1110??1?????????????10000??0101??00000?1?0000000?01000001000000110111100000000000000000010000100?0???????00?01????????1??0100??10?????????????????
    Hapalodectes     ???00000??0?????????????00100??110011010??10000???00011000?11??111111100?00??00?00010101000010000012?0????????0?0?????????????????????????????????????
    Dissacus         01001000????????????????1??110101?1??01?????????000??010000111011?00110?1100000000010101000010000212?0???????00?111??????1010?100??000???????11???????
    Ankalagon        ????????????????????????????????????????????????00??????00011101110011001100000000010101100?10000212?0???????10?11???????0?10?100??000???????11???????
    Sinonyx          ????10?00101000000001?1110?11???1?11?010??010000??00001000001101110011001100000000010101101010000212?0????????????????????????????????????????????????
    Pachyaena        ???????0????????????1?1110??????????101????1?00000000010?0011?01110011011100000000010101111010000212000001000101111011?00?01001001010001?000011???????
    Mesonyx          11001000?1110000000?1?11100110101011?010?????00???0?0010?000110111101100111??0000001010111?0100002120000010011011110110001010010010100011000011???????
    Synoplotherium   ???????0???1?000????1?1110?1???01011001000?1000???0000???0??1101111011001100000?000101011??010000212?00??10001011110110001010010010??0011000011???????
    Harpagolestes    ???????001?1000000011?1110?11??11?1??010???1000?????0?10100111111110110011100?1??0010101?1??10000212?0???????10111?????00?010010???10?????????????????
    Pakicetus        010?2?11020110101111101010?101?00--1??00???????0100???11?110111000001100100????0011010??11?01000001201????????????????????????????????????????????????
    Ambulocetus      ?101???????111?0111?1?00?0?1????0--0???0???????1??0?11???1101??001101100100?????01??1111?11010000012?1?00110???1?010?100010??????1010?0??000011???????
    Remingtonocetus  ?1012111?11111111111110011?1?1?00--0??00????000?????11???1??1???????????000????????????????0?0000?1??1000110?????????11??0????????????????????????????
    Cross_Whale      11012111?21111111111????111101?0?--0???1????00011000111????????????????????????001?????????0?????012??1???????????????????????????????????????????????
    Protocetus       ???12111021111111111100011?101?00--???01?????10??????110011011010?101100100?????????1?1?????10000?1??1111000??????????????????????????????????????????
    Basilosaurus     11113111121111111100110001?101?00--?1101100?0101100011111110111???10110011100000001?1?1?111010000012?111100021110010111??????????11???0111100?????????
    Dorudon          111131111211111111?0110001?101?00--0100110000101100011101110111??110110011100000001?1?1?111010000012?1111000211100111?????????????????????????????????
    Balaenoptera     111131111211110011101100111111?00--01101??00?110--00-00-----1-000110--0010000-00000-0-0-0000-0000?????1??0002110?01????00-1---0-1----0?111111???1?1111
    Tursiops         111131111011111111101100011111??0--01101??00?111--?0-00-----1-000110--0010000-00000-0-0-0000-0000?????1??0002110?01????00-1---0-1----0?111111??1111111
;                                                                     
end;                                                                       
                                        

BEGIN TAXA;
	DIMENSIONS NTAX = 40;
	TAXLABELS
		Didelphis
		Asioryctes
		Leptictis
		Arctocyon
		Hyopsodus
		Phenacodus
		Meniscotherium
		Heptodon
		Hyracotherium
		Equus
		Diacodexis
		Archaeotherium
		Elomeryx
		Hippopotamus
		Hexaprotodon
		Sus
		Agriochoerus
		Poebrotherium
		Camelus
		Ovis
		Tragulus
		Andrewsarchus
		Eoconodon
		Hapalodectes
		Dissacus
		Ankalagon
		Sinonyx
		Pachyaena
		Mesonyx
		Synoplotherium
		Harpagolestes
		Pakicetus
		Ambulocetus
		Remingtonocetus
		Cross_Whale
		Protocetus
		Basilosaurus
		Dorudon
		Balaenoptera
		Tursiops
	;
END;
BEGIN TREES;
	TRANSLATE
		1	Didelphis,
		2	Asioryctes,
		3	Leptictis,
		4	Arctocyon,
		5	Hyopsodus,
		6	Phenacodus,
		7	Meniscotherium,
		8	Heptodon,
		9	Hyracotherium,
		10	Equus,
		11	Diacodexis,
		12	Archaeotherium,
		13	Elomeryx,
		14	Hippopotamus,
		15	Hexaprotodon,
		16	Sus,
		17	Agriochoerus,
		18	Poebrotherium,
		19	Camelus,
		20	Ovis,
		21	Tragulus,
		22	Andrewsarchus,
		23	Eoconodon,
		24	Hapalodectes,
		25	Dissacus,
		26	Ankalagon,
		27	Sinonyx,
		28	Pachyaena,
		29	Mesonyx,
		30	Synoplotherium,
		31	Harpagolestes,
		32	Pakicetus,
		33	Ambulocetus,
		34	Remingtonocetus,
		35	Cross_Whale,
		36	Protocetus,
		37	Basilosaurus,
		38	Dorudon,
		39	Balaenoptera,
		40	Tursiops
	;
	TREE * ambiguous = [&R] (1,(2,(4,((3,23),((5,(6,(7,(8,(9,10))))),((11,(17,(((12,(13,16)),(14,15)),(18,(19,(20,21)))))),(22,((24,(25,(26,(27,(28,(30,(29,31))))))),(32,(33,(34,(35,(36,(38,(37,(39,40))))))))))))))));
	TREE * ambiguous = [&R] (1,(2,(4,((3,23),((5,(6,(7,(8,(9,10))))),((11,(17,(((12,(13,16)),(14,15)),(18,(19,(20,21)))))),(22,((24,((25,26),(27,(28,(30,(29,31)))))),(32,(33,(34,(35,(36,(38,(37,(39,40))))))))))))))));
	TREE * extraState = [&R] (1,(2,(4,((3,23),((5,(6,(7,(8,(9,10))))),((17,(11,((12,((13,16),((14,15),(32,(33,(34,(35,(36,((37,38),(39,40)))))))))),(18,(19,(20,21)))))),(22,(24,(25,(26,(27,(28,(30,(29,31))))))))))))));
	TREE * extraState = [&R] (1,(2,(4,((3,23),((5,(6,(7,(8,(9,10))))),((17,(11,(((12,(13,16)),((14,15),(32,(33,(34,(35,(36,((37,38),(39,40))))))))),((18,19),(20,21))))),(22,(24,(25,(26,(27,(28,(30,(29,31))))))))))))));
	TREE * extraState = [&R] (1,(2,(4,(3,((5,(6,(7,(8,(9,10))))),((17,(11,((12,((13,16),((14,15),(32,(33,(34,(35,(36,((37,38),(39,40)))))))))),((18,19),(20,21))))),(23,(22,(24,(25,(26,(27,(28,(30,(29,31)))))))))))))));
	TREE * extraState = [&R] (1,(2,(4,((3,23),((5,(6,(7,(8,(9,10))))),((17,(11,(((12,(13,16)),((14,15),(22,(32,(33,(34,(35,(36,((37,38),(39,40)))))))))),((18,19),(20,21))))),(24,(25,(26,(27,(28,(30,(29,31)))))))))))));
	TREE * extraState = [&R] (1,(2,(4,(3,((5,(6,(7,(8,(9,10))))),((11,((12,((13,16),((14,15),(32,(33,(34,(35,(36,((37,38),(39,40)))))))))),(17,(21,(20,(18,19)))))),(23,(22,(24,(25,(26,(27,(28,(30,(29,31)))))))))))))));
	TREE * extraState = [&R] (1,(2,(4,(3,((5,(6,(7,(8,(9,10))))),((17,(11,((12,((13,16),((14,15),(32,(33,(34,(35,(36,((37,38),(39,40)))))))))),(18,(19,(20,21)))))),(23,(22,(24,(25,(26,(27,(28,(30,(29,31)))))))))))))));
	TREE * extraState = [&R] (1,(2,(4,(3,((5,(6,(7,(8,(9,10))))),((17,(11,((12,((13,16),((14,15),(32,(33,(34,(35,(36,((37,38),(39,40)))))))))),(21,(20,(18,19)))))),(23,(22,(24,(25,(26,(27,(28,(30,(29,31)))))))))))))));
	TREE * extraState = [&R] (1,(2,(4,((3,23),((5,(6,(7,(8,(9,10))))),((17,(11,((12,((13,16),((14,15),(32,(33,(34,(35,(36,((37,38),(39,40)))))))))),(21,(20,(18,19)))))),(22,(24,(25,(26,(27,(28,(30,(29,31))))))))))))));
	TREE * extraState = [&R] (1,(2,(4,((3,23),((5,(6,(7,(8,(9,10))))),((17,(11,(((12,(13,16)),((14,15),(32,(33,(34,(35,(36,((37,38),(39,40))))))))),(18,(19,(20,21)))))),(22,(24,(25,(26,(27,(28,(30,(29,31))))))))))))));
	TREE * extraState = [&R] (1,(2,(4,((3,23),((5,(6,(7,(8,(9,10))))),((11,((12,((13,16),((14,15),(32,(33,(34,(35,(36,((37,38),(39,40)))))))))),(17,(21,(20,(18,19)))))),(22,(24,((25,26),(27,(28,(30,(29,31)))))))))))));
	TREE * extraState = [&R] (1,(2,(4,((3,23),((5,(6,(7,(8,(9,10))))),((11,((12,((13,16),((14,15),(32,(33,(34,(35,(36,((37,38),(39,40)))))))))),(17,(21,(20,(18,19)))))),(22,(24,(25,(26,(27,(28,(30,(29,31))))))))))))));
	TREE * extraState = [&R] (1,(2,(4,((3,23),((5,(6,(7,(8,(9,10))))),((17,(11,((12,((13,16),((14,15),(32,(33,(34,(35,(36,((37,38),(39,40)))))))))),((18,19),(20,21))))),(22,(24,(25,(26,(27,(28,(30,(29,31))))))))))))));
	TREE * extraState = [&R] (1,(2,(4,((3,23),((5,(6,(7,(8,(9,10))))),((17,(11,(((12,(13,16)),((14,15),(22,(32,(33,(34,(35,(36,((37,38),(39,40)))))))))),(21,(20,(18,19)))))),(24,(25,(26,(27,(28,(30,(29,31)))))))))))));
	TREE * extraState = [&R] (1,(2,(4,((3,23),((5,(6,(7,(8,(9,10))))),((17,(11,(((12,(13,16)),((14,15),(32,(33,(34,(35,(36,((37,38),(39,40))))))))),(21,(20,(18,19)))))),(22,(24,(25,(26,(27,(28,(30,(29,31))))))))))))));
	TREE * extraState = [&R] (1,(2,(4,((3,23),((5,(6,(7,(8,(9,10))))),((17,(11,(((12,(13,16)),((14,15),(22,(32,(33,(34,(35,(36,((37,38),(39,40)))))))))),(18,(19,(20,21)))))),(24,(25,(26,(27,(28,(30,(29,31)))))))))))));
	TREE * extraState = [&R] (1,(2,(4,(3,((5,(6,(7,(8,(9,10))))),((17,(11,(12,((13,16),(((14,15),(32,(33,(34,(35,(36,((37,38),(39,40)))))))),(18,(19,(20,21)))))))),(23,(22,(24,(25,(26,(27,(28,(30,(29,31)))))))))))))));
	TREE * extraState = [&R] (1,(2,(4,((3,23),((5,(6,(7,(8,(9,10))))),((17,(11,(12,((13,16),(((14,15),(32,(33,(34,(35,(36,((37,38),(39,40)))))))),(18,(19,(20,21)))))))),(22,(24,(25,(26,(27,(28,(30,(29,31))))))))))))));
	TREE * inapplicable = [&R] (1,(2,(4,((3,23),(((22,(24,((25,26),(27,(28,(30,(31,29))))))),(11,((17,(21,(20,(19,18)))),(12,(((32,(33,(34,(35,(36,((37,38),(40,39))))))),(15,14)),(13,16)))))),(5,(6,(7,(8,(10,9))))))))));
	TREE * inapplicable = [&R] (1,(2,(4,(3,(((17,(11,(((18,19),(21,20)),(12,((13,16),((15,14),(32,(33,(34,(35,(36,((37,38),(40,39))))))))))))),(23,(22,(24,(25,(26,(27,(28,(30,(31,29)))))))))),(5,(6,(7,(8,(10,9))))))))));
	TREE * inapplicable = [&R] (1,(2,(4,((((17,(11,(((18,19),(21,20)),(12,((13,16),((15,14),(32,(33,(34,(35,(36,((37,38),(40,39))))))))))))),(22,(24,(25,(26,(27,(28,(30,(31,29))))))))),(5,(6,(7,(8,(10,9)))))),(3,23)))));
	TREE * inapplicable = [&R] (1,(2,(4,((3,23),((5,(6,(7,(8,(10,9))))),((17,(11,(((12,(16,13)),((15,14),(32,(33,(34,(35,(36,((38,37),(39,40))))))))),(21,(20,(19,18)))))),(22,(24,(25,(26,(27,(28,(30,(29,31))))))))))))));
	TREE * inapplicable = [&R] (1,(2,(4,(3,((5,(6,(7,(8,(9,10))))),((23,(22,(24,(25,(26,(27,(28,(30,(31,29))))))))),(17,(11,(12,((16,13),((18,(19,(21,20))),((32,(33,(34,(35,(36,((40,39),(37,38))))))),(14,15)))))))))))));
	TREE * inapplicable = [&R] (1,(2,(4,(3,(23,(((11,((17,(21,(20,(19,18)))),(12,((15,14),(13,16))))),(22,((32,(33,(34,(35,(36,((39,40),(38,37))))))),(24,((26,25),(27,(28,(30,(29,31))))))))),(5,(6,(7,(8,(10,9)))))))))));
	TREE * inapplicable = [&R] (1,(2,(4,((3,(23,((11,((17,(21,(20,(18,19)))),(12,((14,15),(16,13))))),(22,((32,(33,(34,(35,(36,((40,39),(37,38))))))),(24,((26,25),(27,(28,(30,(31,29))))))))))),(5,(6,(7,(8,(9,10)))))))));
	TREE * inapplicable = [&R] (1,(2,(4,((23,3),((5,(6,(7,(8,(10,9))))),((11,(17,((18,(19,(21,20))),((12,(13,16)),(15,14))))),(22,((24,((25,26),(27,(28,(30,(31,29)))))),(32,(33,(34,(35,(36,((39,40),(38,37)))))))))))))));
	TREE * inapplicable = [&R] (1,(2,(4,((3,(23,((11,((17,(21,(20,(18,19)))),(12,((13,16),(15,14))))),(22,((24,(25,(26,(27,((30,28),(29,31)))))),(32,(33,(34,(35,(36,((38,37),(39,40)))))))))))),(5,(6,(7,(8,(9,10)))))))));
	TREE * inapplicable = [&R] (1,(2,(4,(3,((23,((11,((17,(21,(20,(18,19)))),(12,((16,13),(15,14))))),(22,((24,(25,(26,(27,(28,(30,(29,31))))))),(32,(33,(34,(35,(36,((38,37),(39,40))))))))))),(5,(6,(7,(8,(9,10))))))))));
	TREE * inapplicable = [&R] (1,(2,(4,((((17,(11,(12,((((15,14),(32,(33,(34,(35,(36,((38,37),(39,40)))))))),(18,(19,(21,20)))),(13,16))))),(22,(24,(25,(26,(27,(28,(30,(31,29))))))))),(5,(6,(7,(8,(9,10)))))),(3,23)))));
	TREE * inapplicable = [&R] (1,(2,(4,((3,(23,((11,((17,(21,(20,(18,19)))),(12,((13,16),(15,14))))),(22,((32,(33,(34,(35,(36,((38,37),(39,40))))))),(24,(25,(26,(27,(28,(30,(31,29)))))))))))),(5,(6,(7,(8,(9,10)))))))));
	TREE * inapplicable = [&R] (1,(2,(4,((((17,(11,((12,((16,13),((15,14),(32,(33,(34,(35,(36,((38,37),(39,40)))))))))),(18,(19,(20,21)))))),(22,(24,(25,(26,(27,(28,(30,(31,29))))))))),(5,(6,(7,(8,(9,10)))))),(3,23)))));
	TREE * inapplicable = [&R] (1,(2,(4,((((17,(11,(((12,(13,16)),((14,15),(32,(33,(34,(35,(36,((37,38),(40,39))))))))),((21,20),(19,18))))),(22,(24,(25,(26,(27,(28,(30,(29,31))))))))),(5,(6,(7,(8,(9,10)))))),(3,23)))));
	TREE * inapplicable = [&R] (1,(2,(4,((((17,(11,(((12,(16,13)),((14,15),(32,(33,(34,(35,(36,((37,38),(40,39))))))))),(18,(19,(20,21)))))),(22,(24,(25,(26,(27,(28,(30,(31,29))))))))),(5,(6,(7,(8,(9,10)))))),(3,23)))));
	TREE * inapplicable = [&R] (1,(2,(4,((((11,((17,(21,(20,(18,19)))),(12,((13,16),((15,14),(32,(33,(34,(35,(36,((37,38),(39,40)))))))))))),(22,(24,(25,(26,(27,(28,(30,(29,31))))))))),(5,(6,(7,(8,(10,9)))))),(23,3)))));
	TREE * inapplicable = [&R] (1,(2,(4,((((17,(11,((21,(20,(19,18))),(12,((16,13),((14,15),(32,(33,(34,(35,(36,((38,37),(40,39))))))))))))),(22,(24,(25,(26,(27,(28,(30,(29,31))))))))),(5,(6,(7,(8,(9,10)))))),(3,23)))));
	TREE * inapplicable = [&R] (1,(2,(4,((3,23),(((11,((17,(21,(20,(18,19)))),(12,((16,13),(14,15))))),(22,((32,(33,(34,(35,(36,((38,37),(40,39))))))),(24,((25,26),(27,(28,(30,(29,31))))))))),(5,(6,(7,(8,(9,10))))))))));
	TREE * inapplicable = [&R] (1,(2,(4,((3,(23,((11,((17,(21,(20,(18,19)))),(12,((16,13),(14,15))))),(22,((32,(33,(34,(35,(36,((38,37),(40,39))))))),(24,((30,((26,25),(28,27))),(31,29)))))))),(5,(6,(7,(8,(9,10)))))))));
	TREE * inapplicable = [&R] (1,(2,(4,((((22,((32,(33,(34,(35,(36,((37,38),(39,40))))))),(24,(25,(26,(27,(28,(30,(29,31))))))))),(11,(17,((18,(19,(20,21))),((12,(13,16)),(15,14)))))),(5,(6,(7,(8,(10,9)))))),(3,23)))));
	TREE * inapplicable = [&R] (1,(2,(4,(3,(23,(((22,((24,(25,(26,(27,(28,(30,(29,31))))))),(32,(33,(34,(35,(36,((37,38),(40,39))))))))),(11,((17,(21,(20,(19,18)))),(12,((13,16),(14,15)))))),(5,(6,(7,(8,(9,10)))))))))));
	TREE * inapplicable = [&R] (1,(2,(4,((23,3),(((22,((24,(25,(26,(27,(28,(30,(31,29))))))),(32,(33,(34,(35,(36,((40,39),(37,38))))))))),(11,((17,(21,(20,(19,18)))),(12,((16,13),(14,15)))))),(5,(6,(7,(8,(9,10))))))))));
	TREE * inapplicable = [&R] (1,(2,(4,((3,(23,((22,((24,((26,25),(27,((28,30),(31,29))))),(32,(33,(34,(35,(36,((38,37),(39,40))))))))),(11,((17,(21,(20,(18,19)))),(12,((13,16),(14,15)))))))),(5,(6,(7,(8,(9,10)))))))));
	TREE * inapplicable = [&R] (1,(2,(4,(3,((23,((22,((24,((25,26),(27,(28,(30,(29,31)))))),(32,(33,(34,(35,(36,((38,37),(39,40))))))))),(11,((17,(21,(20,(18,19)))),(12,((16,13),(14,15))))))),(5,(6,(7,(8,(9,10))))))))));
	TREE * inapplicable = [&R] (1,(2,(4,((23,3),((5,(6,(7,(8,(10,9))))),((17,(11,(((12,(16,13)),((14,15),(22,(32,(33,(34,(35,(36,((37,38),(40,39)))))))))),((21,20),(18,19))))),(24,(25,(26,(27,(28,(30,(29,31)))))))))))));
	TREE * inapplicable = [&R] (1,(2,(4,(3,(((23,(22,(24,(25,(26,(27,(28,(30,(29,31))))))))),(17,(11,((18,(19,(20,21))),(12,((13,16),((14,15),(32,(33,(34,(35,(36,((40,39),(38,37)))))))))))))),(5,(6,(7,(8,(9,10))))))))));
	TREE * inapplicable = [&R] (1,(2,(4,(3,((5,(6,(7,(8,(10,9))))),((17,(11,((21,(20,(19,18))),(12,((16,13),((14,15),(32,(33,(34,(35,(36,((37,38),(40,39))))))))))))),(23,(22,(24,(25,(26,(27,(28,(30,(29,31)))))))))))))));
	TREE * inapplicable = [&R] (1,(2,(4,(((5,(6,(7,(8,(10,9))))),((17,(11,((18,(19,(21,20))),((12,(16,13)),((15,14),(22,(32,(33,(34,(35,(36,((37,38),(40,39))))))))))))),(24,(25,(26,(27,(28,(30,(31,29))))))))),(23,3)))));
	TREE * inapplicable = [&R] (1,(2,(4,(3,((5,(6,(7,(8,(10,9))))),((11,((17,(21,(20,(19,18)))),(12,((16,13),((15,14),(32,(33,(34,(35,(36,((38,37),(39,40)))))))))))),(23,(22,(24,(25,(26,(27,(28,(30,(29,31)))))))))))))));
END;
