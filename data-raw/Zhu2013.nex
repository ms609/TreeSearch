#NEXUS 
begin data;
	dimensions ntax=75 NCHAR=253;
	FORMAT data=standard MISSING=? GAP=- SYMBOLS= "01239";
  matrix
    Galeaspida         0000-00??00101?0?1000?-00000--0-0-0-0000-00-00-00000-000000?00?0000000-000?00-0-?0??00?00-?00??000000000---000--00000--00000-??0-?00000???0000-00?0---0--00001----0-0?----0-0--0--0-----------?---000-0--0-0-000----00-0--?0???0??--0?0???00--0-00-0---00-000
    Acanthodes         000120011001011-0110-?-0?000--010-0-1?00-000011101010?01?1??010?0111?0110111010011001101101001111?001101---00101001011001000011110010000100???-0000---0?-0000?----0-0?---10-0--0--0-------????0---000-0--0-0-?00?---00-1--?????0?001?00??000--0-00-0---?00111
    Achoania           001121?????????1?0-????10??????????????1?1?11??????0?011010?1??00100???1?????0?????????????????1???????00?1???????????1????????1???????????0?0????1???110???01?????????????0????100???????1010???1???1110??10101011011????30110111?????????010?0010??????01??
    Akmonistion        10012010?00??21-?1?1---0-000--010-0-?0111000011?000?0101010?01001110101100?111?11?001??110111010100?0011---001-001101110110001001000000000?0??-0000---0?-0000?----0-0?---?0-0--0--0-------?????---?00-0--0-0-?0??---0?-1--020?0????1?00?0000--0-00-0---??01?0
    Austroptyctodus    0001?0?1?01010?1?0-?1-001-00--00110-0010-01100????000?01010?0????101????????0?????????????????0???0??000001101-00000100?111001010?000011??????-0??00?????0000?10100-01-11?0-0--0--0---?-???0???0--00?-0--0-0-00??---0??0--??????????1?????00--0-00-0?0???????
    Bothriolepis       0000-00?-0?00?10?0-000010-00--00100-????-0?10000??00???0?0???????0?????00????????0????????????0????????000010?????1?000000011000-00000000?????-000?1???0?00010-0101-0?-11?0-???0--0---?-???????0--00?-0--0-0-0002---0?00--?0???????????????????????0?0????000
    Brachyacanthus     000??00??????10??100??-0?11000000-0-????-0?00??????????1?1?????????????????????????????????????????????01-1001010010?0??1?000111011110011?????-0??0---0?-0000?----0-0?---?0-?--????----?--?????---?0????-0-0-?0???--????--?????????????????????????0---?????1
    Brindabellaspis    000110?100010????0-?000?1-?????010???????????????????0?010000000000000-00000100?00??10000-0001000000?0000????1-0001010??????0??1??00?0???????0-0??01???0?0000010111100-11??-???????????-???0?000--?????????????????-????--02?100????11??00?????????????0?????
    Brochoadmones      0101000100?111100110??-0?000--010-0-??1100000??????????1?1?????????????????????????????????????????????1---00????????-??10000111111110011?????-0??0---0?-0000?----0-0?---?0-?--????----?--?????---?0????-0-0-?0???--????--?????????????????????????0---??????
    Buchanosteus       00?1?0?100010??0?0-001111-00--00110-??1?-0?10010??0?001101000001010010-00000000?00??1000???001100000100000011?0???1?1???????00?1??0000???????0-0??00?????0000010101011-11??-????--0---?-???????0--00?-0--0-0-0002---0000--02??1000001100000010000010?00??????
    Campbellodus       000??011?01010?1?0-?1-001-00--00100-0010-01100?0??000?0???????????????????????????????????????0????????000110?????1??0??111001010?00001?01????-000?0?????0000?10100-01-11?0-0--0--0---?-???0???0--00?-0--0-0-00??---00-0--??????????1?????00--0-00-0?0?????0?
    Cassidiceps        000??00??00101?0?10???-???111?100-0-??00-000???????????1?1?????????????????????????????????????????????1---0011?????????1?000111010100011?????-0??0---0?-0000?----0-0?---?0-?--????----?--?????---?0????-0-0-?0???--????--?????????????????????????0---??????
    Cheiracanthus      000120011001010-?111??-0?01111100-0-??00-000011001010?01?1?????????????????????01??????????????????????1---001110010?1??10000111100100001?????-0??0---0?-0000?----0-0?---10-?--????----?--?????---?0????-0-0-?0???--???1--????????????????00--0-00-0---?????1
    Cheirolepis        000120010101012110-01-110-1100101011??10-001111?10000?11?10??????11????10????0?0??00???????????1???????001100?????1???1010000000-00000001?000?-011?0100101000011010-0?10-00010010?00002?0?0000100100010000011000200?111100?0??????0??????10?000101??0101?0110
    Chondrenchelys     11012010?00??-1-?1?1---0-000--000-0-??110000011?00011001110?0?000110??-111??0?????????????0?00110?0?0011---001-00110100011000000-00000000?????-0??0---0?-0000?----0-0?---?0-?--????----?--?????---?0????-0-0-?0???--???1--????????????????00--0-00-0---??????
    Cladodoides        110????????????-????---?-?????????????111?00011?00???1010???00000110101000011111110011011111?0101010001???????????????????????????????????????-0??0---0?-0000?----0-0?---?0-?--????-------?????---??????-0-0-?0???--0?-1--02?100???1?0??0000--0-00-?---??????
    Cladoselache       11012011000??2?-?1?1---0-000--010-0-?01110000110000?0?01?10?0??0111????10???11?11???????1?1?101010??10?1---001-00110101010000100000?000000????-0??0---0?-0000?----0-0?---?0-?--????----?--?????---?00???-0-0-?0???--???1--?????????1??????00--0-00-0---????10
    Climatius          0001000??000110-?10000-0?11000000-0-??110000011?00010?0??1?????????????????????????????????????????????01-1001000010?0??1?000111011110011?????-0000---0?-0000?----0-0?---10-?--?--0-------?????---?0??0--0-0-?0???--00?1--????????????????00--0-00-?---?????1
    Cobelodus          1101?01??00????-?1?1---0-000--010-0-00111000011?00010101?1??01000111101101011111110011011011001010000011---001-00110111011000000-000000000????-0??0---0?-0000?----0-0?---?0-?--????----?--?????---?0????-0-0-?0???--???1--02?1?0?0????0?0000--0-00-0---??????
    Coccosteus         000??01????????0?0-001111-00--00110-??10-0110??????00?11?1?????????????00??????????????????0???????????000011?0???1?????1?000001-00010100?????-000?0?????0000010101011-11?0-???0--0---?-01?000?0--00?-0--0-0-0002---000?--?????????????????????????0?0?????10
    Cowralepis         000??0?????????0?0-1?-001-00--00110-0?10-0110?????00??1????????????????????????????????????0???????????000110????????01?1?000001-000??1-00????-000?0?????0000?10101111-10??-????--0---?-???010?0--00?-0--0-0-0002---00??--?????????????????????????0?0?????10
    Culmacanthus       ?00??00??0010101?100??-1?000--000-0-????-0??0????????????1?????????????????????????????????????????????01-10010?0010?0??10000111100100011?????-0000---0?-00000----0-0?---?0-?--????----?--?????---?0????-0-0-?0???--????--?????????????????????????0---?????1
    Debeerius          11012010?0???-1-?1?1---0-000--000-0-001???00001?000?1001110?0?0?0111??-111??0?110??????10-0100100?0?00?1---001-00110100011?001001001000100????-0??0---0?-0000?----0-0?---?0-?--????----?--?????---?0????-0-0-?0???--???1--????????????????00--0-00-0---???01?
    Diabolepis         001121?????????1?0-?1-1???????????????10-0011?????000011?10?0?100110???101?1?0?0?1??11??????00111?????????????????????????????????????????1001????0?0011110?00101??????0-??1????000???11011110?11??0?100-0-11000210?????1101000??0?0?0?0??010101011??????????
    Dialipina          0????00?011011?0?0-01-101??????0??10??1??00?1??????????1?1??????????????0??????????????????????????????001100???????????10000000-0000??11?0??????1??10??0??00?110???0??0-?0????????10????01010?0???1?10????11??0????????1????????????????????????????00?????0
    Dicksonosteus      00?110?1?0?????0?0-001111-00--00100-??1??0110000????001101000001010010-00001000?00??10000-0001100000?0000001000-0000101????000?1-?00101??????0-0??00?????0000010101011-1100-???0--0---?-?1?01000--000-0--0-0-0002---0000--02111000001100000010000010?00000???
    Diplacanthus       0101?0011001010?0100??-0?000--00??0-??00-0010?????1??????1?????????????????????????????????????????????001100110100000??10000111110100011?????-0000---0?-0000?----0-0?---10-?--?--0-------?????---?0??0--0-0-?0???--0???--??????????????????????????---?????1
    Doliodus           1?0??0?100?????-?1??---0-?00--0?0-0-??111000011??????101010?00?00010???00??111?11?00????11??10101000?0????-????????????????00??1???11?????????-0000---0?-0000?----0-0?---?0-?--?--0-------?????---?0??0--0-0-?0???--0?-1--02??0????1?0??0000--0-00-?---????1?
    Entelognathus      000??0???0101??0?0-01-111-110010101???1?????101?????00?1010?0000010????00?01????0???????????011000??10?000010??????????????00??1?????0????????-0??00????00000??0111-00?10000???0000?1??????????00??0?0?????110?0??????01??0???1??0?01100?00????????0??0??????
    Eusthenopteron     001120010010112100-01-110-11001010101110-001111100000011110111100110110101110000?1111111100?001111010100011000--0000000010000000-000000111?010-00110001--101000011100?00-10-??0000010????????1?????01???0??11?????????111111000010100010001000020000111111010
    Euthacanthus       00010001?001110-0100??-0?01111100-0-??1100000?????????0??1?????????????????????????????????????????????0-11001110010????10000111011100011?????-0??0---0?-0000?----0-0?---?0-?--????----?--?????---?0????-0-0-?0???--????--????????????????00--0-00-0---?????1
    Gogonasus          0011210100101?2100-01-110-1101?010101?10-001111100000011110111010110110001110000??1111?1????00111101010001100?????????0?????0?????????0?1?1010100?10001--101000011100?00-10-??0000010????????1??????1???0??1??????????111111000010100010001000020000?11111?10
    Gladiobranchus     000120011001011-?100??-0101000100-0-??00-0000?????1??????1?????????????????????????????????????????????1---00100100010??10000111111110?11?????-0??0---0?-0000?----0-0?---?0-?--????----?--?????---?0????-0-0-?0???--????--?????????????????????????0---?????1
    Guiyu              0011200101101121?0-01-110-1100101010??11?1011?????000011?10?1???01001??10?1??0?0???????????????1???????00?110?-???1?????1??001?1000100?11?000001??1010010100010011100?00-?0110000000000?001000?0?101?11101111001?11011??1?301?0110???0?????010000001100????01
    Hamiltonichthys    11012010?00?120-?110---0-000--010-0-0?111000001?0?010101?11?00??0110??-?0??1???1????????110?0?10001??011---001-000101000110001001001010110????-0000---0?-0000?----0-0?---?0-?--?--0-------?????---?0??0--0-0-?0???--00?1--0???0????1?0??0?00--0-00-?---???1?0
    Homalacanthus      000??00??001011?0111??-0?000--000-0-??00-0000110010?0?01?1??????011????1?1?????01?????????????11?????1?1---001110010?1??100001111001000010????-0??0---0?-0000?----0-0?---10-?--????----?--?????---?0????-0-0-?0???--???1--?????????1??????00--0-00-0---??????
    Howqualepis        ?????00?0110112110-01-110-1100101011?1110101111?1??00?11?10?0110?111???101?????0????????????0?1111???10001100?-???1??01110000000-00000?011010?01100011000010000101100?10-0001001?1100000?00000100100011?00011001200?1?110000????0?000?0??1?001111111010??0110
    Ischnacanthus      000??00??001010-01000?-0?01101100-0-??110111011100010?0??1????????????????????????????????????1????????1---001110011?1??10000111100100011?????-0??0---0?-0000?----0-0?---?0-?--????----?--?????---?0????-0-0-?0???--???1--????????????????00--0-00-0---????11
    Kathemacanthus     0101000100?011?-?110??-0?000--000-0-??00-0000?1???000??1?1??????0???????0??????????????????????????????1---00????????0??1?000111111100011??0??-0000---0?-0000?----0-0?---?0-?--????----?--?????---?0????-0-0-?0???--???1--?????????????????????????0---????11
    Kenichthys         001121?101101??100-01-11?-1?00101010??10-0011?????000011??0?1?100110???1011????0??11??????????111??????0011000--00000000???????0??????????101010??1??0111101001011100?00-?11001000010111011121001010?100010111001110????1111000?10???0?????000020010?1???????
    Ligulalepis        001??0?10??????1?0-?1-1??????????????????????????????0?101010?1?011010010??1?000010011?1100000111?????????????????????????????????????????0???????0??????0?0??10????0??0-???????????????00?000?0?????1???????????????????????101?000?0??1????????????????????
    Lophosteus         ???120?101?????0?0-?????????????????????????1?????????????????????????????????????????????????????????????????????????????????????????????0???-??????????????????????????????????????????????????????0??????????0????????????????????????????????????????????
    Macropetalichthys  00?110?????????1?0-?00001-???????0???????????????????001100?0000000000-0000?1-1?0???10?00-?00100000?00?00?1????????????????????1???01????????0-0??00?????0000010111100-????-????--0---?-???0?0?0--0??-0--0-0-00??---????--???100????11000000--0-00-0?0???????
    Meemannia          001121?????????1?0-?1-1???????????????1??0011?????000???????0?????????01?????????1??11??11??00111??1??????????????????????????????????????0???????0??????0??0?100????????????????????????0?010???????1??0??10????????????????????????0??1????????????????????
    Mesacanthus        000??00???0?0100?101??-0101110000-0-??00-000011??00???01?1?????????????????????0???????????????????????1---00111001?0???10000111010100001?????-0??0---0?-0000?----0-0?---10-?--????----?--?????---?0????-0-0-?0???--???1--????????????????00--0-00-0---??????
    Miguashaia         0??1200??010112100-01-111-1????01?10??10-0?111??0??00?11?1???????1?????????????????????????????????????001100???????????100??000???00???1??00?-001?000??010?0?1011100?00-10?0110?0?---??11?021??0?1??10000011110211?11??10??????1??????????????????01?0????10
    Mimipiscis         001120010110112110-01-110-11001010111110-001111110000011110101100111110101111000010011111000001111011100011000--0000001110000000-000000011010001100011000010000101100?10-000100101101000010000100100110000011000200111110000000100000000110001011011010100110
    Moythomasia        001120010110112110-01-11?-1100101011?110-001111110000011110101100111110101111000010011111000001111011100011000--0000001110000000-000000011010001100011000010000101100?10-00010010110100001000010010011?0000110002001??110000000?0000000?110001111111010100110
    Obtusacanthus      0101201000?0120-?110??-0?0?0???0??0-??00-0000????????????1?????????????????????????????????????????????1---00????????-??1?000111?01110011?????-0??0---0?-0000?----0-0?---?0-?--????----?--?????---??????-0-0-?0???--????--?????????????????????????0---??????
    Onychodus          001120010010012100-01-111-1100?01010?111010111110??00?11?10111?001001-?10111?0?0?1001???????0?1111?????0011000--0000000?10000000-00000011??00?-00110000101010?1011100?00-1010110100000011110?1000111010100111001011011?11130100010000???0??010010000110001010
    Onychoselache      1101?011?0001-0-?1?1---0-000--0?0-0-??111000001?0?0?0101?1??0????11?????0???????0?????????????????1????1---001-100101000110001001001010110????-00?0---0?-0000?----0-0?---?0-?--????----?--?????---??????-0-0-?0???--???1--????????????????00--0-00-0---???11?
    Orthacanthus       1101201????????-?1??---0-?00--010-0-001110000111000101010?1?00000110101000011111110011011111101010100011---001-0011011??11000100?00??00-10????-0??0---0?-0000?----0-0?---?0-?--????----?--?????---??0???-0-0-?0???--???1--?????????1??????00--0-00-0---??????
    Osorioichthys      00?1200?0????1?110-01-11?-1100101011??1???0?1??????????1???????????????????????????????????????????????001100??????????????00??0-00000????010?0????0110000100?1001????10-0001??1?1100?0???0000?00?00?10?00?110?02???????00?????????????????????????1010??????
    Osteolepis         001121010110112100-01-11?-1100101010??10-001111?????0011110?1?10011011?101110??0011?1111??0?00111?01010001100???????????10000000-00000?11110?0100110001--101000011100?00-10-?????????????????1?????011??0??11??????????11111000010100010001000020000111111?10
    Osteostraci        0001000100?010?0?10000-00000--0-0-0-0000-0?-00-00000-000000000?0000000-000?00-0-?0??00-00-?00??0000??00000000?????0?100000000?0?-0000000??0000-00?0---0--0000?----0-0?----0-0--0--0-----------?---000-0--0-0-000----00-0--?0??00??--0?0???00--0-00-0---???000
    Parayunnanolepis   0??1?0?1?0?10?10?0-000010-00--00100-????????0??????????0???????????????????????????????????????????????000010?????????0?10010000?00000?00?????-000?1???0?0?010-0101-0?-11??-???0--0---?-???????0--00?-0--0-0-00??---????--?0???????????????????????0?0????000
    Parexus            000??01100???10??100??-0?11000000-0-??1100000?????????0??1?????????????????????????????????????????????01-1001010010?0??10000111111110011?????-0??0---0?-0000?----0-0?---?0-?--????----?--?????---?0????-0-0-?0???--????--????????????????00--0-00-0---?????1
    Poracanthodes      00010001000101???10???-0????????0-????110111011??00????????????????????????????????????????????????????1---001110011????1?000111?00100011?????-00?0---0?-0000?----0-0?---?0-?--?--0-------?????---????0--0-0-?0???--0?-1--??????????????????????????---?????1
    Porolepis          001121010110112100-01-110-110?101010?1110101111100000011110?11?0011011?1011100?0??101??1????001111??01?0011000--0000000?10000000-00000?11?1010100110???10???0??001100??0-???0???000?????1?1??10???1011?11101???0?11?11111121?0001??000???0???1010???1????1010
    Powichthys         001121?10110112100-01-11?-1100?0101???11??011?????000011110?111001101??101?1?0?0??10????????0011110?010001100??????????????????0??????????101111??0000111101011011????00-??10??0000101110111100010?0?101110101000110????1121000?1110?011?0101101001011111101?
    Promesacanthus     0001?001101101?0?101??-0101110000-0-??00-000011???010??1?1??????????????????????1??????????????????????1---00111000001??1?000111011100001?????-0??0---0?-0000?----0-0?---?0-?--????----?--?????---?0????-0-0-?0???--???1--?????????????????????????0---??????
    Psarolepis         001121?101?0??21?0-01-?10-????????????11?1011?????000011010?1?10010011?10?11?0?0?1001???100000111??????00?1???????1??01?????01?10?0100????000001??10??110???0100??100??0-?1010??111000010110000?010??11101110101011011??113011011000?0001??01000000???0000101
    Pterichthyodes     0?0??001?0???010?0-00??10-00--00100-??00-?0?0??????????0?0???????0????????????????????????????0????????0?0010?????1??00000011?00?0000?000?????-000?1???0?00010-0101-0?-11??-???0--0---?-???????0--00?-0--0-0-00??---????--?????????????????????????0?0???????
    Ptomacanthus       ?00??0?1?00111???100??-0101?0001??????1100000110000???01?10??0????0????0????0000????????????????????10?011-00100001010??10000111011110011?????-0000---0?-0000?----0-0?---?0-?--?--0-------?????---????0--0-0-?0???--0?-1--????????????0??000--0-00-?---?????1
    Pucapampella       110??0?????????-????---?-??????????????????????????????1????000001101?1100?1101011001?0?101010111?00100???????????????????????????????????????-0??0?--0?-0000?-???????---?0-?--????-------?????---??????-0-0-?0???--????--?2?10????1?0??00??????????---??????
    Rhamphodopsis      000??0???????0?1?0-?1-001-00--00110-??10-01100????????0???????????????????????????????????????0????????00011??0???1?????111001010?0110?10?????-0???0?????0000?1010??01-11?0-0--0--0---?-???0???0--00?-0--0-0-00??---0???--??????????1?????00--0-00-0?0??????1
    Sigaspis           0????0???0???010?0-00111?-00--0010??????????0??????????????????????????????????????????????????????????000010?????????1?1?0000?1??0000?????????????0?????0?00?10101000?10?0-???0--0---?-11?????0--???-0--0-0-00??---????--?????????????????????????0?0?????00
    Styloichthys       001121?101101?2100-01-11?-????????????11??011?????000011110?1?1001101?0101110??0?1101?????0?001110010100011000--00000000???????0??????????00?011??1???01????00?011100??0-?1?0010??0101110111200?101??101???100100110????1121010?1110?01??0?00001011??111110??
    Tamiobatis         1101?0?1-0001??-?11?---0-?????????????111000011?000??101??0?000001101010000111111?001???111110101000001??????????1???????????1??1??110???0????-0??0---0?-0000?----0-0?---?0-?--????----?--?????---??????-0-0-?0???--???1--02???0?0?1??0?0000--0-00-0---?????1
    Tetanopsyrus       000120011001010-?110??-0?000--000-0-??10-0?10010001????1?1?????????????????????????????????????????????1---00100001001??10000111000110011?????-0000---0?-0000?----0-0?---?0-?--?--0----?--?????---?0??0--0-0-?0???--00?1--??????????????????????????---?????1
    Tristychius        11012011?00??-?-?1?1---0-000--000-0-?0111000001?0?010101010?000001101?-1000101?-0?001?????11101000?10011---001-001101000110001001001010110????-0??0---0?-0000?----0-0?---?0-?--????----?--?????---?0????-0-0-?0???--???1--????????????????00--0-00-0---???110
    Youngolepis        001121?101101?2100-01-11?-?????0101???11??01111???000011110?011001101101011100?0011011111?00001111010100011000--00000000???????0??????????101111??0?00111???001011100?00-?11001000010111011110011010?100110101100110???11121000?1110?001001101010?1??111110??
    Lupopsyrus         000??0100?0??20???????????1010?00-0-??00-0000??????????????????????????????????????????????????????????1---0010??????1??10000111111110011?????-0??0---0?-0000?----0-0?---?0-?--????----?--?????---?0????-0-0-?0???--????--?????????????????????????0---?????1
    Rhadinacanthus     000??0????????????????????0100?0??????00-00?0???????????????????????????????????????????????????????????????01?11????1??10000111111110011?????-0??0---0?-0000?----0-0?---?0-?--????----?--?????---??????-0-0-?0???--????--?????????????????????????0---?????1
    Vernicomacanthus   000??0???????1????????????10???1??????11?0?00???????????????????????????????????????????????????????????????01?00????1??10000111111110011?????-0??0---0?-0000?----0-0?---?0-?--????----?--?????---??????-0-0-?0???--????--?????????????????????????0---?????1
  ;
end;

BEGIN TAXA;
	DIMENSIONS NTAX = 75;
	TAXLABELS
		Galeaspida
		Acanthodes
		Achoania
		Akmonistion
		Austroptyctodus
		Bothriolepis
		Brachyacanthus
		Brindabellaspis
		Brochoadmones
		Buchanosteus
		Campbellodus
		Cassidiceps
		Cheiracanthus
		Cheirolepis
		Chondrenchelys
		Cladodoides
		Cladoselache
		Climatius
		Cobelodus
		Coccosteus
		Cowralepis
		Culmacanthus
		Debeerius
		Diabolepis
		Dialipina
		Dicksonosteus
		Diplacanthus
		Doliodus
		Entelognathus
		Eusthenopteron
		Euthacanthus
		Gogonasus
		Gladiobranchus
		Guiyu
		Hamiltonichthys
		Homalacanthus
		Howqualepis
		Ischnacanthus
		Kathemacanthus
		Kenichthys
		Ligulalepis
		Lophosteus
		Macropetalichthys
		Meemannia
		Mesacanthus
		Miguashaia
		Mimipiscis
		Moythomasia
		Obtusacanthus
		Onychodus
		Onychoselache
		Orthacanthus
		Osorioichthys
		Osteolepis
		Osteostraci
		Parayunnanolepis
		Parexus
		Poracanthodes
		Porolepis
		Powichthys
		Promesacanthus
		Psarolepis
		Pterichthyodes
		Ptomacanthus
		Pucapampella
		Rhamphodopsis
		Sigaspis
		Styloichthys
		Tamiobatis
		Tetanopsyrus
		Tristychius
		Youngolepis
		Lupopsyrus
		Rhadinacanthus
		Vernicomacanthus
	;
END;
BEGIN TREES;
	TRANSLATE
		1	Galeaspida,
		2	Acanthodes,
		3	Achoania,
		4	Akmonistion,
		5	Austroptyctodus,
		6	Bothriolepis,
		7	Brachyacanthus,
		8	Brindabellaspis,
		9	Brochoadmones,
		10	Buchanosteus,
		11	Campbellodus,
		12	Cassidiceps,
		13	Cheiracanthus,
		14	Cheirolepis,
		15	Chondrenchelys,
		16	Cladodoides,
		17	Cladoselache,
		18	Climatius,
		19	Cobelodus,
		20	Coccosteus,
		21	Cowralepis,
		22	Culmacanthus,
		23	Debeerius,
		24	Diabolepis,
		25	Dialipina,
		26	Dicksonosteus,
		27	Diplacanthus,
		28	Doliodus,
		29	Entelognathus,
		30	Eusthenopteron,
		31	Euthacanthus,
		32	Gogonasus,
		33	Gladiobranchus,
		34	Guiyu,
		35	Hamiltonichthys,
		36	Homalacanthus,
		37	Howqualepis,
		38	Ischnacanthus,
		39	Kathemacanthus,
		40	Kenichthys,
		41	Ligulalepis,
		42	Lophosteus,
		43	Macropetalichthys,
		44	Meemannia,
		45	Mesacanthus,
		46	Miguashaia,
		47	Mimipiscis,
		48	Moythomasia,
		49	Obtusacanthus,
		50	Onychodus,
		51	Onychoselache,
		52	Orthacanthus,
		53	Osorioichthys,
		54	Osteolepis,
		55	Osteostraci,
		56	Parayunnanolepis,
		57	Parexus,
		58	Poracanthodes,
		59	Porolepis,
		60	Powichthys,
		61	Promesacanthus,
		62	Psarolepis,
		63	Pterichthyodes,
		64	Ptomacanthus,
		65	Pucapampella,
		66	Rhamphodopsis,
		67	Sigaspis,
		68	Styloichthys,
		69	Tamiobatis,
		70	Tetanopsyrus,
		71	Tristychius,
		72	Youngolepis,
		73	Lupopsyrus,
		74	Rhadinacanthus,
		75	Vernicomacanthus
	;
	TREE * ambiguous = [&R] (1,(55,((8,(43,(((29,(((((31,((12,((13,(2,36)),(45,61))),(38,58))),(75,(9,(39,(73,(49,(65,((((19,(4,17)),(16,52)),(71,((15,23),(35,51)))),(28,69))))))))),(64,(18,(7,57)))),(70,(22,(27,(33,74))))),(42,(25,(44,(((34,(3,62)),((68,((59,(60,(24,72))),(40,(54,(30,32))))),(46,50))),(14,(53,(41,(37,(47,48))))))))))),(11,(5,66))),(67,(26,(21,(10,20))))))),(56,(6,63)))));
	TREE * ambiguous = [&R] (1,(63,(6,(55,(56,(8,(43,(((29,((((31,((12,((13,(2,36)),(45,61))),(38,58))),((64,(75,(9,(39,((65,((((19,(4,17)),(16,52)),(71,((15,23),(35,51)))),(28,69))),(49,73)))))),(18,(7,57)))),(70,(22,(27,(33,74))))),(42,(25,(44,(41,(((34,(3,62)),((68,((59,(60,(24,72))),(40,(54,(30,32))))),(46,50))),(14,(53,(37,(47,48))))))))))),(11,(5,66))),(67,(26,(21,(10,20))))))))))));
	TREE * ambiguous = [&R] (1,(55,((8,(43,((29,((((((31,((12,((13,(2,36)),(45,61))),(38,58))),(75,(9,(39,((65,((((19,(4,17)),(16,52)),(71,((15,23),(35,51)))),(28,69))),(49,73)))))),(64,(18,(7,57)))),(70,(22,(27,(33,74))))),(42,(25,(44,(((34,(3,62)),((68,((60,(24,72)),(59,(40,(54,(30,32)))))),(46,50))),(14,(41,(53,(37,(47,48)))))))))),(11,(5,66)))),(67,(26,(21,(10,20))))))),(56,(6,63)))));
	TREE * ambiguous = [&R] (1,(63,(6,(55,(56,(8,(43,(((29,(((((31,((12,((13,(2,36)),(45,61))),(38,58))),(75,(9,(39,((65,((((19,(4,17)),(16,52)),(71,((15,23),(35,51)))),(28,69))),(49,73)))))),(64,(18,(7,57)))),(70,(22,(27,(33,74))))),(42,(25,(44,(((34,(3,62)),((68,((60,(24,72)),(59,(40,(54,(30,32)))))),(46,50))),(14,(53,(41,(37,(47,48))))))))))),(11,(5,66))),(67,(26,(21,(10,20))))))))))));
	TREE * ambiguous = [&R] (1,(55,((8,(43,(((29,(((((31,((12,((13,(2,36)),(45,61))),(38,58))),(75,(9,(39,(73,(49,(65,((((19,(4,17)),(16,52)),(71,((15,23),(35,51)))),(28,69))))))))),(64,(18,(7,57)))),(70,(22,(27,(33,74))))),(42,(25,(44,(((34,(3,62)),((68,((60,(24,72)),(59,(40,(54,(30,32)))))),(46,50))),(14,((37,(47,48)),(41,53))))))))),(11,(5,66))),(67,(26,(21,(10,20))))))),(56,(6,63)))));
	TREE * ambiguous = [&R] (1,(63,(6,(55,(56,(8,(43,((29,((((((31,((12,((13,(2,36)),(45,61))),(38,58))),(75,(9,(39,(73,(49,(65,((((19,(4,17)),(16,52)),(71,((15,23),(35,51)))),(28,69))))))))),(64,(18,(7,57)))),(70,(22,(27,(33,74))))),(42,(25,(44,(((34,(3,62)),((68,((60,(24,72)),(59,(40,(54,(30,32)))))),(46,50))),(41,(14,(53,(37,(47,48)))))))))),(11,(5,66)))),(67,(26,(21,(10,20))))))))))));
	TREE * ambiguous = [&R] (1,(55,(((((29,(((((31,((12,((13,(2,36)),(45,61))),(38,58))),(75,(9,(39,(73,(49,(65,((((19,(4,17)),(16,52)),(71,((15,23),(35,51)))),(28,69))))))))),(64,(18,(7,57)))),(70,(22,(27,(33,74))))),(42,(25,(44,(41,(((34,(3,62)),((68,((59,(60,(24,72))),(40,(54,(30,32))))),(46,50))),(14,(53,(37,(47,48))))))))))),(11,(5,66))),(67,(26,(21,(10,20))))),(8,43)),(56,(6,63)))));
	TREE * ambiguous = [&R] (1,(6,(63,(56,(55,(8,(43,(((29,(((((31,((12,((13,(2,36)),(45,61))),(38,58))),(75,(9,(39,(73,(49,(65,((((19,(4,17)),(16,52)),(71,((15,23),(35,51)))),(28,69))))))))),(64,(18,(7,57)))),(70,(22,(27,(33,74))))),(42,(25,(44,(((34,(3,62)),((68,((60,(24,72)),(59,(40,(54,(30,32)))))),(46,50))),(14,((37,(47,48)),(41,53))))))))),(11,(5,66))),(67,(26,(21,(10,20))))))))))));
	TREE * ambiguous = [&R] (1,(55,((56,(8,(43,(((22,((((12,((13,(2,36)),(45,61))),(31,((75,(9,(39,(73,(49,(65,((((19,(4,17)),(16,52)),(71,((15,23),(35,51)))),(28,69)))))))),(64,(18,(7,57)))))),(38,58)),(70,(74,(27,33))))),(42,(25,(44,(41,(((34,(3,62)),((68,((60,(24,72)),(59,(40,(54,(30,32)))))),(46,50))),(14,(53,(37,(47,48)))))))))),((29,(11,(5,66))),(67,(26,(21,(10,20))))))))),(6,63))));
	TREE * ambiguous = [&R] (1,(55,((56,((((29,(((((31,((12,((13,(2,36)),(45,61))),(38,58))),(75,(9,(39,((65,((((19,(4,17)),(16,52)),(71,((15,23),(35,51)))),(28,69))),(49,73)))))),(64,(18,(7,57)))),(70,(22,(27,(33,74))))),(42,(25,(44,(((34,(3,62)),((68,((60,(24,72)),(59,(40,(54,(30,32)))))),(46,50))),(41,(14,(53,(37,(47,48))))))))))),(11,(5,66))),(67,(26,(21,(10,20))))),(8,43))),(6,63))));
	TREE * ambiguous = [&R] (1,(55,((8,(43,(((29,(((((31,((12,((13,(2,36)),(45,61))),(38,58))),(75,(9,(39,(73,(49,(65,((((19,(4,17)),(16,52)),(71,((15,23),(35,51)))),(28,69))))))))),(64,(18,(7,57)))),(70,(22,(27,(33,74))))),(42,(25,(44,(((34,(3,62)),((68,((60,(24,72)),(59,(40,(54,(30,32)))))),(46,50))),(14,(41,(53,(37,(47,48))))))))))),(11,(5,66))),(67,(26,(21,(10,20))))))),(56,(6,63)))));
	TREE * ambiguous = [&R] (1,((56,(55,(8,(43,((29,((((((31,((12,((13,(2,36)),(45,61))),(38,58))),(75,(9,(39,(73,(49,(65,((((19,(4,17)),(16,52)),(71,((15,23),(35,51)))),(28,69))))))))),(64,(18,(7,57)))),(70,(22,(27,(33,74))))),(42,(25,(44,(41,(((34,(3,62)),((68,((59,(60,(24,72))),(40,(54,(30,32))))),(46,50))),(14,(53,(37,(47,48)))))))))),(11,(5,66)))),(67,(26,(21,(10,20))))))))),(6,63)));
	TREE * ambiguous = [&R] (1,(55,((56,(8,(43,((29,((((((31,((12,((13,(2,36)),(45,61))),(38,58))),(75,(9,(39,((65,((((19,(4,17)),(16,52)),(71,((15,23),(35,51)))),(28,69))),(49,73)))))),(64,(18,(7,57)))),(70,(22,(27,(33,74))))),(42,(25,(44,(41,(((34,(3,62)),((68,((60,(24,72)),(59,(40,(54,(30,32)))))),(46,50))),(14,(53,(37,(47,48)))))))))),(11,(5,66)))),(67,(26,(21,(10,20)))))))),(6,63))));
	TREE * ambiguous = [&R] (1,((55,(56,(8,(43,(((22,((((12,((13,(2,36)),(45,61))),(31,((75,(9,(39,((65,((((19,(4,17)),(16,52)),(71,((15,23),(35,51)))),(28,69))),(49,73))))),(64,(18,(7,57)))))),(38,58)),(70,(74,(27,33))))),(42,(25,(44,(41,(((34,(3,62)),((68,((59,(60,(24,72))),(40,(54,(30,32))))),(46,50))),(14,(53,(37,(47,48)))))))))),((29,(11,(5,66))),(67,(26,(21,(10,20)))))))))),(6,63)));
	TREE * ambiguous = [&R] (1,(55,((56,(8,(43,(((29,(((((31,((12,((13,(2,36)),(45,61))),(38,58))),(75,(9,(39,((65,((((19,(4,17)),(16,52)),(71,((15,23),(35,51)))),(28,69))),(49,73)))))),(64,(18,(7,57)))),(70,(22,(27,(33,74))))),(42,(25,(44,(((34,(3,62)),((68,((60,(24,72)),(59,(40,(54,(30,32)))))),(46,50))),((14,41),(53,(37,(47,48)))))))))),(11,(5,66))),(67,(26,(21,(10,20)))))))),(6,63))));
	TREE * ambiguous = [&R] (1,(55,((56,(8,(43,(((29,(((((31,((12,((13,(2,36)),(45,61))),(38,58))),(75,(9,(39,(73,(49,(65,((((19,(4,17)),(16,52)),(71,((15,23),(35,51)))),(28,69))))))))),(64,(18,(7,57)))),(70,(22,(27,(33,74))))),(42,(25,(44,(((34,(3,62)),((68,((59,(60,(24,72))),(40,(54,(30,32))))),(46,50))),(14,(41,(53,(37,(47,48))))))))))),(11,(5,66))),(67,(26,(21,(10,20)))))))),(6,63))));
	TREE * ambiguous = [&R] (1,(55,((56,(8,(43,(((29,(((((31,((12,((13,(2,36)),(45,61))),(38,58))),(75,(9,(39,((65,((((19,(4,17)),(16,52)),(71,((15,23),(35,51)))),(28,69))),(49,73)))))),(64,(18,(7,57)))),(70,(22,(27,(33,74))))),(42,(25,(44,(((34,(3,62)),((68,((59,(60,(24,72))),(40,(54,(30,32))))),(46,50))),(14,(41,(53,(37,(47,48))))))))))),(11,(5,66))),(67,(26,(21,(10,20)))))))),(6,63))));
	TREE * ambiguous = [&R] (1,(6,(63,(55,(56,((((29,(((((31,((12,((13,(2,36)),(45,61))),(38,58))),(75,(9,(39,(73,(49,(65,((((19,(4,17)),(16,52)),(71,((15,23),(35,51)))),(28,69))))))))),(64,(18,(7,57)))),(70,(22,(27,(33,74))))),(42,(25,(44,(((34,(3,62)),((68,((60,(24,72)),(59,(40,(54,(30,32)))))),(46,50))),(14,((37,(47,48)),(41,53))))))))),(11,(5,66))),(67,(26,(21,(10,20))))),(8,43)))))));
	TREE * ambiguous = [&R] (1,(55,((56,(8,(43,((29,((((((31,((12,((13,(2,36)),(45,61))),(38,58))),(75,(9,(39,((65,((((19,(4,17)),(16,52)),(71,((15,23),(35,51)))),(28,69))),(49,73)))))),(64,(18,(7,57)))),(70,(22,(27,(33,74))))),(42,(25,(44,(41,(((34,(3,62)),((68,((59,(60,(24,72))),(40,(54,(30,32))))),(46,50))),(14,(53,(37,(47,48)))))))))),(11,(5,66)))),(67,(26,(21,(10,20)))))))),(6,63))));
	TREE * ambiguous = [&R] (1,(55,((8,(43,(((22,((((12,((13,(2,36)),(45,61))),(31,((75,(9,(39,((65,((((19,(4,17)),(16,52)),(71,((15,23),(35,51)))),(28,69))),(49,73))))),(64,(18,(7,57)))))),(38,58)),(70,(27,(33,74))))),(42,(25,(44,(41,(((34,(3,62)),((68,((60,(24,72)),(59,(40,(54,(30,32)))))),(46,50))),(14,(53,(37,(47,48)))))))))),((29,(11,(5,66))),(67,(26,(21,(10,20)))))))),(56,(6,63)))));
	TREE * ambiguous = [&R] (1,(63,(6,(56,(55,((((29,((((31,((12,((13,(2,36)),(45,61))),(38,58))),((64,(75,(9,(39,(73,(49,(65,((((19,(4,17)),(16,52)),(71,((15,23),(35,51)))),(28,69))))))))),(18,(7,57)))),(70,(22,(27,(33,74))))),(42,(25,(44,(41,(((34,(3,62)),((68,((60,(24,72)),(59,(40,(54,(30,32)))))),(46,50))),(14,(53,(37,(47,48))))))))))),(11,(5,66))),(67,(26,(21,(10,20))))),(8,43)))))));
	TREE * ambiguous = [&R] (1,(55,((8,(43,(((29,(((((31,((12,((13,(2,36)),(45,61))),(38,58))),(75,(9,(39,((65,((((19,(4,17)),(16,52)),(71,((15,23),(35,51)))),(28,69))),(49,73)))))),(64,(18,(7,57)))),(70,(22,(27,(33,74))))),(42,(25,(44,(((34,(3,62)),((68,((60,(24,72)),(59,(40,(54,(30,32)))))),(46,50))),(41,(14,(53,(37,(47,48))))))))))),(11,(5,66))),(67,(26,(21,(10,20))))))),(56,(6,63)))));
	TREE * ambiguous = [&R] (1,(55,((8,(43,(((29,(((((31,((12,((13,(2,36)),(45,61))),(38,58))),(75,(9,(39,((65,((((19,(4,17)),(16,52)),(71,((15,23),(35,51)))),(28,69))),(49,73)))))),(64,(18,(7,57)))),(70,(22,(27,(33,74))))),(42,(25,(44,(((34,(3,62)),((68,((59,(60,(24,72))),(40,(54,(30,32))))),(46,50))),(14,(53,(41,(37,(47,48))))))))))),(11,(5,66))),(67,(26,(21,(10,20))))))),(56,(6,63)))));
	TREE * ambiguous = [&R] (1,(6,(63,(56,(55,(8,(43,((29,((((((31,((12,((13,(2,36)),(45,61))),(38,58))),(75,(9,(39,((65,((((19,(4,17)),(16,52)),(71,((15,23),(35,51)))),(28,69))),(49,73)))))),(64,(18,(7,57)))),(70,(22,(27,(33,74))))),(42,(25,(44,(((34,(3,62)),((68,((60,(24,72)),(59,(40,(54,(30,32)))))),(46,50))),(14,(41,(53,(37,(47,48)))))))))),(11,(5,66)))),(67,(26,(21,(10,20))))))))))));
	TREE * ambiguous = [&R] (1,(55,(((((29,((((31,((12,((13,(2,36)),(45,61))),(38,58))),((64,(75,(9,(39,((65,((((19,(4,17)),(16,52)),(71,((15,23),(35,51)))),(28,69))),(49,73)))))),(18,(7,57)))),(70,(22,(27,(33,74))))),(42,(25,(44,(41,(((34,(3,62)),((68,((59,(60,(24,72))),(40,(54,(30,32))))),(46,50))),(14,(53,(37,(47,48))))))))))),(11,(5,66))),(67,(26,(21,(10,20))))),(8,43)),(56,(6,63)))));
	TREE * ambiguous = [&R] (1,(6,(63,(56,(55,(8,(43,((29,((((((31,((12,((13,(2,36)),(45,61))),(38,58))),(75,(9,(39,(73,(49,(65,((((19,(4,17)),(16,52)),(71,((15,23),(35,51)))),(28,69))))))))),(64,(18,(7,57)))),(70,(22,(27,(33,74))))),(42,(25,(44,(((34,(3,62)),((68,((59,(60,(24,72))),(40,(54,(30,32))))),(46,50))),(41,(14,(53,(37,(47,48)))))))))),(11,(5,66)))),(67,(26,(21,(10,20))))))))))));
	TREE * ambiguous = [&R] (1,(55,((56,(8,(43,((29,((((((31,((12,((13,(2,36)),(45,61))),(38,58))),(75,(9,(39,((65,((((19,(4,17)),(16,52)),(71,((15,23),(35,51)))),(28,69))),(49,73)))))),(64,(18,(7,57)))),(70,(22,(27,(33,74))))),(42,(25,(44,(((34,(3,62)),((68,((59,(60,(24,72))),(40,(54,(30,32))))),(46,50))),(14,(41,(53,(37,(47,48)))))))))),(11,(5,66)))),(67,(26,(21,(10,20)))))))),(6,63))));
	TREE * ambiguous = [&R] (1,(55,((56,(8,(43,((29,((((((31,((12,((13,(2,36)),(45,61))),(38,58))),(75,(9,(39,(73,(49,(65,((((19,(4,17)),(16,52)),(71,((15,23),(35,51)))),(28,69))))))))),(64,(18,(7,57)))),(70,(22,(27,(33,74))))),(42,(25,(44,(((34,(3,62)),((68,((60,(24,72)),(59,(40,(54,(30,32)))))),(46,50))),(14,(53,(41,(37,(47,48)))))))))),(11,(5,66)))),(67,(26,(21,(10,20)))))))),(6,63))));
	TREE * ambiguous = [&R] (1,(6,(63,(55,(56,((((29,(((((31,((12,((13,(2,36)),(45,61))),(38,58))),(75,(9,(39,(73,(49,(65,((((19,(4,17)),(16,52)),(71,((15,23),(35,51)))),(28,69))))))))),(64,(18,(7,57)))),(70,(22,(27,(33,74))))),(42,(25,(44,(41,(((34,(3,62)),((68,((60,(24,72)),(59,(40,(54,(30,32)))))),(46,50))),(14,(53,(37,(47,48))))))))))),(11,(5,66))),(67,(26,(21,(10,20))))),(8,43)))))));
	TREE * ambiguous = [&R] (1,(55,((8,(43,(((29,(((((31,((12,((13,(2,36)),(45,61))),(38,58))),(75,(9,(39,(73,(49,(65,((((19,(4,17)),(16,52)),(71,((15,23),(35,51)))),(28,69))))))))),(64,(18,(7,57)))),(70,(22,(27,(33,74))))),(42,(25,(44,(((34,(3,62)),((68,((60,(24,72)),(59,(40,(54,(30,32)))))),(46,50))),((14,41),(53,(37,(47,48)))))))))),(11,(5,66))),(67,(26,(21,(10,20))))))),(56,(6,63)))));
	TREE * ambiguous = [&R] (1,(55,((8,(43,(((29,(((((31,((12,((13,(2,36)),(45,61))),(38,58))),(75,(9,(39,((65,((((19,(4,17)),(16,52)),(71,((15,23),(35,51)))),(28,69))),(49,73)))))),(64,(18,(7,57)))),(70,(22,(27,(33,74))))),(42,(25,(44,(((34,(3,62)),((68,((59,(60,(24,72))),(40,(54,(30,32))))),(46,50))),(41,(14,(53,(37,(47,48))))))))))),(11,(5,66))),(67,(26,(21,(10,20))))))),(56,(6,63)))));
	TREE * ambiguous = [&R] (1,(55,((56,(8,(43,(((22,((((12,((13,(2,36)),(45,61))),(31,((75,(9,(39,((65,((((19,(4,17)),(16,52)),(71,((15,23),(35,51)))),(28,69))),(49,73))))),(64,(18,(7,57)))))),(38,58)),(70,(74,(27,33))))),(42,(25,(44,(41,(((34,(3,62)),((68,((59,(60,(24,72))),(40,(54,(30,32))))),(46,50))),(14,(53,(37,(47,48)))))))))),((29,(11,(5,66))),(67,(26,(21,(10,20))))))))),(6,63))));
	TREE * ambiguous = [&R] (1,(55,((56,(8,(43,((29,((((((31,((12,((13,(2,36)),(45,61))),(38,58))),(75,(9,(39,(73,(49,(65,((((19,(4,17)),(16,52)),(71,((15,23),(35,51)))),(28,69))))))))),(64,(18,(7,57)))),(70,(22,(27,(33,74))))),(42,(25,(44,(41,(((34,(3,62)),((68,((59,(60,(24,72))),(40,(54,(30,32))))),(46,50))),(14,(53,(37,(47,48)))))))))),(11,(5,66)))),(67,(26,(21,(10,20)))))))),(6,63))));
	TREE * ambiguous = [&R] (1,(6,(63,(56,(55,(8,(43,((29,((((((31,((12,((13,(2,36)),(45,61))),(38,58))),(75,(9,(39,((65,((((19,(4,17)),(16,52)),(71,((15,23),(35,51)))),(28,69))),(49,73)))))),(64,(18,(7,57)))),(70,(22,(27,(33,74))))),(42,(25,(44,(((34,(3,62)),((68,((59,(60,(24,72))),(40,(54,(30,32))))),(46,50))),(14,(53,(41,(37,(47,48)))))))))),(11,(5,66)))),(67,(26,(21,(10,20))))))))))));
	TREE * ambiguous = [&R] (1,(6,(63,(55,(56,(8,(43,(((22,((((12,((13,(2,36)),(45,61))),(31,((75,(9,(39,(73,(49,(65,((((19,(4,17)),(16,52)),(71,((15,23),(35,51)))),(28,69)))))))),(64,(18,(7,57)))))),(38,58)),(70,(74,(27,33))))),(42,(25,(44,(41,(((34,(3,62)),((68,((59,(60,(24,72))),(40,(54,(30,32))))),(46,50))),(14,(53,(37,(47,48)))))))))),((29,(11,(5,66))),(67,(26,(21,(10,20)))))))))))));
	TREE * ambiguous = [&R] (1,((55,(56,(8,(43,((29,((((((31,((12,((13,(2,36)),(45,61))),(38,58))),(75,(9,(39,((65,((((19,(4,17)),(16,52)),(71,((15,23),(35,51)))),(28,69))),(49,73)))))),(64,(18,(7,57)))),(70,(22,(27,(33,74))))),(42,(25,(44,(((34,(3,62)),((68,((60,(24,72)),(59,(40,(54,(30,32)))))),(46,50))),(14,(41,(53,(37,(47,48)))))))))),(11,(5,66)))),(67,(26,(21,(10,20))))))))),(6,63)));
	TREE * ambiguous = [&R] (1,(55,((8,(43,((29,((((((31,((12,((13,(2,36)),(45,61))),(38,58))),(75,(9,(39,((65,((((19,(4,17)),(16,52)),(71,((15,23),(35,51)))),(28,69))),(49,73)))))),(64,(18,(7,57)))),(70,(22,(27,(33,74))))),(42,(25,(44,(((34,(3,62)),((68,((59,(60,(24,72))),(40,(54,(30,32))))),(46,50))),(41,(14,(53,(37,(47,48)))))))))),(11,(5,66)))),(67,(26,(21,(10,20))))))),(56,(6,63)))));
	TREE * ambiguous = [&R] (1,(63,(6,(56,(55,(8,(43,(((22,((((12,((13,(2,36)),(45,61))),(31,((75,(9,(39,(73,(49,(65,((((19,(4,17)),(16,52)),(71,((15,23),(35,51)))),(28,69)))))))),(64,(18,(7,57)))))),(38,58)),(70,(74,(27,33))))),(42,(25,(44,(41,(((34,(3,62)),((68,((60,(24,72)),(59,(40,(54,(30,32)))))),(46,50))),(14,(53,(37,(47,48)))))))))),((29,(11,(5,66))),(67,(26,(21,(10,20)))))))))))));
	TREE * ambiguous = [&R] (1,(6,(63,(56,(55,((((29,((((31,((12,((13,(2,36)),(45,61))),(38,58))),((64,(75,(9,(39,(73,(49,(65,((((19,(4,17)),(16,52)),(71,((15,23),(35,51)))),(28,69))))))))),(18,(7,57)))),(70,(22,(27,(33,74))))),(42,(25,(44,(41,(((34,(3,62)),((68,((59,(60,(24,72))),(40,(54,(30,32))))),(46,50))),(14,(53,(37,(47,48))))))))))),(11,(5,66))),(67,(26,(21,(10,20))))),(8,43)))))));
	TREE * ambiguous = [&R] (1,(55,((8,(43,((29,((((((31,((12,((13,(2,36)),(45,61))),(38,58))),(75,(9,(39,((65,((((19,(4,17)),(16,52)),(71,((15,23),(35,51)))),(28,69))),(49,73)))))),(64,(18,(7,57)))),(70,(22,(27,(33,74))))),(42,(25,(44,(((34,(3,62)),((68,((59,(60,(24,72))),(40,(54,(30,32))))),(46,50))),(14,(53,(41,(37,(47,48)))))))))),(11,(5,66)))),(67,(26,(21,(10,20))))))),(56,(6,63)))));
	TREE * ambiguous = [&R] (1,(55,((56,(8,(43,(((22,((((12,((13,(2,36)),(45,61))),(31,((75,(9,(39,(73,(49,(65,((((19,(4,17)),(16,52)),(71,((15,23),(35,51)))),(28,69)))))))),(64,(18,(7,57)))))),(38,58)),(70,(27,(33,74))))),(42,(25,(44,(41,(((34,(3,62)),((68,((60,(24,72)),(59,(40,(54,(30,32)))))),(46,50))),(14,(53,(37,(47,48)))))))))),((29,(11,(5,66))),(67,(26,(21,(10,20))))))))),(6,63))));
	TREE * ambiguous = [&R] (1,(55,(((((29,(((((31,((12,((13,(2,36)),(45,61))),(38,58))),(75,(9,(39,(73,(49,(65,((((19,(4,17)),(16,52)),(71,((15,23),(35,51)))),(28,69))))))))),(64,(18,(7,57)))),(70,(22,(27,(33,74))))),(42,(25,(44,(41,(((34,(3,62)),((68,((60,(24,72)),(59,(40,(54,(30,32)))))),(46,50))),(14,(53,(37,(47,48))))))))))),(11,(5,66))),(67,(26,(21,(10,20))))),(8,43)),(56,(6,63)))));
	TREE * ambiguous = [&R] (1,(55,((8,(43,(((29,((((31,((12,((13,(2,36)),(45,61))),(38,58))),((64,(75,(9,(39,((65,((((19,(4,17)),(16,52)),(71,((15,23),(35,51)))),(28,69))),(49,73)))))),(18,(7,57)))),(70,(22,(27,(33,74))))),(42,(25,(44,(41,(((34,(3,62)),((68,((60,(24,72)),(59,(40,(54,(30,32)))))),(46,50))),(14,(53,(37,(47,48))))))))))),(11,(5,66))),(67,(26,(21,(10,20))))))),(56,(6,63)))));
	TREE * ambiguous = [&R] (1,(55,((56,((((29,((((31,((12,((13,(2,36)),(45,61))),(38,58))),((64,(75,(9,(39,(73,(49,(65,((((19,(4,17)),(16,52)),(71,((15,23),(35,51)))),(28,69))))))))),(18,(7,57)))),(70,(22,(27,(33,74))))),(42,(25,(44,(41,(((34,(3,62)),((68,((60,(24,72)),(59,(40,(54,(30,32)))))),(46,50))),(14,(53,(37,(47,48))))))))))),(11,(5,66))),(67,(26,(21,(10,20))))),(8,43))),(6,63))));
	TREE * ambiguous = [&R] (1,(55,((8,(43,(((29,(((((31,((12,((13,(2,36)),(45,61))),(38,58))),(75,(9,(39,((65,((((19,(4,17)),(16,52)),(71,((15,23),(35,51)))),(28,69))),(49,73)))))),(64,(18,(7,57)))),(70,(22,(27,(33,74))))),(42,(25,(44,(((34,(3,62)),((68,((59,(60,(24,72))),(40,(54,(30,32))))),(46,50))),(14,(41,(53,(37,(47,48))))))))))),(11,(5,66))),(67,(26,(21,(10,20))))))),(56,(6,63)))));
	TREE * ambiguous = [&R] (1,(6,(63,(55,(56,(8,(43,((29,((((((31,((12,((13,(2,36)),(45,61))),(38,58))),(75,(9,(39,((65,((((19,(4,17)),(16,52)),(71,((15,23),(35,51)))),(28,69))),(49,73)))))),(64,(18,(7,57)))),(70,(22,(27,(33,74))))),(42,(25,(44,(((34,(3,62)),((68,((59,(60,(24,72))),(40,(54,(30,32))))),(46,50))),(14,((37,(47,48)),(41,53)))))))),(11,(5,66)))),(67,(26,(21,(10,20))))))))))));
	TREE * ambiguous = [&R] (1,(6,(63,(56,(55,(8,(43,(((22,((((12,((13,(2,36)),(45,61))),(31,((75,(9,(39,((65,((((19,(4,17)),(16,52)),(71,((15,23),(35,51)))),(28,69))),(49,73))))),(64,(18,(7,57)))))),(38,58)),(70,(74,(27,33))))),(42,(25,(44,(41,(((34,(3,62)),((68,((60,(24,72)),(59,(40,(54,(30,32)))))),(46,50))),(14,(53,(37,(47,48)))))))))),((29,(11,(5,66))),(67,(26,(21,(10,20)))))))))))));
	TREE * ambiguous = [&R] (1,(6,(63,(56,(55,(8,(43,(((29,((((31,((12,((13,(2,36)),(45,61))),(38,58))),((64,(75,(9,(39,((65,((((19,(4,17)),(16,52)),(71,((15,23),(35,51)))),(28,69))),(49,73)))))),(18,(7,57)))),(70,(22,(27,(33,74))))),(42,(25,(44,(41,(((34,(3,62)),((68,((60,(24,72)),(59,(40,(54,(30,32)))))),(46,50))),(14,(53,(37,(47,48))))))))))),(11,(5,66))),(67,(26,(21,(10,20))))))))))));
	TREE * ambiguous = [&R] (1,(6,(63,(56,(55,(8,(43,(((29,(((((31,((12,((13,(2,36)),(45,61))),(38,58))),(75,(9,(39,(73,(49,(65,((((19,(4,17)),(16,52)),(71,((15,23),(35,51)))),(28,69))))))))),(64,(18,(7,57)))),(70,(22,(27,(33,74))))),(42,(25,(44,(((34,(3,62)),((68,((60,(24,72)),(59,(40,(54,(30,32)))))),(46,50))),(14,(41,(53,(37,(47,48))))))))))),(11,(5,66))),(67,(26,(21,(10,20))))))))))));
	TREE * ambiguous = [&R] (1,(6,(63,(56,(55,(8,(43,(((29,(((((31,((12,((13,(2,36)),(45,61))),(38,58))),(75,(9,(39,((65,((((19,(4,17)),(16,52)),(71,((15,23),(35,51)))),(28,69))),(49,73)))))),(64,(18,(7,57)))),(70,(22,(27,(33,74))))),(42,(25,(44,(((34,(3,62)),((68,((59,(60,(24,72))),(40,(54,(30,32))))),(46,50))),((14,41),(53,(37,(47,48)))))))))),(11,(5,66))),(67,(26,(21,(10,20))))))))))));
	TREE * extraState = [&R] (1,(55,((22,(27,(70,(((2,(36,(13,(61,(12,45))))),((49,(65,((((19,(4,17)),(16,52)),(71,((15,23),(35,51)))),(28,69)))),(9,39))),((73,((75,(64,(18,(7,57)))),(31,(38,58)))),(33,74)))))),((((21,((67,(29,(42,(25,(((34,(3,62)),(14,(44,(41,(53,(37,(47,48))))))),((24,((40,(54,(30,32))),(59,(68,(60,72))))),(46,50))))))),(26,(10,20)))),(11,(5,66))),(8,43)),(56,(6,63))))));
	TREE * extraState = [&R] (1,(55,((22,(27,(70,(((2,(36,(13,(61,(12,45))))),((65,((((19,(4,17)),(16,52)),(71,((15,23),(35,51)))),(28,69))),(49,73))),((39,(((64,(18,(7,57))),(31,(38,58))),(9,75))),(33,74)))))),((((21,((29,(42,((25,((34,(3,62)),(14,(53,((37,(47,48)),(41,44)))))),((24,((40,(54,(30,32))),(68,(59,(60,72))))),(46,50))))),(67,(26,(10,20))))),(11,(5,66))),(8,43)),(56,(6,63))))));
	TREE * extraState = [&R] (1,(55,((27,(22,(70,(((2,(36,(13,(45,(12,61))))),((65,((((19,(4,17)),(16,52)),(71,((15,23),(35,51)))),(28,69))),(49,(9,39)))),((73,((64,(18,(7,57))),(75,(31,(38,58))))),(33,74)))))),((((21,((29,(42,(((34,(3,62)),(44,(25,(14,((37,(47,48)),(41,53)))))),((24,((40,(54,(30,32))),(68,(59,(60,72))))),(46,50))))),(67,(26,(10,20))))),(11,(5,66))),(8,43)),(56,(6,63))))));
	TREE * extraState = [&R] (1,(55,((22,(27,(70,(((2,(36,(13,(12,(45,61))))),((65,((((19,(4,17)),(16,52)),(71,((15,23),(35,51)))),(28,69))),(49,(9,39)))),((73,((64,(18,(7,57))),(75,(31,(38,58))))),(33,74)))))),((((21,((29,(42,(25,(((34,(3,62)),(14,(53,(44,(41,(37,(47,48))))))),((24,((40,(54,(30,32))),(59,(68,(60,72))))),(46,50)))))),(67,(26,(10,20))))),(11,(5,66))),(8,43)),(56,(6,63))))));
	TREE * extraState = [&R] (1,(55,(((70,(((2,(36,(13,(61,(12,45))))),(39,(65,((((19,(4,17)),(16,52)),(71,((15,23),(35,51)))),(28,69))))),(((((64,(18,(7,57))),(31,(38,58))),(9,75)),(49,73)),(33,74)))),(22,27)),((((21,((67,(29,(42,((25,((34,(3,62)),(14,(53,((37,(47,48)),(41,44)))))),((24,((40,(54,(30,32))),(59,(68,(60,72))))),(46,50)))))),(26,(10,20)))),(11,(5,66))),(8,43)),(56,(6,63))))));
	TREE * extraState = [&R] (1,(55,(((70,(((2,(36,(13,(61,(12,45))))),(39,(65,((((19,(4,17)),(16,52)),(71,((15,23),(35,51)))),(28,69))))),(74,(33,((((64,(18,(7,57))),(31,(38,58))),(9,75)),(49,73)))))),(22,27)),((((21,((29,(42,(25,(((34,(3,62)),(14,((44,(37,(47,48))),(41,53)))),((24,((40,(54,(30,32))),(68,(59,(60,72))))),(46,50)))))),(67,(26,(10,20))))),(11,(5,66))),(8,43)),(56,(6,63))))));
	TREE * extraState = [&R] (1,(55,((27,(22,(70,(((2,(36,(13,(12,(45,61))))),((65,((((19,(4,17)),(16,52)),(71,((15,23),(35,51)))),(28,69))),(49,(9,39)))),(74,(33,(73,(75,((64,(18,(7,57))),(31,(38,58))))))))))),((((21,((29,(42,(((34,(3,62)),(25,(14,((37,(47,48)),(53,(41,44)))))),((24,((40,(54,(30,32))),(68,(59,(60,72))))),(46,50))))),(67,(26,(10,20))))),(11,(5,66))),(8,43)),(56,(6,63))))));
	TREE * extraState = [&R] (1,(55,((22,(27,(70,(((2,(36,(13,(45,(12,61))))),((65,((((19,(4,17)),(16,52)),(71,((15,23),(35,51)))),(28,69))),(49,73))),((39,(9,(75,((64,(18,(7,57))),(31,(38,58)))))),(33,74)))))),((((21,((67,(29,(42,(25,(((34,(3,62)),(14,((44,(37,(47,48))),(41,53)))),((24,((40,(54,(30,32))),(68,(59,(60,72))))),(46,50))))))),(26,(10,20)))),(11,(5,66))),(8,43)),(56,(6,63))))));
	TREE * extraState = [&R] (1,(55,((22,(27,(70,(((2,(36,(13,(61,(12,45))))),(39,(65,((((19,(4,17)),(16,52)),(71,((15,23),(35,51)))),(28,69))))),(((((64,(18,(7,57))),(31,(38,58))),(9,75)),(49,73)),(33,74)))))),((((21,((29,(42,((25,((34,(3,62)),(14,(53,((37,(47,48)),(41,44)))))),((24,((40,(54,(30,32))),(59,(68,(60,72))))),(46,50))))),(67,(26,(10,20))))),(11,(5,66))),(8,43)),(56,(6,63))))));
	TREE * extraState = [&R] (1,(55,((27,(22,(70,(((2,(36,(13,(12,(45,61))))),(39,(65,((((19,(4,17)),(16,52)),(71,((15,23),(35,51)))),(28,69))))),(74,(33,((((64,(18,(7,57))),(31,(38,58))),(9,75)),(49,73)))))))),((((21,((29,(42,((25,((34,(3,62)),(14,(44,(41,(53,(37,(47,48)))))))),((24,((40,(54,(30,32))),(59,(68,(60,72))))),(46,50))))),(67,(26,(10,20))))),(11,(5,66))),(8,43)),(56,(6,63))))));
	TREE * extraState = [&R] (1,(55,(((70,(((2,(36,(13,(61,(12,45))))),((65,((((19,(4,17)),(16,52)),(71,((15,23),(35,51)))),(28,69))),(49,(9,39)))),(74,(33,(73,((64,(18,(7,57))),(75,(31,(38,58))))))))),(22,27)),((((21,((29,(42,((25,((34,(3,62)),(14,((41,(37,(47,48))),(44,53))))),((24,((40,(54,(30,32))),(68,(59,(60,72))))),(46,50))))),(67,(26,(10,20))))),(11,(5,66))),(8,43)),(56,(6,63))))));
	TREE * extraState = [&R] (1,(55,((27,(22,(70,(((2,(36,(13,(45,(12,61))))),((65,((((19,(4,17)),(16,52)),(71,((15,23),(35,51)))),(28,69))),(49,(9,39)))),((73,((75,(64,(18,(7,57)))),(31,(38,58)))),(33,74)))))),((((21,((29,(42,((44,(25,((34,(3,62)),((14,41),(53,(37,(47,48))))))),((24,((40,(54,(30,32))),(59,(68,(60,72))))),(46,50))))),(67,(26,(10,20))))),(11,(5,66))),(8,43)),(56,(6,63))))));
	TREE * extraState = [&R] (1,(55,((27,(22,(70,(((2,(36,(13,(12,(45,61))))),((65,((((19,(4,17)),(16,52)),(71,((15,23),(35,51)))),(28,69))),(49,73))),((39,(((64,(18,(7,57))),(31,(38,58))),(9,75))),(33,74)))))),((((21,((29,(42,(25,(((34,(3,62)),(14,((37,(47,48)),(53,(41,44))))),((24,((40,(54,(30,32))),(59,(68,(60,72))))),(46,50)))))),(67,(26,(10,20))))),(11,(5,66))),(8,43)),(56,(6,63))))));
	TREE * extraState = [&R] (1,(55,((22,(27,(70,(((2,(36,(13,(12,(45,61))))),((65,((((19,(4,17)),(16,52)),(71,((15,23),(35,51)))),(28,69))),(49,(9,39)))),(74,(33,(73,(75,((64,(18,(7,57))),(31,(38,58))))))))))),((((21,((67,(29,(42,((25,(44,((34,(3,62)),(14,(41,(53,(37,(47,48)))))))),((24,((40,(54,(30,32))),(59,(68,(60,72))))),(46,50)))))),(26,(10,20)))),(11,(5,66))),(8,43)),(56,(6,63))))));
	TREE * extraState = [&R] (1,(55,((22,(27,(70,(((2,(36,(13,(12,(45,61))))),((65,((((19,(4,17)),(16,52)),(71,((15,23),(35,51)))),(28,69))),(49,(9,39)))),(74,(33,(73,(75,((64,(18,(7,57))),(31,(38,58))))))))))),((((21,((29,(42,((44,(25,((34,(3,62)),(41,(14,(53,(37,(47,48)))))))),((24,((40,(54,(30,32))),(59,(68,(60,72))))),(46,50))))),(67,(26,(10,20))))),(11,(5,66))),(8,43)),(56,(6,63))))));
	TREE * extraState = [&R] (1,(55,(((70,(((2,(36,(13,(45,(12,61))))),(39,(65,((((19,(4,17)),(16,52)),(71,((15,23),(35,51)))),(28,69))))),(((((64,(18,(7,57))),(31,(38,58))),(9,75)),(49,73)),(33,74)))),(22,27)),((((21,((67,(29,(42,(25,(((34,(3,62)),(14,(41,(44,(53,(37,(47,48))))))),((24,((40,(54,(30,32))),(68,(59,(60,72))))),(46,50))))))),(26,(10,20)))),(11,(5,66))),(8,43)),(56,(6,63))))));
	TREE * extraState = [&R] (1,(55,((27,(22,(70,(((2,(36,(13,(61,(12,45))))),((49,(65,((((19,(4,17)),(16,52)),(71,((15,23),(35,51)))),(28,69)))),(9,39))),(74,(33,(73,((75,(64,(18,(7,57)))),(31,(38,58)))))))))),((((21,((67,(29,(42,((25,((34,(3,62)),(14,(44,(41,(53,(37,(47,48)))))))),((24,((40,(54,(30,32))),(59,(68,(60,72))))),(46,50)))))),(26,(10,20)))),(11,(5,66))),(8,43)),(56,(6,63))))));
	TREE * extraState = [&R] (1,(55,((27,(22,(70,(((2,(36,(13,(45,(12,61))))),((65,((((19,(4,17)),(16,52)),(71,((15,23),(35,51)))),(28,69))),(49,(9,39)))),(74,(33,(73,((75,(64,(18,(7,57)))),(31,(38,58)))))))))),((((21,((29,(42,(((34,(3,62)),(25,(14,((37,(47,48)),(53,(41,44)))))),((24,((40,(54,(30,32))),(59,(68,(60,72))))),(46,50))))),(67,(26,(10,20))))),(11,(5,66))),(8,43)),(56,(6,63))))));
	TREE * extraState = [&R] (1,(55,(((70,(((2,(36,(13,(45,(12,61))))),((65,((((19,(4,17)),(16,52)),(71,((15,23),(35,51)))),(28,69))),(49,73))),((39,(9,((75,(64,(18,(7,57)))),(31,(38,58))))),(33,74)))),(22,27)),((((21,((29,(42,(((34,(3,62)),(25,(14,((37,(47,48)),(44,(41,53)))))),((24,((40,(54,(30,32))),(68,(59,(60,72))))),(46,50))))),(67,(26,(10,20))))),(11,(5,66))),(8,43)),(56,(6,63))))));
	TREE * extraState = [&R] (1,(55,((27,(22,(70,(((2,(36,(13,(12,(45,61))))),((49,(65,((((19,(4,17)),(16,52)),(71,((15,23),(35,51)))),(28,69)))),(9,39))),((73,((75,(64,(18,(7,57)))),(31,(38,58)))),(33,74)))))),((((21,((29,(42,(25,(((34,(3,62)),(14,(41,(53,(44,(37,(47,48))))))),((24,((40,(54,(30,32))),(68,(59,(60,72))))),(46,50)))))),(67,(26,(10,20))))),(11,(5,66))),(8,43)),(56,(6,63))))));
	TREE * extraState = [&R] (1,(55,(((70,(((2,(36,(13,(45,(12,61))))),((49,(65,((((19,(4,17)),(16,52)),(71,((15,23),(35,51)))),(28,69)))),(9,39))),((73,((75,(64,(18,(7,57)))),(31,(38,58)))),(33,74)))),(22,27)),((((21,((29,(42,(25,(((34,(3,62)),(14,(44,((37,(47,48)),(41,53))))),((24,((40,(54,(30,32))),(59,(68,(60,72))))),(46,50)))))),(67,(26,(10,20))))),(11,(5,66))),(8,43)),(56,(6,63))))));
	TREE * extraState = [&R] (1,(55,(((70,(((2,(36,(13,(45,(12,61))))),((65,((((19,(4,17)),(16,52)),(71,((15,23),(35,51)))),(28,69))),(49,73))),((39,(((64,(18,(7,57))),(31,(38,58))),(9,75))),(33,74)))),(22,27)),((((21,((67,(29,(42,(25,(((34,(3,62)),(14,(41,(44,(53,(37,(47,48))))))),((24,((40,(54,(30,32))),(68,(59,(60,72))))),(46,50))))))),(26,(10,20)))),(11,(5,66))),(8,43)),(56,(6,63))))));
	TREE * extraState = [&R] (1,(55,(((70,(((2,(36,(13,(45,(12,61))))),(39,(65,((((19,(4,17)),(16,52)),(71,((15,23),(35,51)))),(28,69))))),(((((64,(18,(7,57))),(31,(38,58))),(9,75)),(49,73)),(33,74)))),(22,27)),((((21,((29,(42,(25,(((34,(3,62)),(14,(44,(41,(53,(37,(47,48))))))),((24,((40,(54,(30,32))),(59,(68,(60,72))))),(46,50)))))),(67,(26,(10,20))))),(11,(5,66))),(8,43)),(56,(6,63))))));
	TREE * extraState = [&R] (1,(55,((27,(22,(70,(((2,(36,(13,(45,(12,61))))),((49,(65,((((19,(4,17)),(16,52)),(71,((15,23),(35,51)))),(28,69)))),(9,39))),(74,(33,(73,(75,((64,(18,(7,57))),(31,(38,58))))))))))),((((21,((29,(42,((25,(44,((34,(3,62)),(14,((37,(47,48)),(41,53)))))),((24,((40,(54,(30,32))),(59,(68,(60,72))))),(46,50))))),(67,(26,(10,20))))),(11,(5,66))),(8,43)),(56,(6,63))))));
	TREE * extraState = [&R] (1,(55,(((70,(((2,(36,(13,(45,(12,61))))),((65,((((19,(4,17)),(16,52)),(71,((15,23),(35,51)))),(28,69))),(49,73))),((39,(9,(75,((64,(18,(7,57))),(31,(38,58)))))),(33,74)))),(22,27)),((((21,((67,(29,(42,((((34,(3,62)),(14,((37,(47,48)),(41,53)))),(25,44)),((24,((40,(54,(30,32))),(68,(59,(60,72))))),(46,50)))))),(26,(10,20)))),(11,(5,66))),(8,43)),(56,(6,63))))));
	TREE * extraState = [&R] (1,(55,(((70,(((2,(36,(13,(45,(12,61))))),((65,((((19,(4,17)),(16,52)),(71,((15,23),(35,51)))),(28,69))),(49,(9,39)))),(74,(33,(73,((64,(18,(7,57))),(75,(31,(38,58))))))))),(22,27)),((((21,((29,(42,((25,(44,((34,(3,62)),(14,((37,(47,48)),(41,53)))))),((24,((40,(54,(30,32))),(68,(59,(60,72))))),(46,50))))),(67,(26,(10,20))))),(11,(5,66))),(8,43)),(56,(6,63))))));
	TREE * extraState = [&R] (1,(55,((22,(27,(70,(((2,(36,(13,(61,(12,45))))),((65,((((19,(4,17)),(16,52)),(71,((15,23),(35,51)))),(28,69))),(49,73))),((39,(((64,(18,(7,57))),(31,(38,58))),(9,75))),(33,74)))))),((((21,((29,(42,((44,(25,((34,(3,62)),(14,(41,(53,(37,(47,48)))))))),((24,((40,(54,(30,32))),(68,(59,(60,72))))),(46,50))))),(67,(26,(10,20))))),(11,(5,66))),(8,43)),(56,(6,63))))));
	TREE * extraState = [&R] (1,(55,((22,(27,(70,(((2,(36,(13,(61,(12,45))))),((49,(65,((((19,(4,17)),(16,52)),(71,((15,23),(35,51)))),(28,69)))),(9,39))),((73,(75,((64,(18,(7,57))),(31,(38,58))))),(33,74)))))),((((21,((29,(42,((25,(44,((34,(3,62)),(41,(14,(53,(37,(47,48)))))))),((24,((40,(54,(30,32))),(68,(59,(60,72))))),(46,50))))),(67,(26,(10,20))))),(11,(5,66))),(8,43)),(56,(6,63))))));
	TREE * extraState = [&R] (1,(55,((27,(22,(70,(((2,(36,(13,(12,(45,61))))),((65,((((19,(4,17)),(16,52)),(71,((15,23),(35,51)))),(28,69))),(49,73))),((39,(9,((64,(18,(7,57))),(75,(31,(38,58)))))),(33,74)))))),((((21,((67,(29,(42,((25,((34,(3,62)),(14,(41,((37,(47,48)),(44,53)))))),((24,((40,(54,(30,32))),(68,(59,(60,72))))),(46,50)))))),(26,(10,20)))),(11,(5,66))),(8,43)),(56,(6,63))))));
	TREE * extraState = [&R] (1,(55,((27,(22,(70,(((2,(36,(13,(12,(45,61))))),((49,(65,((((19,(4,17)),(16,52)),(71,((15,23),(35,51)))),(28,69)))),(9,39))),(74,(33,(73,(75,((64,(18,(7,57))),(31,(38,58))))))))))),((((21,((67,(29,(42,((((34,(3,62)),(41,(14,(53,(37,(47,48)))))),(25,44)),((24,((40,(54,(30,32))),(68,(59,(60,72))))),(46,50)))))),(26,(10,20)))),(11,(5,66))),(8,43)),(56,(6,63))))));
	TREE * extraState = [&R] (1,(55,((22,(27,(70,(((2,(36,(13,(61,(12,45))))),((49,(65,((((19,(4,17)),(16,52)),(71,((15,23),(35,51)))),(28,69)))),(9,39))),(74,(33,(73,((75,(64,(18,(7,57)))),(31,(38,58)))))))))),((((21,((29,(42,((25,(44,((34,(3,62)),(41,(14,(53,(37,(47,48)))))))),((24,((40,(54,(30,32))),(59,(68,(60,72))))),(46,50))))),(67,(26,(10,20))))),(11,(5,66))),(8,43)),(56,(6,63))))));
	TREE * extraState = [&R] (1,(55,((22,(27,(70,(((2,(36,(13,(45,(12,61))))),((65,((((19,(4,17)),(16,52)),(71,((15,23),(35,51)))),(28,69))),(49,73))),((39,(9,((64,(18,(7,57))),(75,(31,(38,58)))))),(33,74)))))),((((21,((29,(42,(25,(((34,(3,62)),(14,((37,(47,48)),(44,(41,53))))),((24,((40,(54,(30,32))),(68,(59,(60,72))))),(46,50)))))),(67,(26,(10,20))))),(11,(5,66))),(8,43)),(56,(6,63))))));
	TREE * extraState = [&R] (1,(55,((27,(22,(70,(((2,(36,(13,(61,(12,45))))),((65,((((19,(4,17)),(16,52)),(71,((15,23),(35,51)))),(28,69))),(49,73))),((39,(9,((64,(18,(7,57))),(75,(31,(38,58)))))),(33,74)))))),((((21,((29,(42,((44,(25,((34,(3,62)),(14,(53,(41,(37,(47,48)))))))),((24,((40,(54,(30,32))),(68,(59,(60,72))))),(46,50))))),(67,(26,(10,20))))),(11,(5,66))),(8,43)),(56,(6,63))))));
	TREE * extraState = [&R] (1,(55,(((70,(((2,(36,(13,(61,(12,45))))),((49,(65,((((19,(4,17)),(16,52)),(71,((15,23),(35,51)))),(28,69)))),(9,39))),((73,((75,(64,(18,(7,57)))),(31,(38,58)))),(33,74)))),(22,27)),((((21,((29,(42,((((34,(3,62)),(14,(41,(53,(37,(47,48)))))),(25,44)),((24,((40,(54,(30,32))),(59,(68,(60,72))))),(46,50))))),(67,(26,(10,20))))),(11,(5,66))),(8,43)),(56,(6,63))))));
	TREE * extraState = [&R] (1,(55,(((70,(((2,(36,(13,(61,(12,45))))),((65,((((19,(4,17)),(16,52)),(71,((15,23),(35,51)))),(28,69))),(49,(9,39)))),((73,(75,((64,(18,(7,57))),(31,(38,58))))),(33,74)))),(22,27)),((((21,((67,(29,(42,((25,((34,(3,62)),(14,((37,(47,48)),(53,(41,44)))))),((24,((40,(54,(30,32))),(68,(59,(60,72))))),(46,50)))))),(26,(10,20)))),(11,(5,66))),(8,43)),(56,(6,63))))));
	TREE * extraState = [&R] (1,(55,((27,(22,(70,(((2,(36,(13,(12,(45,61))))),(39,(65,((((19,(4,17)),(16,52)),(71,((15,23),(35,51)))),(28,69))))),(((((64,(18,(7,57))),(31,(38,58))),(9,75)),(49,73)),(33,74)))))),((((21,((67,(29,(42,(25,(((34,(3,62)),(14,(44,(53,(41,(37,(47,48))))))),((24,((40,(54,(30,32))),(59,(68,(60,72))))),(46,50))))))),(26,(10,20)))),(11,(5,66))),(8,43)),(56,(6,63))))));
	TREE * extraState = [&R] (1,(55,(((70,(((2,(36,(13,(61,(12,45))))),((65,((((19,(4,17)),(16,52)),(71,((15,23),(35,51)))),(28,69))),(49,73))),((39,(9,((64,(18,(7,57))),(75,(31,(38,58)))))),(33,74)))),(22,27)),((((21,((29,(42,((25,((34,(3,62)),(14,(53,(41,(44,(37,(47,48)))))))),((24,((40,(54,(30,32))),(68,(59,(60,72))))),(46,50))))),(67,(26,(10,20))))),(11,(5,66))),(8,43)),(56,(6,63))))));
	TREE * extraState = [&R] (1,(55,((22,(27,(70,(((2,(36,(13,(45,(12,61))))),((65,((((19,(4,17)),(16,52)),(71,((15,23),(35,51)))),(28,69))),(49,(9,39)))),((73,((75,(64,(18,(7,57)))),(31,(38,58)))),(33,74)))))),((((21,((67,(29,(42,((((34,(3,62)),(14,(41,(53,(37,(47,48)))))),(25,44)),((24,((40,(54,(30,32))),(68,(59,(60,72))))),(46,50)))))),(26,(10,20)))),(11,(5,66))),(8,43)),(56,(6,63))))));
	TREE * extraState = [&R] (1,(55,((27,(22,(70,(((2,(36,(13,(45,(12,61))))),((65,((((19,(4,17)),(16,52)),(71,((15,23),(35,51)))),(28,69))),(49,(9,39)))),(74,(33,(73,((75,(64,(18,(7,57)))),(31,(38,58)))))))))),((((21,((67,(29,(42,(25,(((34,(3,62)),(14,(41,(44,(53,(37,(47,48))))))),((24,((40,(54,(30,32))),(59,(68,(60,72))))),(46,50))))))),(26,(10,20)))),(11,(5,66))),(8,43)),(56,(6,63))))));
	TREE * extraState = [&R] (1,(55,((22,(27,(70,(((2,(36,(13,(61,(12,45))))),((49,(65,((((19,(4,17)),(16,52)),(71,((15,23),(35,51)))),(28,69)))),(9,39))),((73,(75,((64,(18,(7,57))),(31,(38,58))))),(33,74)))))),((((21,((67,(29,(42,((25,(44,((34,(3,62)),(14,(41,(53,(37,(47,48)))))))),((24,((40,(54,(30,32))),(68,(59,(60,72))))),(46,50)))))),(26,(10,20)))),(11,(5,66))),(8,43)),(56,(6,63))))));
	TREE * extraState = [&R] (1,(55,((22,(27,(70,(((2,(36,(13,(45,(12,61))))),((65,((((19,(4,17)),(16,52)),(71,((15,23),(35,51)))),(28,69))),(49,73))),((39,(((64,(18,(7,57))),(31,(38,58))),(9,75))),(33,74)))))),((((21,((29,(42,(25,(((34,(3,62)),(14,(44,(41,(53,(37,(47,48))))))),((24,((40,(54,(30,32))),(68,(59,(60,72))))),(46,50)))))),(67,(26,(10,20))))),(11,(5,66))),(8,43)),(56,(6,63))))));
	TREE * extraState = [&R] (1,(55,((27,(22,(70,(((2,(36,(13,(12,(45,61))))),((65,((((19,(4,17)),(16,52)),(71,((15,23),(35,51)))),(28,69))),(49,73))),((39,(9,((75,(64,(18,(7,57)))),(31,(38,58))))),(33,74)))))),((((21,((67,(29,(42,((25,((34,(3,62)),(14,(44,(41,(53,(37,(47,48)))))))),((24,((40,(54,(30,32))),(59,(68,(60,72))))),(46,50)))))),(26,(10,20)))),(11,(5,66))),(8,43)),(56,(6,63))))));
	TREE * extraState = [&R] (1,(55,((22,(27,(70,(((2,(36,(13,(61,(12,45))))),((65,((((19,(4,17)),(16,52)),(71,((15,23),(35,51)))),(28,69))),(49,73))),((39,(((64,(18,(7,57))),(31,(38,58))),(9,75))),(33,74)))))),((((21,((67,(29,(42,(25,(((34,(3,62)),(14,(44,(41,(53,(37,(47,48))))))),((24,((40,(54,(30,32))),(59,(68,(60,72))))),(46,50))))))),(26,(10,20)))),(11,(5,66))),(8,43)),(56,(6,63))))));
	TREE * extraState = [&R] (1,(55,((27,(22,(70,(((2,(36,(13,(45,(12,61))))),((49,(65,((((19,(4,17)),(16,52)),(71,((15,23),(35,51)))),(28,69)))),(9,39))),(74,(33,(73,((75,(64,(18,(7,57)))),(31,(38,58)))))))))),((((21,((29,(42,((25,((34,(3,62)),(14,(44,((37,(47,48)),(41,53)))))),((24,((40,(54,(30,32))),(59,(68,(60,72))))),(46,50))))),(67,(26,(10,20))))),(11,(5,66))),(8,43)),(56,(6,63))))));
	TREE * extraState = [&R] (1,(55,(((70,(((2,(36,(13,(12,(45,61))))),((65,((((19,(4,17)),(16,52)),(71,((15,23),(35,51)))),(28,69))),(49,(9,39)))),((73,((64,(18,(7,57))),(75,(31,(38,58))))),(33,74)))),(22,27)),((((21,((29,(42,(25,(((34,(3,62)),(14,(44,(41,(53,(37,(47,48))))))),((24,((40,(54,(30,32))),(68,(59,(60,72))))),(46,50)))))),(67,(26,(10,20))))),(11,(5,66))),(8,43)),(56,(6,63))))));
	TREE * extraState = [&R] (1,(55,(((70,(((2,(36,(13,(12,(45,61))))),((65,((((19,(4,17)),(16,52)),(71,((15,23),(35,51)))),(28,69))),(49,(9,39)))),(74,(33,(73,(75,((64,(18,(7,57))),(31,(38,58))))))))),(22,27)),((((21,((67,(29,(42,(((34,(3,62)),(25,(14,((37,(47,48)),(53,(41,44)))))),((24,((40,(54,(30,32))),(59,(68,(60,72))))),(46,50)))))),(26,(10,20)))),(11,(5,66))),(8,43)),(56,(6,63))))));
	TREE * extraState = [&R] (1,(55,((22,(27,(70,(((2,(36,(13,(12,(45,61))))),(39,(65,((((19,(4,17)),(16,52)),(71,((15,23),(35,51)))),(28,69))))),(((((64,(18,(7,57))),(31,(38,58))),(9,75)),(49,73)),(33,74)))))),((((21,((29,(42,(((34,(3,62)),(25,(14,((37,(47,48)),(41,(44,53)))))),((24,((40,(54,(30,32))),(59,(68,(60,72))))),(46,50))))),(67,(26,(10,20))))),(11,(5,66))),(8,43)),(56,(6,63))))));
	TREE * extraState = [&R] (1,(55,((22,(27,(70,(((2,(36,(13,(45,(12,61))))),((65,((((19,(4,17)),(16,52)),(71,((15,23),(35,51)))),(28,69))),(49,(9,39)))),((73,((64,(18,(7,57))),(75,(31,(38,58))))),(33,74)))))),((((21,((67,(29,(42,(25,(((34,(3,62)),(14,(53,(41,(44,(37,(47,48))))))),((24,((40,(54,(30,32))),(59,(68,(60,72))))),(46,50))))))),(26,(10,20)))),(11,(5,66))),(8,43)),(56,(6,63))))));
	TREE * extraState = [&R] (1,(55,((27,(22,(70,(((2,(36,(13,(45,(12,61))))),((49,(65,((((19,(4,17)),(16,52)),(71,((15,23),(35,51)))),(28,69)))),(9,39))),(74,(33,(73,((64,(18,(7,57))),(75,(31,(38,58))))))))))),((((21,((29,(42,(25,(((34,(3,62)),(14,(44,((37,(47,48)),(41,53))))),((24,((40,(54,(30,32))),(59,(68,(60,72))))),(46,50)))))),(67,(26,(10,20))))),(11,(5,66))),(8,43)),(56,(6,63))))));
	TREE * extraState = [&R] (1,(55,((27,(22,(70,(((2,(36,(13,(12,(45,61))))),((65,((((19,(4,17)),(16,52)),(71,((15,23),(35,51)))),(28,69))),(49,73))),((39,(9,(75,((64,(18,(7,57))),(31,(38,58)))))),(33,74)))))),((((21,((29,(42,((25,((34,(3,62)),(14,(53,(44,(41,(37,(47,48)))))))),((24,((40,(54,(30,32))),(59,(68,(60,72))))),(46,50))))),(67,(26,(10,20))))),(11,(5,66))),(8,43)),(56,(6,63))))));
	TREE * inapplicable = [&R] (1,(55,((56,(6,63)),((8,43),((21,((67,((((27,33),(70,22)),((((57,(18,7)),((39,9),((49,(74,73)),(65,((69,28),(((52,16),(19,(4,17))),(71,((23,15),(35,51))))))))),(31,((12,((45,61),(13,(2,36)))),(58,38)))),(75,64))),(29,(42,(25,(44,(((41,14),(53,(37,(47,48)))),((34,(62,3)),((59,((68,(60,(24,72))),(40,(54,(30,32))))),(46,50)))))))))),(26,(20,10)))),(11,(5,66)))))));
	TREE * inapplicable = [&R] (1,(55,(((((67,(29,(42,(41,((34,(3,62)),((25,(14,((44,53),(37,(48,47))))),((24,((40,(54,(32,30))),(68,(59,(72,60))))),(50,46)))))))),((11,(5,66)),((70,(27,22)),(64,(((18,(7,57)),((75,(9,(65,(28,(69,(((71,((23,15),(51,35))),(19,(17,4))),(16,52))))))),(39,(33,(73,(74,49)))))),(31,((12,((13,(36,2)),(61,45))),(58,38)))))))),(21,(26,(10,20)))),(43,8)),(56,(6,63)))));
	TREE * inapplicable = [&R] (1,(55,(((43,8),(((67,(29,(42,(41,((34,(62,3)),((25,(14,((53,44),(37,(47,48))))),((46,50),(24,((40,(54,(32,30))),(68,(59,(72,60)))))))))))),(((70,(22,27)),((64,((18,(7,57)),((75,(9,(65,(69,(28,((((71,(15,23)),(35,51)),(19,(17,4))),(16,52))))))),((33,(73,49)),(39,74))))),(31,((58,38),(12,((61,45),(13,(36,2)))))))),(11,(66,5)))),(21,(10,(26,20))))),(56,(6,63)))));
	TREE * inapplicable = [&R] (1,(55,((56,(6,63)),(((21,((67,(26,(20,10))),((29,(42,(((41,(44,25)),(((24,((40,(54,(32,30))),(68,(59,(60,72))))),(46,50)),(14,(53,(37,(48,47)))))),(34,(62,3))))),((70,(22,27)),((64,((18,(7,57)),((75,(9,(65,(28,((69,(16,52)),((19,(4,17)),(71,((23,15),(51,35))))))))),(39,(33,(74,(49,73))))))),(31,((12,((61,45),(13,(2,36)))),(58,38)))))))),(11,(5,66))),(43,8)))));
	TREE * inapplicable = [&R] (1,(55,((56,(63,6)),((43,8),((21,((26,(20,10)),(67,((((27,33),(22,70)),(((31,((58,38),(12,((61,45),(13,(2,36)))))),((57,(7,18)),((39,9),((49,(74,73)),(65,((69,28),(((16,52),(19,(4,17))),((35,(15,23)),(71,51))))))))),(75,64))),(29,(42,(41,((34,(3,62)),(((50,46),(24,((59,(68,(60,72))),(40,(54,(30,32)))))),(25,(14,((44,53),(37,(47,48)))))))))))))),(11,(5,66)))))));
	TREE * inapplicable = [&R] (1,(55,(((43,8),((((((64,((18,(57,7)),((75,(9,(65,(28,((69,((19,(17,4)),((71,(15,23)),(51,35)))),(52,16)))))),((39,74),(33,(73,49)))))),(31,((12,((61,45),(13,(2,36)))),(38,58)))),(70,(27,22))),(11,(66,5))),(67,(29,(42,(41,((34,(62,3)),((25,(14,((37,(48,47)),(53,44)))),((50,46),(24,((40,(54,(30,32))),(68,(59,(72,60))))))))))))),(21,(26,(20,10))))),(56,(63,6)))));
	TREE * inapplicable = [&R] (1,(55,((56,(63,6)),((8,43),((21,((67,((29,(42,(44,(41,(((25,(14,(53,(37,(48,47))))),((24,((40,(54,(32,30))),(68,(59,(72,60))))),(46,50))),(34,(62,3))))))),((64,((((75,(9,(65,((28,(69,(16,52))),((19,(4,17)),((71,(23,15)),(51,35))))))),((74,39),(33,(49,73)))),(18,(57,7))),(31,((12,((13,(2,36)),(45,61))),(58,38))))),(70,(22,27))))),(26,(20,10)))),(11,(5,66)))))));
	TREE * inapplicable = [&R] (1,(55,((((((66,(11,5)),((70,(22,27)),(64,(((18,(7,57)),((75,(9,(65,(((52,16),((19,(4,17)),((71,(15,23)),(35,51)))),(69,28))))),(39,(33,(74,(49,73)))))),(31,((12,((13,(2,36)),(45,61))),(38,58))))))),(67,(29,(42,(((((24,((40,(54,(30,32))),(59,(68,(60,72))))),(46,50)),(14,(53,(37,(47,48))))),(41,(25,44))),(34,(62,3))))))),(21,(26,(20,10)))),(8,43)),(56,(6,63)))));
	TREE * inapplicable = [&R] (1,(55,((56,(63,6)),((43,8),((11,(5,66)),(21,((67,(26,(20,10))),((29,(42,((25,(44,((34,(3,62)),((41,14),(53,(37,(47,48))))))),((50,46),(24,((59,(68,(60,72))),(40,(54,(32,30))))))))),(((22,70),(33,27)),((64,75),((31,(((12,(61,45)),(13,(36,2))),(38,58))),((57,(7,18)),(((65,((69,28),(((52,16),(19,(4,17))),((35,(23,15)),(71,51))))),(49,(74,73))),(9,39))))))))))))));
	TREE * inapplicable = [&R] (1,(55,((56,(63,6)),((43,8),((21,((67,(((70,(22,27)),(64,(((18,(57,7)),((75,(9,(65,(28,(69,((52,16),((19,(17,4)),(71,((23,15),(51,35)))))))))),(39,(33,(74,(73,49)))))),(31,((38,58),(12,((45,61),(13,(36,2))))))))),(29,(42,(44,(41,((34,(3,62)),(((24,((59,(68,(60,72))),(40,(54,(30,32))))),(50,46)),(25,(14,(53,(37,(48,47))))))))))))),(26,(20,10)))),(11,(5,66)))))));
	TREE * inapplicable = [&R] (1,(55,((((11,(66,5)),(21,((67,(26,(10,20))),((29,(42,(41,(((25,(14,((44,53),(37,(47,48))))),((24,((40,(54,(32,30))),(59,(68,(60,72))))),(46,50))),(34,(62,3)))))),((64,(((18,(57,7)),((75,(9,(65,((69,(28,(16,52))),(((71,(15,23)),(35,51)),(19,(4,17))))))),(39,(33,(73,(74,49)))))),(31,((12,((45,61),(13,(36,2)))),(58,38))))),(70,(27,22))))))),(43,8)),(56,(6,63)))));
	TREE * inapplicable = [&R] (1,(55,((56,(6,63)),((8,43),((11,(5,66)),(21,((67,((29,(42,(25,(44,((14,(53,(41,(37,(47,48))))),(((50,46),((59,(68,(60,(24,72)))),(40,(54,(32,30))))),(34,(3,62)))))))),((27,(22,70)),(((75,64),((57,(7,18)),(31,(38,58)))),((33,(9,(39,(49,(65,((28,69),(((52,16),(19,(4,17))),(71,((23,15),(51,35)))))))))),(73,(74,(12,((61,45),(13,(36,2))))))))))),(26,(20,10)))))))));
	TREE * inapplicable = [&R] (1,(55,((56,(63,6)),(((11,(5,66)),(21,((67,((29,(42,(25,(((14,((53,(44,41)),(37,(47,48)))),(34,(62,3))),((50,46),(24,((40,(54,(30,32))),(59,(68,(72,60)))))))))),(((33,27),(70,22)),((64,75),(((57,(7,18)),((9,39),((49,(74,73)),(65,((69,28),(((52,16),(19,(17,4))),((35,(15,23)),(51,71)))))))),(31,((12,((61,45),(13,(36,2)))),(38,58)))))))),(26,(20,10))))),(8,43)))));
	TREE * inapplicable = [&R] (1,(55,((56,(6,63)),((43,8),((21,((67,(26,(20,10))),((((64,((18,(57,7)),((39,(33,(73,(49,74)))),(75,(9,(65,((28,69),((52,16),(((71,(23,15)),(51,35)),(19,(17,4))))))))))),(31,((12,((45,61),(13,(2,36)))),(38,58)))),(70,(22,27))),(29,(42,(44,(41,((((24,((40,(54,(32,30))),(59,(68,(72,60))))),(50,46)),(25,(14,(53,(37,(47,48)))))),(34,(3,62)))))))))),(11,(5,66)))))));
	TREE * inapplicable = [&R] (1,(55,((56,(63,6)),((43,8),((21,(26,(20,10))),((67,(29,(42,(44,(41,(((25,(14,(53,(37,(47,48))))),((46,50),(24,((59,(68,(60,72))),(40,(54,(32,30))))))),(34,(62,3)))))))),((66,(5,11)),((70,(27,22)),(64,((31,((58,38),(12,((61,45),(13,(36,2)))))),((18,(7,57)),(((33,(49,73)),(39,74)),(75,(9,(65,(28,((69,(52,16)),((71,((15,23),(51,35))),(19,(17,4))))))))))))))))))));
	TREE * inapplicable = [&R] (1,(55,((56,(6,63)),((8,43),((11,(66,5)),(21,((67,(26,(10,20))),((29,(42,(41,(((25,(14,((53,44),(37,(48,47))))),((24,((40,(54,(32,30))),(59,(68,(72,60))))),(50,46))),(34,(3,62)))))),((70,(22,27)),(64,(((18,(57,7)),((75,(9,(65,((((16,52),((71,(23,15)),(35,51))),(19,(17,4))),(69,28))))),(39,(33,(74,(49,73)))))),(31,((38,58),(12,((13,(36,2)),(45,61))))))))))))))));
	TREE * inapplicable = [&R] (1,(55,((56,(6,63)),((43,8),((67,((21,(26,(20,10))),((((22,70),(27,33)),(((31,((38,58),(12,((61,45),(13,(36,2)))))),((7,(18,57)),((39,(49,(74,73))),(9,(65,((((52,16),(19,(4,17))),((71,(15,23)),(51,35))),(69,28))))))),(75,64))),(29,(42,(((41,(25,44)),(((24,((68,(59,(60,72))),(40,(54,(32,30))))),(50,46)),(14,(53,(37,(48,47)))))),(34,(3,62)))))))),(11,(66,5)))))));
	TREE * inapplicable = [&R] (1,(55,((56,(63,6)),((43,8),((21,((67,(26,(20,10))),((29,(42,(((34,(3,62)),(44,(25,(14,((53,41),(37,(47,48))))))),((50,46),(24,((40,(54,(32,30))),(59,(68,(60,72))))))))),(((75,64),((31,(((12,(45,61)),(13,(2,36))),(58,38))),((57,(7,18)),(((65,((((16,52),(19,(17,4))),(71,((15,23),(51,35)))),(69,28))),(49,(74,73))),(9,39))))),((33,27),(22,70)))))),(11,(5,66)))))));
	TREE * inapplicable = [&R] (1,(55,((56,(6,63)),((8,43),((21,(26,(20,10))),((67,(29,(42,(41,((((50,46),(24,((68,(59,(72,60))),(40,(54,(30,32)))))),(25,(14,((44,53),(37,(47,48)))))),(34,(3,62))))))),((11,(66,5)),((70,(22,27)),(64,(((18,(57,7)),((75,(9,(65,((28,69),((16,52),(((71,(23,15)),(35,51)),(19,(4,17)))))))),(39,(33,(73,(74,49)))))),(31,((38,58),(12,((45,61),(13,(2,36))))))))))))))));
	TREE * inapplicable = [&R] (1,(55,((56,(6,63)),((((67,(29,(42,(41,((34,(62,3)),((25,(14,((53,44),(37,(47,48))))),((24,((40,(54,(30,32))),(68,(59,(72,60))))),(46,50)))))))),((66,(5,11)),((70,(22,27)),(64,(((18,(57,7)),((75,(9,(65,(69,(28,((16,52),((19,(4,17)),((71,(15,23)),(51,35))))))))),(39,(33,(49,(74,73)))))),(31,((12,((45,61),(13,(2,36)))),(38,58)))))))),(21,(26,(10,20)))),(8,43)))));
	TREE * inapplicable = [&R] (1,(55,((56,(63,6)),((8,43),((67,((21,(10,(26,20))),((29,(42,(44,(41,(((25,(14,(53,(37,(48,47))))),((50,46),(24,((59,(68,(60,72))),(40,(54,(30,32))))))),(34,(62,3))))))),((64,(((18,(7,57)),((39,(33,(74,(73,49)))),(75,(9,(65,(28,((69,(16,52)),(((71,(15,23)),(51,35)),(19,(17,4)))))))))),(31,((12,((45,61),(13,(2,36)))),(38,58))))),(70,(22,27)))))),(11,(66,5)))))));
	TREE * inapplicable = [&R] (1,(55,((56,(6,63)),((43,8),(((67,(29,(42,(((41,(44,25)),((14,(53,(37,(47,48)))),((46,50),(24,((40,(54,(32,30))),(59,(68,(72,60)))))))),(34,(3,62)))))),((((64,(((75,(9,(65,(28,((69,(52,16)),((71,((23,15),(35,51))),(19,(17,4)))))))),(39,(33,(74,(49,73))))),(18,(7,57)))),(31,((12,((61,45),(13,(36,2)))),(58,38)))),(70,(27,22))),(11,(5,66)))),(21,(26,(10,20))))))));
	TREE * inapplicable = [&R] (1,(55,(((43,8),((67,(((29,(42,((34,(3,62)),((41,(25,44)),(((50,46),(24,((68,(59,(72,60))),(40,(54,(30,32)))))),(14,(53,(37,(47,48))))))))),((70,(27,22)),(64,(((18,(7,57)),((75,(9,(65,(28,((69,((71,((15,23),(35,51))),(19,(17,4)))),(52,16)))))),(39,(33,(73,(74,49)))))),(31,((12,((13,(2,36)),(45,61))),(38,58))))))),(21,(26,(10,20))))),(11,(66,5)))),(56,(63,6)))));
	TREE * inapplicable = [&R] (1,(55,((56,(6,63)),((8,43),((67,((21,(26,(10,20))),((29,(42,(41,(((25,(14,((44,53),(37,(47,48))))),((50,46),(24,((40,(54,(32,30))),(59,(68,(60,72))))))),(34,(3,62)))))),((64,(((18,(7,57)),((75,(9,(65,((69,28),(((19,(4,17)),(71,((15,23),(35,51)))),(52,16)))))),((33,(73,49)),(74,39)))),(31,((12,((61,45),(13,(36,2)))),(38,58))))),(70,(22,27)))))),(11,(5,66)))))));
	TREE * inapplicable = [&R] (1,(55,(((8,43),((11,(66,5)),(21,((67,((29,(42,(25,(((14,(44,(53,(41,(37,(48,47)))))),(34,(62,3))),((46,50),(24,((40,(54,(32,30))),(68,(59,(72,60)))))))))),((27,(70,22)),(((33,(9,(39,(49,(65,((28,69),((71,((35,51),(15,23))),((19,(17,4)),(16,52))))))))),(73,(74,(12,((45,61),(13,(2,36))))))),((75,(31,(58,38))),(64,(18,(7,57)))))))),(26,(20,10)))))),(56,(6,63)))));
	TREE * inapplicable = [&R] (1,(55,((56,(63,6)),((43,8),((((11,(5,66)),((70,(22,27)),(64,((((75,(9,(65,((28,(69,(16,52))),((19,(17,4)),(71,((15,23),(51,35)))))))),(39,(33,(73,(49,74))))),(18,(57,7))),(31,((12,((45,61),(13,(2,36)))),(38,58))))))),(67,(29,(42,(44,(41,(((25,(14,(53,(37,(48,47))))),((50,46),(24,((68,(59,(72,60))),(40,(54,(30,32))))))),(34,(62,3))))))))),(21,(10,(20,26))))))));
	TREE * inapplicable = [&R] (1,(55,((56,(63,6)),((8,43),(((67,(29,(42,(41,(((25,(14,((44,53),(37,(48,47))))),((50,46),(24,((40,(54,(30,32))),(68,(59,(60,72))))))),(34,(3,62))))))),(((70,(27,22)),((64,((18,(57,7)),((75,(9,(65,(28,((69,(52,16)),((71,((23,15),(51,35))),(19,(4,17)))))))),(39,(33,(74,(49,73))))))),(31,((38,58),(12,((45,61),(13,(2,36)))))))),(11,(5,66)))),(21,(26,(10,20))))))));
	TREE * inapplicable = [&R] (1,(55,(((((67,(29,(42,(44,(41,((34,(62,3)),((25,(14,(53,(37,(47,48))))),((24,((40,(54,(30,32))),(68,(59,(72,60))))),(46,50))))))))),((11,(66,5)),((70,(22,27)),(64,(((18,(57,7)),((75,(9,(65,((28,69),(((19,(4,17)),(16,52)),(71,((15,23),(51,35)))))))),((33,(49,73)),(74,39)))),(31,((12,((13,(2,36)),(45,61))),(38,58)))))))),(21,(10,(20,26)))),(8,43)),(56,(6,63)))));
	TREE * inapplicable = [&R] (1,(55,((56,(6,63)),((43,8),((21,((67,(26,(20,10))),(((64,(((18,(57,7)),((39,(33,(49,(73,74)))),(75,(9,(65,(28,((69,(52,16)),((71,((23,15),(51,35))),(19,(17,4)))))))))),(31,((12,((45,61),(13,(2,36)))),(38,58))))),(70,(22,27))),(29,(42,(44,(41,((((24,((40,(54,(32,30))),(68,(59,(72,60))))),(50,46)),(25,(14,(53,(37,(47,48)))))),(34,(3,62)))))))))),(11,(5,66)))))));
	TREE * inapplicable = [&R] (1,(55,(((8,43),((21,((67,(26,(10,20))),((29,(42,(((41,(25,44)),(((46,50),(24,((40,(54,(32,30))),(68,(59,(60,72)))))),(14,(53,(37,(48,47)))))),(34,(62,3))))),((70,(22,27)),((64,(((75,(9,(65,(28,((69,((71,((23,15),(51,35))),(19,(17,4)))),(16,52)))))),(39,(33,(74,(73,49))))),(18,(57,7)))),(31,((12,((61,45),(13,(36,2)))),(58,38)))))))),(11,(5,66)))),(56,(6,63)))));
	TREE * inapplicable = [&R] (1,(55,((56,(63,6)),(((11,(66,5)),(21,((67,(26,(10,20))),(((70,(22,27)),(64,((((75,(9,(65,((28,69),(((16,52),(19,(4,17))),((71,(23,15)),(51,35))))))),(39,(33,(73,(74,49))))),(18,(57,7))),(31,((58,38),(12,((45,61),(13,(2,36))))))))),(29,(42,(41,((((24,((68,(59,(72,60))),(40,(54,(32,30))))),(46,50)),(25,(14,((44,53),(37,(47,48)))))),(34,(62,3)))))))))),(43,8)))));
	TREE * inapplicable = [&R] (1,(55,((56,(6,63)),((43,8),((21,((67,(26,(10,20))),((29,(42,((44,(25,(((41,14),(53,(37,(47,48)))),(34,(62,3))))),((50,46),(24,((40,(54,(30,32))),(59,(68,(60,72))))))))),(((70,22),(33,27)),((((57,(7,18)),((39,9),((49,(74,73)),(65,((28,69),(((52,16),(19,(4,17))),(71,((23,15),(35,51))))))))),(31,((38,58),((12,(45,61)),(13,(36,2)))))),(75,64)))))),(11,(5,66)))))));
	TREE * inapplicable = [&R] (1,(55,((56,(6,63)),((8,43),(((67,(29,(42,(44,(41,((34,(3,62)),((25,(14,(53,(37,(47,48))))),((46,50),(24,((40,(54,(30,32))),(59,(68,(72,60))))))))))))),((11,(5,66)),((70,(27,22)),(64,(((18,(7,57)),((75,(9,(65,((69,28),(((52,16),(19,(4,17))),((71,(23,15)),(51,35))))))),((33,(73,49)),(74,39)))),(31,((12,((13,(36,2)),(61,45))),(58,38)))))))),(21,(10,(26,20))))))));
	TREE * inapplicable = [&R] (1,(55,((56,(6,63)),((8,43),((((66,(5,11)),((70,(27,22)),(64,((31,((12,((13,(36,2)),(61,45))),(58,38))),((18,(7,57)),((75,(9,(65,((28,69),(((16,52),((35,(23,15)),(71,51))),(19,(4,17))))))),((33,(73,49)),(39,74)))))))),(67,(29,(42,(44,(41,(((25,(14,(53,(37,(47,48))))),((46,50),(24,((40,(54,(30,32))),(68,(59,(60,72))))))),(34,(3,62))))))))),(21,(26,(20,10))))))));
	TREE * inapplicable = [&R] (1,(55,((56,(6,63)),((43,8),((((66,(5,11)),((70,(22,27)),(64,(((18,(57,7)),((75,(9,(65,(28,((69,((19,(17,4)),(71,((15,23),(51,35))))),(16,52)))))),((33,(49,73)),(39,74)))),(31,((12,((13,(2,36)),(45,61))),(38,58))))))),(67,(29,(42,(41,(((25,(14,((53,44),(37,(48,47))))),((50,46),(24,((59,(68,(72,60))),(40,(54,(30,32))))))),(34,(62,3)))))))),(21,(26,(10,20))))))));
	TREE * inapplicable = [&R] (1,(55,((56,(63,6)),((43,8),((11,(5,66)),(67,((21,(10,(20,26))),((29,(42,(44,(41,(((25,(14,(53,(37,(47,48))))),((46,50),(24,((68,(59,(72,60))),(40,(54,(32,30))))))),(34,(3,62))))))),((70,(27,22)),(64,((((75,(9,(65,(28,((69,((71,((23,15),(35,51))),(19,(4,17)))),(52,16)))))),(39,(33,(73,(74,49))))),(18,(7,57))),(31,((12,((13,(36,2)),(61,45))),(58,38))))))))))))));
	TREE * inapplicable = [&R] (1,(55,((56,(6,63)),((8,43),((21,(10,(26,20))),((67,(29,(42,((((14,(53,(37,(48,47)))),((50,46),(24,((59,(68,(72,60))),(40,(54,(30,32))))))),(41,(44,25))),(34,(3,62)))))),((11,(66,5)),((70,(22,27)),((64,((18,(57,7)),((75,(9,(65,(28,((69,(16,52)),((71,((23,15),(35,51))),(19,(4,17)))))))),(39,(33,(73,(74,49))))))),(31,((38,58),(12,((45,61),(13,(2,36)))))))))))))));
	TREE * inapplicable = [&R] (1,(55,((56,(6,63)),((43,8),((21,((67,(26,(10,20))),((((22,70),(27,33)),(((31,((38,58),(12,((61,45),(13,(36,2)))))),(((39,(49,(74,73))),(9,(65,((((52,16),(19,(4,17))),((71,(15,23)),(51,35))),(69,28))))),(57,(18,7)))),(75,64))),(29,(42,(((((24,((68,(59,(60,72))),(40,(54,(32,30))))),(50,46)),(14,(53,(37,(48,47))))),(34,(3,62))),(41,(44,25)))))))),(11,(66,5)))))));
	TREE * inapplicable = [&R] (1,(55,(((8,43),((67,((21,(10,(26,20))),((29,(42,(((41,(44,25)),(((50,46),(24,((40,(54,(30,32))),(68,(59,(60,72)))))),(14,(53,(37,(48,47)))))),(34,(3,62))))),((70,(22,27)),(64,(((18,(57,7)),((75,(9,(65,((28,(69,(52,16))),((19,(4,17)),(71,((23,15),(35,51)))))))),((33,(49,73)),(74,39)))),(31,((12,((45,61),(13,(2,36)))),(38,58))))))))),(11,(5,66)))),(56,(6,63)))));
	TREE * inapplicable = [&R] (1,(55,((56,(6,63)),((8,43),((67,((21,(10,(20,26))),((29,(42,(44,(41,(((25,(14,(53,(37,(48,47))))),((50,46),(24,((59,(68,(60,72))),(40,(54,(30,32))))))),(34,(62,3))))))),(((64,((18,(7,57)),((39,(33,(74,(49,73)))),(75,(9,(65,((69,28),((52,16),(((71,(15,23)),(51,35)),(19,(17,4))))))))))),(31,((12,((45,61),(13,(2,36)))),(38,58)))),(70,(22,27)))))),(11,(66,5)))))));
	TREE * inapplicable = [&R] (1,(55,(((8,43),(((67,(29,(42,(44,(41,((34,(62,3)),((25,(14,(53,(37,(47,48))))),((46,50),(24,((40,(54,(32,30))),(59,(68,(72,60))))))))))))),(((70,(22,27)),(64,(((18,(57,7)),((75,(9,(65,((28,69),((((35,(15,23)),(71,51)),(16,52)),(19,(4,17))))))),(39,(33,(73,(49,74)))))),(31,((58,38),(12,((13,(36,2)),(61,45)))))))),(66,(5,11)))),(21,(26,(10,20))))),(56,(6,63)))));
	TREE * inapplicable = [&R] (1,(55,((56,(6,63)),((8,43),((11,(66,5)),(21,(26,((20,10),(67,((29,(42,(41,(((25,(14,((44,53),(37,(48,47))))),((46,50),(24,((40,(54,(32,30))),(59,(68,(60,72))))))),(34,(3,62)))))),(((22,70),(33,27)),((((57,(7,18)),(((65,((28,69),(((16,52),((71,51),(35,(15,23)))),(19,(17,4))))),(49,(73,74))),(39,9))),(31,(((12,(61,45)),(13,(2,36))),(58,38)))),(64,75)))))))))))));
	TREE * inapplicable = [&R] (1,(55,(((8,43),((67,((21,(26,(20,10))),((29,(42,(((41,(44,25)),(((50,46),(24,((40,(54,(30,32))),(59,(68,(60,72)))))),(14,(53,(37,(48,47)))))),(34,(3,62))))),((70,(27,22)),(64,(((18,(57,7)),((75,(9,(65,(28,((69,(52,16)),((19,(4,17)),((71,(23,15)),(35,51)))))))),(39,(33,(74,(73,49)))))),(31,((12,((45,61),(13,(2,36)))),(38,58))))))))),(11,(5,66)))),(56,(6,63)))));
	TREE * inapplicable = [&R] (1,(55,((56,(63,6)),(((11,(66,5)),(67,(((29,(42,(44,(41,((34,(3,62)),((25,(14,(53,(37,(47,48))))),((46,50),(24,((40,(54,(32,30))),(59,(68,(72,60)))))))))))),((70,(22,27)),((64,(((39,(33,(49,(74,73)))),(75,(9,(65,(28,((69,((71,((23,15),(35,51))),(19,(4,17)))),(16,52))))))),(18,(7,57)))),(31,((58,38),(12,((13,(36,2)),(61,45)))))))),(21,(10,(20,26)))))),(43,8)))));
	TREE * inapplicable = [&R] (1,(55,((56,(63,6)),((43,8),((11,(5,66)),(21,((67,((29,(42,(44,(41,(((25,(14,(53,(37,(47,48))))),((24,((40,(54,(30,32))),(59,(68,(60,72))))),(46,50))),(34,(62,3))))))),((70,(27,22)),(64,(((18,(7,57)),((75,(9,(65,((28,(69,(52,16))),((19,(4,17)),(71,((15,23),(51,35)))))))),(39,(33,(73,(74,49)))))),(31,((58,38),(12,((13,(2,36)),(61,45)))))))))),(26,(20,10)))))))));
	TREE * inapplicable = [&R] (1,(55,((56,(63,6)),((43,8),((21,((67,((29,(42,(25,(((14,((53,(41,44)),(37,(47,48)))),(34,(3,62))),((50,46),(24,((40,(54,(32,30))),(59,(68,(60,72)))))))))),(((64,75),(((57,(7,18)),((39,(49,(73,74))),(9,(65,((((19,(17,4)),(52,16)),(71,((15,23),(51,35)))),(28,69)))))),(31,((12,((45,61),(13,(2,36)))),(58,38))))),((33,27),(22,70))))),(26,(20,10)))),(11,(66,5)))))));
	TREE * inapplicable = [&R] (1,(55,((56,(63,6)),((43,8),((21,(26,(20,10))),((67,(29,(42,(44,(41,(((25,(14,(53,(37,(47,48))))),((46,50),(24,((68,(59,(60,72))),(40,(54,(32,30))))))),(34,(62,3)))))))),((11,(66,5)),((70,(27,22)),(64,(((18,(7,57)),((39,(33,(49,(74,73)))),(75,(9,(65,((28,69),(((52,16),(19,(4,17))),((71,(15,23)),(51,35))))))))),(31,((58,38),(12,((61,45),(13,(36,2))))))))))))))));
	TREE * inapplicable = [&R] (1,(55,(((8,43),((11,(66,5)),(21,((67,(26,(10,20))),((29,(42,(41,(((25,(14,((53,44),(37,(47,48))))),((50,46),(24,((40,(54,(30,32))),(59,(68,(60,72))))))),(34,(3,62)))))),(((70,22),(27,33)),(64,(((57,(7,18)),((75,(9,(65,((69,(28,(16,52))),((19,(4,17)),((71,(15,23)),(35,51))))))),((39,74),(49,73)))),(31,((12,((13,(36,2)),(61,45))),(38,58))))))))))),(56,(63,6)))));
	TREE * inapplicable = [&R] (1,(55,(((8,43),((11,(66,5)),(21,((67,((29,(42,(25,(((14,(53,((41,44),(37,(48,47))))),(34,(62,3))),((46,50),(24,((40,(54,(32,30))),(68,(59,(72,60)))))))))),((27,(70,22)),(((33,(9,(39,(49,(65,((28,69),((71,((35,51),(15,23))),((19,(17,4)),(16,52))))))))),(73,(74,(12,((45,61),(13,(2,36))))))),((75,(31,(58,38))),(64,(18,(7,57)))))))),(26,(20,10)))))),(56,(6,63)))));
	TREE * inapplicable = [&R] (1,(55,((56,(63,6)),(((21,((67,((29,(42,(44,(41,(((25,(14,(53,(37,(47,48))))),((24,((40,(54,(30,32))),(68,(59,(72,60))))),(50,46))),(34,(62,3))))))),((64,(((18,(57,7)),(((73,49),(65,((69,28),(((52,16),(19,(4,17))),(71,((23,15),(51,35))))))),(9,39))),(75,(31,((12,((45,61),(13,(36,2)))),(38,58)))))),((70,22),(27,(74,33)))))),(26,(10,20)))),(11,(5,66))),(8,43)))));
END;
